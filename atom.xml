<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Zhen Lu&#39;s blog</title>
<link>https://leslie-lu.github.io/atom.html</link>
<atom:link href="https://leslie-lu.github.io/atom.xml" rel="self" type="application/rss+xml"/>
<description>Zhen Lu&#39;s blog</description>
<language>en</language>
<generator>quarto-1.4.554</generator>
<lastBuildDate>Sat, 11 May 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>最优分类阈值</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/05/11/optimal_threshold/</link>
  <description><![CDATA[ 





<p>这里我们借助<em>scikit-learn</em>来探讨分类问题中阈值的选择。</p>
<section id="数据准备和参数选择" class="level3">
<h3 class="anchored" data-anchor-id="数据准备和参数选择">数据准备和参数选择</h3>
<p>首先是数据准备：</p>
<div id="libraries-n-things" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_breast_cancer</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> confusion_matrix</span>
<span id="cb1-8"></span>
<span id="cb1-9">np.set_printoptions(suppress<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, precision<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb1-10">pd.options.mode.chained_assignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb1-11">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.max_columns'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb1-12">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.width'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb1-13"></span>
<span id="cb1-14">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_breast_cancer()</span>
<span id="cb1-15">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>]</span>
<span id="cb1-16">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>]</span>
<span id="cb1-17"></span>
<span id="cb1-18">Xtrain, Xvalid, ytrain, yvalid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X, y, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.20</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">516</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Xtrain.shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>Xtrain<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Xvalid.shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>Xvalid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Xtrain.shape: (455, 30)
Xvalid.shape: (114, 30)</code></pre>
</div>
</div>
<p>模型我们这里选择<em>随机森林</em>。超参的选择，基于<code>GridSearchCV</code>，这里也不赘述。有一个点需要说明，由于使用的是肿瘤数据集，在这种情况下，我们更关注的是<code>recall</code>，即尽量减少假阴性的情况。因而，我们在训练模型时，也是将recall作为评价指标。</p>
<div id="train-model-rf" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.ensemble <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> RandomForestClassifier</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GridSearchCV</span>
<span id="cb3-3"></span>
<span id="cb3-4">param_grid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb3-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n_estimators"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>],</span>
<span id="cb3-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"min_samples_leaf"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>],</span>
<span id="cb3-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ccp_alpha"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.3</span>]</span>
<span id="cb3-8">    }</span>
<span id="cb3-9"></span>
<span id="cb3-10">mdl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GridSearchCV(</span>
<span id="cb3-11">    RandomForestClassifier(random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">516</span>), </span>
<span id="cb3-12">    param_grid, </span>
<span id="cb3-13">    scoring<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"recall"</span>, </span>
<span id="cb3-14">    cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb3-15">    )</span>
<span id="cb3-16"></span>
<span id="cb3-17">mdl.fit(Xtrain, ytrain)</span>
<span id="cb3-18"></span>
<span id="cb3-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"best parameters: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mdl<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>best_params_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>best parameters: {'ccp_alpha': 0, 'min_samples_leaf': 4, 'n_estimators': 100}</code></pre>
</div>
</div>
</section>
<section id="模型预测" class="level3">
<h3 class="anchored" data-anchor-id="模型预测">模型预测</h3>
<p>拿到模型后，自然我们可以开始预测：</p>
<div id="cell-predict" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">ypred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mdl.predict_proba(Xvalid)[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb5-2">ypred</span></code></pre></div>
<div id="predict" class="cell-output cell-output-display" data-execution_count="3">
<pre><code>array([0.005     , 0.82743637, 0.97088095, 0.        , 0.        , 1.        , 0.98020202, 0.67380556, 0.        , 0.99333333, 0.9975    , 0.30048576, 0.9528113 , 0.99666667, 0.04102381, 0.99444444, 1.        , 0.828226  , 0.        , 0.        , 0.97916667, 1.        , 0.99607143, 0.90425163, 0.        , 0.02844156, 0.99333333, 0.98183333, 0.9975    , 0.08869769, 0.97369841, 0.        , 1.        , 0.71100866, 0.96022727, 0.        , 0.71200885, 0.06103175, 0.005     , 0.99490476, 0.1644127 , 0.        , 0.23646934, 1.        , 0.57680164, 0.64901715, 0.9975    , 0.61790818, 0.95509668, 0.99383333, 0.04570455, 0.97575758, 1.        , 0.47115815, 0.92422619, 0.77371415, 0.        , 1.        , 0.26198657, 0.        , 0.28206638, 0.95216162, 0.98761905, 0.99464286, 0.98704762, 0.85579351, 0.10036905, 0.00222222, 0.98011905, 0.99857143, 0.92285967, 0.95180556, 0.97546947, 0.84433189, 0.005     , 0.99833333, 0.83616339, 1.        , 0.9955    , 1.        , 0.99833333, 1.        ,
       0.86399315, 0.9807381 , 0.        , 0.99833333, 0.9975    , 0.        , 0.98733333, 0.96822727, 0.23980827, 0.7914127 , 0.        , 0.98133333, 1.        , 1.        , 0.89251019, 0.9498226 , 0.18943254, 0.83494391, 0.9975    , 1.        , 0.77079113, 0.99722222, 0.30208297, 1.        , 0.92111977, 0.99428571, 0.91936508, 0.47118074, 0.98467172, 0.006     , 0.05750305, 0.96954978])</code></pre>
</div>
</div>
<p>这个时候，我们要讲的东西就来了。一般地，我们会选择0.50作为分类阈值，即大于0.50的为正类，小于0.50的为负类。</p>
<div id="threshold-0.50" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">ypred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mdl.predict_proba(Xvalid)[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-2">yhat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mdl.predict(Xvalid).reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-3">preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.concatenate([ypred, yhat], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(preds)</span>
<span id="cb7-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(confusion_matrix(yvalid, yhat))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[0.005      0.        ]
 [0.82743637 1.        ]
 [0.97088095 1.        ]
 [0.         0.        ]
 [0.         0.        ]
 [1.         1.        ]
 [0.98020202 1.        ]
 [0.67380556 1.        ]
 [0.         0.        ]
 [0.99333333 1.        ]
 [0.9975     1.        ]
 [0.30048576 0.        ]
 [0.9528113  1.        ]
 [0.99666667 1.        ]
 [0.04102381 0.        ]
 [0.99444444 1.        ]
 [1.         1.        ]
 [0.828226   1.        ]
 [0.         0.        ]
 [0.         0.        ]
 [0.97916667 1.        ]
 [1.         1.        ]
 [0.99607143 1.        ]
 [0.90425163 1.        ]
 [0.         0.        ]
 [0.02844156 0.        ]
 [0.99333333 1.        ]
 [0.98183333 1.        ]
 [0.9975     1.        ]
 [0.08869769 0.        ]
 [0.97369841 1.        ]
 [0.         0.        ]
 [1.         1.        ]
 [0.71100866 1.        ]
 [0.96022727 1.        ]
 [0.         0.        ]
 [0.71200885 1.        ]
 [0.06103175 0.        ]
 [0.005      0.        ]
 [0.99490476 1.        ]
 [0.1644127  0.        ]
 [0.         0.        ]
 [0.23646934 0.        ]
 [1.         1.        ]
 [0.57680164 1.        ]
 [0.64901715 1.        ]
 [0.9975     1.        ]
 [0.61790818 1.        ]
 [0.95509668 1.        ]
 [0.99383333 1.        ]
 [0.04570455 0.        ]
 [0.97575758 1.        ]
 [1.         1.        ]
 [0.47115815 0.        ]
 [0.92422619 1.        ]
 [0.77371415 1.        ]
 [0.         0.        ]
 [1.         1.        ]
 [0.26198657 0.        ]
 [0.         0.        ]
 [0.28206638 0.        ]
 [0.95216162 1.        ]
 [0.98761905 1.        ]
 [0.99464286 1.        ]
 [0.98704762 1.        ]
 [0.85579351 1.        ]
 [0.10036905 0.        ]
 [0.00222222 0.        ]
 [0.98011905 1.        ]
 [0.99857143 1.        ]
 [0.92285967 1.        ]
 [0.95180556 1.        ]
 [0.97546947 1.        ]
 [0.84433189 1.        ]
 [0.005      0.        ]
 [0.99833333 1.        ]
 [0.83616339 1.        ]
 [1.         1.        ]
 [0.9955     1.        ]
 [1.         1.        ]
 [0.99833333 1.        ]
 [1.         1.        ]
 [0.86399315 1.        ]
 [0.9807381  1.        ]
 [0.         0.        ]
 [0.99833333 1.        ]
 [0.9975     1.        ]
 [0.         0.        ]
 [0.98733333 1.        ]
 [0.96822727 1.        ]
 [0.23980827 0.        ]
 [0.7914127  1.        ]
 [0.         0.        ]
 [0.98133333 1.        ]
 [1.         1.        ]
 [1.         1.        ]
 [0.89251019 1.        ]
 [0.9498226  1.        ]
 [0.18943254 0.        ]
 [0.83494391 1.        ]
 [0.9975     1.        ]
 [1.         1.        ]
 [0.77079113 1.        ]
 [0.99722222 1.        ]
 [0.30208297 0.        ]
 [1.         1.        ]
 [0.92111977 1.        ]
 [0.99428571 1.        ]
 [0.91936508 1.        ]
 [0.47118074 0.        ]
 [0.98467172 1.        ]
 [0.006      0.        ]
 [0.05750305 0.        ]
 [0.96954978 1.        ]]
[[35  3]
 [ 1 75]]</code></pre>
</div>
</div>
<p>但是，这个阈值是可以调整的。我们可以通过调整阈值来达到不同的目的。比如，我们可以通过调整阈值来减少假阴性的情况，这在类别不平衡时尤为重要。</p>
</section>
<section id="阈值的选择" class="level3">
<h3 class="anchored" data-anchor-id="阈值的选择">阈值的选择</h3>
<p>我们介绍几种常用的方法。</p>
<section id="阳性类别prevalance" class="level4">
<h4 class="anchored" data-anchor-id="阳性类别prevalance">1. 阳性类别prevalance</h4>
<p>我们看下这个数据集中阳性类别的比例：</p>
<div id="positive-prevalance" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Proportion of positives in training set: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>ytrain<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ytrain<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Proportion of positives in training set: 0.62</code></pre>
</div>
</div>
<p>这个toy数据集很夸张哈，达到了0.62。在实际应用中，这个比例可能只有10%或者1%。这里我们只是拿它示例哈，用这个prevalance来作为阈值。</p>
<div id="threshold-prevalance" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ytrain.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ytrain.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb11-2">yhat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.where(ypred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> thresh, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb11-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(confusion_matrix(yvalid, yhat))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[34  4]
 [ 0 76]]</code></pre>
</div>
</div>
<p>考虑prevalance的方法，可以在类别不平衡的情况下，减少假阴性的情况。</p>
</section>
<section id="最优f1指数" class="level4">
<h4 class="anchored" data-anchor-id="最优f1指数">2. 最优F1指数</h4>
<p>F1指数是precision和recall的调和平均数。我们可以通过最大F1指数来选择最优的阈值。</p>
<p>F1最高为0.471，我们采用它来进行预测：</p>
<div id="threshold-f1-predict" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.471</span></span>
<span id="cb13-2">yhat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.where(ypred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> thresh, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb13-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(confusion_matrix(yvalid, yhat))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[34  4]
 [ 0 76]]</code></pre>
</div>
</div>
</section>
<section id="roc曲线" class="level4">
<h4 class="anchored" data-anchor-id="roc曲线">3. ROC曲线</h4>
<p>我们可以通过<a href="https://mp.weixin.qq.com/s/Zw85hAdx7VdwCioG5NwHQw">ROC曲线</a>来选择最优的阈值。ROC曲线下的面积AUC越大，说明模型越好。我们可以选择ROC曲线最靠近左上角的点作为最优阈值。</p>
</section>
<section id="prc曲线" class="level4">
<h4 class="anchored" data-anchor-id="prc曲线">4. PRC曲线</h4>
<p>PRC曲线是<a href="https://mp.weixin.qq.com/s/Zw85hAdx7VdwCioG5NwHQw">precision-recall曲线</a>。相比于ROC曲线，PRC曲线更适合类别不平衡的情况。我们主要选择PRC曲线最靠近右上角的点作为最优阈值。</p>
</section>
<section id="分别关注precision和recall" class="level4">
<h4 class="anchored" data-anchor-id="分别关注precision和recall">5. 分别关注precision和recall</h4>
<p>我们可以通过调整阈值来分别关注precision和recall。比如，我们可以通过调整阈值来提高recall，减少假阴性的情况。</p>
<p>代码已经放进了<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>里。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{lu2024,
  author = {Lu, Zhen},
  title = {最优分类阈值},
  date = {2024-05-11},
  url = {https://leslie-lu.github.io//blog/2024/05/11/optimal_threshold},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-lu2024" class="csl-entry quarto-appendix-citeas">
Lu, Zhen. 2024. <span>“最优分类阈值.”</span> May 11, 2024. <a href="https://leslie-lu.github.io//blog/2024/05/11/optimal_threshold">https://leslie-lu.github.io//blog/2024/05/11/optimal_threshold</a>.
</div></div></section></div> ]]></description>
  <category>python</category>
  <category>machine learning</category>
  <guid>https://leslie-lu.github.io/blog/2024/05/11/optimal_threshold/</guid>
  <pubDate>Sat, 11 May 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202405112020810.png" medium="image" type="image/png"/>
</item>
</channel>
</rss>
