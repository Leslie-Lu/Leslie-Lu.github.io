<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Zhen Lu&#39;s blog</title>
<link>https://leslie-lu.github.io/atom.html</link>
<atom:link href="https://leslie-lu.github.io/atom.xml" rel="self" type="application/rss+xml"/>
<description>Zhen Lu&#39;s blog</description>
<language>en</language>
<generator>quarto-1.6.38</generator>
<lastBuildDate>Tue, 26 Nov 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>连锁不平衡</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/11/26/LD/</link>
  <description><![CDATA[ 





<section id="连锁不平衡linkage-disequilibrium-ld" class="level3">
<h3 class="anchored" data-anchor-id="连锁不平衡linkage-disequilibrium-ld">连锁不平衡（Linkage Disequilibrium, LD）</h3>
<p><strong><a href="https://en.wikipedia.org/wiki/Linkage_disequilibrium" title="wiki">连锁不平衡（LD）</a></strong> 是群体遗传学和基因组学中的一个基本概念，用于描述两个或多个遗传标记（通常是单核苷酸多态性，SNP）之间的<strong>非随机关联</strong>。当某些 SNP 的等位基因 （allele）的组合在一个群体中出现的频率高于根据单独等位基因频率计算的预期频率时，这种现象被称为连锁不平衡。LD 是基因组关联分析（GWAS）和基因组选择等研究的重要基础，用于识别与复杂性状相关的遗传变异，并帮助推断遗传位点之间的关系。</p>
<p>连锁是指基因组中靠得很近的基因或遗传标记倾向于一起遗传的现象，这是由染色体重组的随机性和空间上的接近性引起的。而 LD 则描述了在一个群体中等位基因组合的统计学偏差，如果遗传标记之间的组合频率偏离预期（非随机关联），就表明存在 LD。</p>
</section>
<section id="ld的数学描述" class="level3">
<h3 class="anchored" data-anchor-id="ld的数学描述"><strong>LD的数学描述</strong></h3>
<p>连锁不平衡通常用两个指标来描述：<img src="https://latex.codecogs.com/png.latex?D'"> 和 <img src="https://latex.codecogs.com/png.latex?r%5E2">。</p>
<section id="不平衡系数d" class="level4">
<h4 class="anchored" data-anchor-id="不平衡系数d"><strong>1. 不平衡系数（D）</strong></h4>
<p>定义两个标记 <img src="https://latex.codecogs.com/png.latex?A"> 和 <img src="https://latex.codecogs.com/png.latex?B"> 的四种可能等位基因组合及其频率： - <img src="https://latex.codecogs.com/png.latex?A_1B_1">, <img src="https://latex.codecogs.com/png.latex?A_1B_2">, <img src="https://latex.codecogs.com/png.latex?A_2B_1">, <img src="https://latex.codecogs.com/png.latex?A_2B_2">，分别表示两位点上的不同等位基因组合。</p>
<p>设： - <img src="https://latex.codecogs.com/png.latex?P(A_1B_1)">：观察到 <img src="https://latex.codecogs.com/png.latex?A_1"> 和 <img src="https://latex.codecogs.com/png.latex?B_1"> 同时出现的频率。 - <img src="https://latex.codecogs.com/png.latex?P(A_1)">：<img src="https://latex.codecogs.com/png.latex?A_1"> 的边际频率。 - <img src="https://latex.codecogs.com/png.latex?P(B_1)">：<img src="https://latex.codecogs.com/png.latex?B_1"> 的边际频率。</p>
<p>则不平衡系数 <img src="https://latex.codecogs.com/png.latex?D"> 定义为：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AD%20=%20P(A_1B_1)%20-%20P(A_1)P(B_1)%0A"></p>
<ul>
<li>当 <img src="https://latex.codecogs.com/png.latex?D%20=%200"> 时，标记之间没有 LD，即独立遗传。</li>
<li>当 <img src="https://latex.codecogs.com/png.latex?D%20%5Cneq%200"> 时，标记之间存在 LD。</li>
</ul>
<p>然而，由于 <img src="https://latex.codecogs.com/png.latex?D"> 的值依赖于等位基因的频率，其绝对值没有固定的范围，因此通常会对其进行标准化。</p>
</section>
<section id="标准化不平衡系数d" class="level4">
<h4 class="anchored" data-anchor-id="标准化不平衡系数d"><strong>2. 标准化不平衡系数（<img src="https://latex.codecogs.com/png.latex?D'">）</strong></h4>
<p><img src="https://latex.codecogs.com/png.latex?%0AD'%20=%20%5Cfrac%7BD%7D%7BD_%7B%5Ctext%7Bmax%7D%7D%7D%0A"></p>
<p>其中 <img src="https://latex.codecogs.com/png.latex?D_%7B%5Ctext%7Bmax%7D%7D"> 是 <img src="https://latex.codecogs.com/png.latex?D"> 的可能最大值或最小值，取决于等位基因频率。</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?D'"> 的范围为 [-1, 1]。</li>
<li><img src="https://latex.codecogs.com/png.latex?D'%20=%201"> 表示完全连锁不平衡。</li>
</ul>
</section>
<section id="相关系数r2" class="level4">
<h4 class="anchored" data-anchor-id="相关系数r2"><strong>3. 相关系数（<img src="https://latex.codecogs.com/png.latex?r%5E2">）</strong></h4>
<p>但在群体遗传学中，其实我们更常用 <img src="https://latex.codecogs.com/png.latex?r%5E2"> 来衡量 LD：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ar%5E2%20=%20%5Cfrac%7BD%5E2%7D%7BP(A_1)P(A_2)P(B_1)P(B_2)%7D%0A"></p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?r%5E2"> 的范围为 [0, 1]。</li>
<li><img src="https://latex.codecogs.com/png.latex?r%5E2%20=%200">：标记之间完全独立。</li>
<li><img src="https://latex.codecogs.com/png.latex?r%5E2%20=%201">：标记之间完全关联。</li>
<li><img src="https://latex.codecogs.com/png.latex?r%5E2"> 的值通常用于评估 GWAS 研究中的 SNP 冗余。</li>
</ul>


<!-- -->

</section>
</section>

 ]]></description>
  <category>linkage disequilibrium</category>
  <category>LD</category>
  <category>genetics</category>
  <guid>https://leslie-lu.github.io/blog/2024/11/26/LD/</guid>
  <pubDate>Tue, 26 Nov 2024 00:00:00 GMT</pubDate>
  <media:content url="https://upload.wikimedia.org/wikipedia/commons/9/92/Linkage_Disequilibrium_Heatmap.png" medium="image" type="image/png"/>
</item>
<item>
  <title>累积风险图（Cumulative Hazard Plot）中的 Y 轴含义</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/11/22/cumulative_hazard/</link>
  <description><![CDATA[ 





<section id="问题" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="问题">问题</h3>
<p><a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>里有同学提问：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202411221925709.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">cumulative hazard plot</figcaption>
</figure>
</div>
<section id="累积风险函数" class="level4">
<h4 class="anchored" data-anchor-id="累积风险函数">累积风险函数</h4>
<p>在时间事件数据中，<strong>累积风险图（cumulative hazard plot）</strong>的 Y 轴表示的是累积风险函数（cumulative hazard function, <img src="https://latex.codecogs.com/png.latex?H(t)">）。<img src="https://latex.codecogs.com/png.latex?H(t)"> 描述的是从起始时间到 <img src="https://latex.codecogs.com/png.latex?t"> 时刻，某个事件发生的<strong>累积风险总和</strong>。它是通过对瞬时风险函数（即危险率，hazard rate, <img src="https://latex.codecogs.com/png.latex?h(t)">）在时间上的积分得到的，公式为 <span class="citation" data-cites="RN529">(Allison 2010)</span>：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AH(t)%20=%20%5Cint_%7B0%7D%5E%7Bt%7D%20h(u)%20%5C,%20du%0A"></p>
<p>其中，<img src="https://latex.codecogs.com/png.latex?h(t)"> 是已生存到 <img src="https://latex.codecogs.com/png.latex?t"> 时刻的对象在 <img src="https://latex.codecogs.com/png.latex?t"> 时刻发生事件的速率。<img src="https://latex.codecogs.com/png.latex?H(t)"> 没有上限值，它随着时间 <img src="https://latex.codecogs.com/png.latex?t"> 的增加而单调递增。</p>
</section>
<section id="累积风险与-hr风险比的关系" class="level4">
<h4 class="anchored" data-anchor-id="累积风险与-hr风险比的关系">累积风险与 HR（风险比）的关系</h4>
<p>HR 是比较两组（如治疗组与对照组）瞬时风险率 <img src="https://latex.codecogs.com/png.latex?h(t)"> 的比值：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AHR%20=%20%5Cfrac%7Bh_1(t)%7D%7Bh_2(t)%7D%0A"></p>
<p>它是一个相对指标，表示某组的风险率是另一组的多少倍。对 HR 的理解，可以类比 OR 的概念，只是 HR 是在时间上的比值，而 OR 无时间信息。如果时间对事件的影响较小（比如事件发生概率很低或者随访时间很短），HR 和 OR 的数值可能接近。但在事件发生率较高时，OR 通常会高于 HR，因为 OR 夸大了实际的效应。</p>
<p>前面的累积风险函数 <img src="https://latex.codecogs.com/png.latex?H(t)"> 与瞬时风险率 <img src="https://latex.codecogs.com/png.latex?h(t)"> 紧密相关，若 HR 在所有时间上恒定（即比例风险假设成立），则累积风险函数之间的关系为：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AH_1(t)%20=%20HR%20%5Ccdot%20H_2(t)%0A"></p>
<p>这意味着在比例风险假设成立的情况下，<strong>累积风险图中两组曲线的斜率比值大致等于 HR</strong>，即如果两组的 HR 恒定不变，则累积风险曲线在对数尺度下呈现平行关系。而如果 HR 随时间变化，累积风险曲线的差异会随着时间的推移而增大或缩小。从这个角度看，累积风险图可以通过曲线的趋势和两组曲线间的相对关系直观地展示 HR 的变化。</p>


<!-- -->


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-RN529" class="csl-entry">
Allison, Paul D. 2010. <em>Survival Analysis Using SAS: A Practical Guide</em>. Book. Sas Institute.
</div>
</div></section></div> ]]></description>
  <category>surival analysis</category>
  <category>cumulative hazard plot</category>
  <category>hazard function</category>
  <guid>https://leslie-lu.github.io/blog/2024/11/22/cumulative_hazard/</guid>
  <pubDate>Fri, 22 Nov 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202411221925709.png" medium="image" type="image/png"/>
</item>
<item>
  <title>R 中面向对象编程系统选择</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/10/02/oop/</link>
  <description><![CDATA[ <blockquote class="blockquote">
<p>我们在很久以前稍微介绍过 <a href="https://mp.weixin.qq.com/s/Y5qaF5pPnY3DS2FTm4njkA">R 语言的面向对象编程</a>，但是没有深入对比。今天我们将讨论 R 语言中的面向对象编程系统，包括 S3、S4 和 R6。</p>
</blockquote>
<p>在R语言中，面向对象编程（OOP，object oriented programming）提供了多种系统供用户选择。每种系统都有其独特的特点、优缺点以及适用场景。</p>
<section id="oop系统概述" class="level3"><h3 class="anchored" data-anchor-id="oop系统概述">OOP系统概述</h3>
<p>R主要有三种面向对象编程系统：</p>
<ol type="1">
<li><p><strong>S3</strong></p></li>
<li><p><strong>S4</strong></p></li>
<li><p><strong>R6</strong></p></li>
</ol>
<section id="s3-系统" class="level4"><h4 class="anchored" data-anchor-id="s3-系统">S3 系统</h4>
<p>S3 是一种轻量级的面向对象系统，主要通过使用属性来实现。它的优点在于简单易用，适合快速开发。</p>
<section id="特点" class="level5"><h5 class="anchored" data-anchor-id="特点">特点</h5>
<ul>
<li><p><strong>灵活性</strong>: S3 允许任意对象成为类。</p></li>
<li><p><strong>简洁性</strong>: 类定义和方法定义非常简单。</p></li>
<li><p><strong>动态性</strong>: 可以在运行时添加方法和属性。</p></li>
</ul></section><section id="示例代码" class="level5"><h5 class="anchored" data-anchor-id="示例代码">示例代码</h5>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">my_s3_class</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/structure.html">structure</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/list.html">list</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, class <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_class"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">print.my_class</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">obj</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/cat.html">cat</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The value is:"</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">obj</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">value</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\n"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">obj</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">my_s3_class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/print.html">print</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">obj</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The value is: 10 </code></pre>
</div>
</div>
</section></section><section id="s4系统" class="level4"><h4 class="anchored" data-anchor-id="s4系统">S4系统</h4>
<p>S4 系统比 S3 更严格，支持正式的类定义和方法。适合需要高可靠性的应用。</p>
<section id="特点-1" class="level5"><h5 class="anchored" data-anchor-id="特点-1">特点</h5>
<ul>
<li><p><strong>严格性</strong>: 类和方法都需要明确定义。</p></li>
<li><p><strong>类型检查</strong>: 提供更好的类型安全性。</p></li>
<li><p><strong>多重继承</strong>: 支持多重继承，增加灵活性。</p></li>
</ul></section><section id="示例代码-1" class="level5"><h5 class="anchored" data-anchor-id="示例代码-1">示例代码</h5>
<div class="cell">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">setClass</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myS4Class"</span>, slots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/list.html">list</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"numeric"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">setMethod</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"show"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myS4Class"</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">object</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/cat.html">cat</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The value is:"</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">object</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">value</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\n"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">obj</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myS4Class"</span>, value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">show</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">obj</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The value is: 20 </code></pre>
</div>
</div>
</section></section><section id="r6-系统" class="level4"><h4 class="anchored" data-anchor-id="r6-系统">R6 系统</h4>
<p>R6 是最新的 OOP 系统，支持封装、私有字段和方法，使得代码更模块化。</p>
<section id="特点-2" class="level5"><h5 class="anchored" data-anchor-id="特点-2">特点</h5>
<ul>
<li><p><strong>封装性</strong>: 支持私有字段和方法。</p></li>
<li><p><strong>简洁性</strong>: 语法与其他 OOP 语言相似。</p></li>
<li><p><strong>高效性</strong>: 对性能有较好的优化。</p></li>
</ul></section><section id="示例代码-2" class="level5"><h5 class="anchored" data-anchor-id="示例代码-2">示例代码</h5>
<div class="cell">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://r6.r-lib.org">R6</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">MyR6Class</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://r6.r-lib.org/reference/R6Class.html">R6Class</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MyR6Class"</span>,</span>
<span>  public <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/list.html">list</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span>    initialize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">value</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">value</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>,</span>
<span>    print_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/cat.html">cat</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The value is:"</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">value</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\n"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">obj</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">MyR6Class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">obj</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print_value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The value is: 30 </code></pre>
</div>
</div>
</section></section></section><section id="选择合适的系统" class="level3"><h3 class="anchored" data-anchor-id="选择合适的系统">选择合适的系统</h3>
<p>在选择 R 中的 OOP 系统时，考虑项目的复杂性、可维护性及团队的熟悉程度是关键。</p>
<ul>
<li><p>S3: 适合快速开发和简单应用。适合初学者或小型项目。</p></li>
<li><p>S4: 适合需要严格类型检查和复杂结构的应用。常用于研究领域或需要高可靠性的项目。</p></li>
<li><p>R6: 适合需要封装和私有成员的场景。适合大型项目和复杂数据结构的开发。</p></li>
</ul>
<p>完整代码已经放在了<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>里，感兴趣的同学可以自行查看。</p>


<!-- -->

</section> ]]></description>
  <category>r</category>
  <category>object oriented programming</category>
  <guid>https://leslie-lu.github.io/blog/2024/10/02/oop/</guid>
  <pubDate>Wed, 02 Oct 2024 00:00:00 GMT</pubDate>
  <media:content url="https://d2jdgazzki9vjm.cloudfront.net/tutorial/r/images/r-object-oriented-programming.png" medium="image" type="image/png"/>
</item>
<item>
  <title>星球JC | 高尿酸血症及相关代谢疾病风险模型</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/09/25/jc/</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>大家好，这一期预测模型星球Journal Club的分享来自青岛大学的 hedwig 同学。</p>
</blockquote>
<p>这篇文章是 2024年 发表在 science 子刊 advanced scicence，题为 Multimodal Machine Learning-Based Marker Enables Early Detection and Prognosis Prediction for Hyperuricemia <span class="citation" data-cites="RN1343">(Zeng et al. 2024)</span>。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409251439788.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">title</figcaption>
</figure>
</div>
<section id="研究背景" class="level3">
<h3 class="anchored" data-anchor-id="研究背景">研究背景</h3>
<p>高尿酸血症（HUA）是指由于体内尿酸生成增加或排泄减少而导致的血清尿酸（SUA）水平升高。SUA 升高不仅会导致痛风，同时也会增加其他代谢异常风险，如慢性肾病、高血压、心血管疾病以及糖尿病。因此，早期识别HUA和预测痛风风险，能够为提早干预和预后管理提供宝贵见解。</p>
<p>目前，HUA 或痛风的风险评估主要依赖于临床指标或多基因风险评分（PRSs），缺乏将遗传和临床特征相结合的预测模型。另外，现有模型只是单纯预测 HUA 是否发生，但没有更加具体地量化 HUA 风险。</p>
<p>本研究旨在结合遗传和临床数据，开发并验证一个叠加的多模态机器学习模型，以便及时识别 HUA，及早预测痛风以及代谢相关疾病。</p>
</section>
<section id="研究方法" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="研究方法">研究方法</h3>
<section id="研究类型" class="level4">
<h4 class="anchored" data-anchor-id="研究类型">研究类型</h4>
<p>多中心研究。</p>
</section>
<section id="研究人群" class="level4">
<h4 class="anchored" data-anchor-id="研究人群">研究人群</h4>
<p>英国和中国两个队列。</p>
<p>UKBB 是一项正在进行的前瞻性研究，研究对象为 2006 年至 2010 年间招募的 50 万名年龄在 40-69 岁之间的个体，收集数据包括临床、基因型以及多次随访数据；南方医院数据集包括接受健康体检的参与者的信息。参与者为从 2015 年至 2020 年期间到医院体检的年龄 ≥18 岁的人群。</p>
</section>
<section id="模型构建" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="模型构建">模型构建</h4>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409251446365.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">study design</figcaption>
</figure>
</div>
<p>UKBB 数据随机按 8:2 分为训练集和内部测试集；南方医院数据作为外部测试集。</p>
<p>筛选相关临床特征：根据以往文献选择了 10 个重要变量，此外，对于基因数据，采用 LASSO 筛选对 HUA 有预测价值的 SNP。考虑到基因数据和临床特征变量的尺度不同，研究对所有变量进行标准化处理。</p>
<p>构建预测模型：研究采用集成学习的方式，将多个机器学习模型集成起来，将基分类器输出的预测概率作为 meta-classifier 的输入特征。其中，基分类器包含 7 个模型：Light Gradient-Boosting Machine、classical extreme Gradient Boosting、Categorical Boosting、Random Forest、Adaptive Boosting、Logistic Regression 以及 K-Nearest Neighbor，meta-classifier 为 classical extreme Gradient Boosting。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409251448150.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">ensemble learning</figcaption>
</figure>
</div>
<p>预后价值判断：对于 meta-classifier 输出的概率，研究即视为 ISHUA 分值，使用最大约登指数进行 cutoff 的确定（全部使用终点为痛风的 cutoff），依据 ISHUA 的 cutoff 值，研究将人群分为低风险与高风险亚组，进而利用随访数据，使用 KM 生存曲线及 Cox 回归，评价其对痛风及代谢相关疾病预后的预测价值。</p>
<p>生活方式评价：利用模型划分的风险亚组，估计高风险组中生活方式与痛风及代谢相关疾病发生的相关关系。</p>
</section>
</section>
<section id="研究结果" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="研究结果">研究结果</h3>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409251450510.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">Table 1</figcaption>
</figure>
</div>
<p>对于临床特征：利用单因素 Logistic 回归分析 10 个临床特征与 HUA 之间的相关关系，筛选的临床特征均与高尿酸血症具有显著相关性。此外使用 Cox 回归分析这 10 个特征与与痛风之间的关系。</p>
<p>对于基因特征：从 GWAS 分析结果中选择与 SUA 相关（p 值小于 <img src="https://latex.codecogs.com/png.latex?5%5Ctimes%7B10%7D%5E5"> 或以往研究报道在跨种族人群中相关）的 SNP，对选中的 SNP 进行注释，并基于确定的 SNP 进行富集分析（GO 和 KEGG 分析）。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409251453156.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">enrichment analysis</figcaption>
</figure>
</div>
<section id="模型性能评价" class="level4">
<h4 class="anchored" data-anchor-id="模型性能评价">模型性能评价</h4>
<p>在训练集中，使用遗传特征的模型预测 HUA 的 AUC 为 0.703（95%CI：0.700-0.705），使用临床特征的模型预测 HUA 的 AUC 为 0.822（95%CI：0.820-0.824），而结合了遗传和临床特征的堆叠多模态模型 AUC 为 0.859（95%CI：0.857-0.861）。</p>
<p>在内部测试集和外部测试集中，堆叠多模态模型的预测性能也明显优于单独的遗传或临床模型。此外，基于两个年龄亚组（以 40 岁为界）评价模型表现，发现模型在不同年龄组中均具有较好的性能。</p>
</section>
<section id="ishua-的预后评估" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="ishua-的预后评估">ISHUA 的预后评估</h4>
<p>ISHUA 与已知的 HUA 风险因素（人口统计、临床和遗传）相关性。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409251455716.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">association</figcaption>
</figure>
</div>
<p>ISHUA 预测痛风及其他代谢相关性结局（Gout、AF、CAD、DmT2、HF、Hypertension、ESRD、All-cause death），Kaplan-Meier 生存曲线显示，ISHUA 分组能够较好地区分痛风及其他代谢相关性疾病。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409251456843.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">prognosis</figcaption>
</figure>
</div>
<p>此外，还探讨了改变生活方式对不良结局的潜在获益。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409251457970.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">lifestyle</figcaption>
</figure>
</div>
</section>
</section>
<section id="take-home-message" class="level3">
<h3 class="anchored" data-anchor-id="take-home-message">Take home message</h3>
<ol type="1">
<li><p>文章同时纳入基因和临床特征数据，提升对 HUA 的预测能力；</p></li>
<li><p>结合长期随访数据，观察模型的风险分组对相关疾病发生发展的预测价值。</p></li>
</ol>


<!-- -->


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-RN1343" class="csl-entry">
Zeng, Lin, Pengcheng Ma, Zeyang Li, Shengxing Liang, Chengkai Wu, Chang Hong, Yan Li, et al. 2024. <span>“Multimodal Machine Learning-Based Marker Enables Early Detection and Prognosis Prediction for Hyperuricemia.”</span> Journal Article. <em>Advanced Science</em> 11 (34): 2404047. <a href="https://doi.org/10.1002/advs.202404047">https://doi.org/10.1002/advs.202404047</a>.
</div>
</div></section></div> ]]></description>
  <category>journal club</category>
  <guid>https://leslie-lu.github.io/blog/2024/09/25/jc/</guid>
  <pubDate>Wed, 25 Sep 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409251439788.png" medium="image" type="image/png"/>
</item>
<item>
  <title>解析 Beta 分布与贝叶斯</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/09/16/beta_dist/</link>
  <description><![CDATA[ 





<p>看到<a href="https://mp.weixin.qq.com/s/sLj_DzkLGHb0qlKQWBXzgg" title="Beta分布">小白学统计</a>发了一篇文章介绍 Beta 分布，我们也更新一篇文章解析 Beta 分布与贝叶斯。</p>
<section id="什么是-beta-分布" class="level3">
<h3 class="anchored" data-anchor-id="什么是-beta-分布">1. 什么是 Beta 分布？</h3>
<p>Beta 分布是一种定义在 <code>(0,1)</code> 区间的连续概率分布，用来描述比例或概率等数据。例如，应用于研究某事件发生的概率。它由两个参数 <img src="https://latex.codecogs.com/png.latex?%5Calpha"> 和 <img src="https://latex.codecogs.com/png.latex?%5Cbeta"> 决定：</p>
<ul>
<li><p><strong><img src="https://latex.codecogs.com/png.latex?%5Calpha"> = <img src="https://latex.codecogs.com/png.latex?%5Cbeta"> = 1</strong>：均匀分布，即所有概率值等可能。</p></li>
<li><p><strong><img src="https://latex.codecogs.com/png.latex?%5Calpha"> &gt; 1</strong> 和 <strong><img src="https://latex.codecogs.com/png.latex?%5Cbeta"> &gt; 1</strong>：生成钟形分布，集中于中间。</p></li>
<li><p><strong><img src="https://latex.codecogs.com/png.latex?%5Calpha"> &lt; 1</strong> 或 <strong><img src="https://latex.codecogs.com/png.latex?%5Cbeta"> &lt; 1</strong>：分布会更靠近 0 或 1。</p></li>
</ul>
<p>这种灵活性使得 Beta 分布特别适合于建模那些约束在 (0,1) 之间的变量，比如成功概率、比率等。其概率密度函数为：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Af(x;%20%5Calpha,%20%5Cbeta)%20=%20%5Cfrac%7Bx%5E%7B%5Calpha-1%7D%20(1-x)%5E%7B%5Cbeta-1%7D%7D%7BB(%5Calpha,%20%5Cbeta)%7D%0A"></p>
<p>其中，B(<img src="https://latex.codecogs.com/png.latex?%5Calpha">, <img src="https://latex.codecogs.com/png.latex?%5Cbeta">) 为 Beta 函数，相当于归一化因子，使得概率密度函数的积分等于 1。</p>
<p>Beta 分布广泛用于表示成功概率的先验分布，是 <strong>贝叶斯推断</strong> 中的常用工具。通过观察数据，不断更新 Beta 分布的 <img src="https://latex.codecogs.com/png.latex?%5Calpha"> 和 <img src="https://latex.codecogs.com/png.latex?%5Cbeta"> 参数，进而得到后验分布。</p>
</section>
<section id="贝叶斯视角下的-beta-分布" class="level3">
<h3 class="anchored" data-anchor-id="贝叶斯视角下的-beta-分布">2. 贝叶斯视角下的 Beta 分布</h3>
<p>在贝叶斯统计中，Beta 分布通常作为 <strong>二项分布</strong> 的共轭先验分布。</p>
<blockquote class="blockquote">
<p>当先验分布和后验分布属于同一族分布时，我们说这个先验分布是似然函数的共轭先验。共轭分布的主要优点是它们简化了后验分布的计算。</p>
</blockquote>
<p>例如，如果我们有某事件的观测数据，并且希望估计成功概率 p，假设 p 的先验分布为 Beta 分布，则观测到 n 次成功和 m 次失败后，新的后验分布仍为 Beta 分布，其更新规则为：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Calpha_%7B%5Ctext%7B%E5%90%8E%E9%AA%8C%7D%7D%20=%20%5Calpha_%7B%5Ctext%7B%E5%85%88%E9%AA%8C%7D%7D%20+%20n%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbeta_%7B%5Ctext%7B%E5%90%8E%E9%AA%8C%7D%7D%20=%20%5Cbeta_%7B%5Ctext%7B%E5%85%88%E9%AA%8C%7D%7D%20+%20m%0A"></p>
<p>这意味着 Beta 分布可以在贝叶斯分析中通过数据观察逐步更新。这也是小白说统计文章里例子的原理来源。</p>
</section>
<section id="betareg-包的功能" class="level3">
<h3 class="anchored" data-anchor-id="betareg-包的功能">3. <code>betareg</code> 包的功能</h3>
<p><strong><a href="https://topmodels.r-forge.r-project.org/betareg/" title="betareg 包">betareg</a></strong> 包是 R 语言中用于处理 Beta 回归模型的工具，适用于 (0,1) 区间的比例数据建模。这些数据通常不适合使用传统的线性回归模型，因为响应变量的范围受到限制。Beta 回归模型假设响应变量服从 Beta 分布，提供了一种灵活的方式来处理这些约束性数据。主要功能包括：</p>
<ul>
<li><p><strong>处理边界值</strong>：如接近 0 或 1 的极端数据点。</p></li>
<li><p><strong>偏差校正</strong>：特别在样本量小的情况下，能够进行精确估计。</p></li>
<li><p><strong>扩展模型</strong>：支持有限混合模型，用于处理具有不同组别特征的数据。</p></li>
</ul>
</section>
<section id="beta-回归的应用场景" class="level3">
<h3 class="anchored" data-anchor-id="beta-回归的应用场景">4. Beta 回归的应用场景</h3>
<p>Beta 回归在实际数据分析中有许多应用，尤其在以下几类问题中：</p>
<ul>
<li><p><strong>生物统计学</strong>：如疾病发病率、药物疗效等。</p></li>
<li><p><strong>金融</strong>：如股票收益率、风险度量等。</p></li>
<li><p><strong>市场营销</strong>：如用户转化率、广告点击率等。</p></li>
</ul>


<!-- -->

</section>

 ]]></description>
  <category>beta distribution</category>
  <category>bayesian</category>
  <category>probability</category>
  <category>biostatistics</category>
  <guid>https://leslie-lu.github.io/blog/2024/09/16/beta_dist/</guid>
  <pubDate>Mon, 16 Sep 2024 00:00:00 GMT</pubDate>
  <media:content url="https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Beta_distribution_pdf.svg/325px-Beta_distribution_pdf.svg.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Software 2.0</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/09/11/software_2.0/</link>
  <description><![CDATA[ 





<p>在过去几十年里，软件开发的核心一直是由人类编写规则和逻辑的传统编程，即<code>Software 1.0</code>。程序员用代码构建起一个个复杂的系统，通过显式的规则解决问题。但随着深度学习和神经网络技术的崛起，这种模式正在逐渐被颠覆。<a href="https://karpathy.medium.com/software-2-0-a64152b37c35">Andrej Karpathy</a> 提出的<code>Software 2.0</code>概念，深入探讨了其对未来的影响。</p>
<section id="什么是-software-2.0" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="什么是-software-2.0">什么是 Software 2.0 ？</h3>
<p>Software 2.0 是指通过训练神经网络来生成程序，替代手动编写代码。简单来说，机器不再依赖程序员的硬编码，而是通过大量的数据和学习算法来获得解决问题的能力。例如，过去我们可能需要为图像识别编写复杂的规则，而在 Software 2.0 中，算法通过提供大量标记图像进行训练，自动学会识别不同类别的物体。</p>
<p>在这个新的编程范式中，<strong>代码不再由人类编写，而是通过机器学习生成</strong>。这个过程的核心不再是编写清晰的规则，而是设计良好的神经网络架构，并用足够多的高质量数据进行训练。最终，机器通过训练模型来预测和处理任务。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://miro.medium.com/v2/resize:fit:640/format:webp/1*7aTCueMW8oBRiqkyobunVA.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">software 2.0</figcaption>
</figure>
</div>
</section>
<section id="software-1.0-与-2.0-的对比" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="software-1.0-与-2.0-的对比">Software 1.0 与 2.0 的对比</h3>
<p>传统的 Software 1.0 主要依赖人类编写的逻辑和规则。在这种模式下，开发者根据明确的需求编写代码，并对程序行为进行详细的控制。而在 Software 2.0 中，开发人员的角色更多地转向了管理数据、设计模型架构以及优化算法。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://miro.medium.com/v2/resize:fit:720/format:webp/1*CHcu2L0NmAZwCpQgmS1ByA.jpeg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">programming</figcaption>
</figure>
</div>
<table class="caption-top table">
<colgroup>
<col style="width: 13%">
<col style="width: 43%">
<col style="width: 42%">
</colgroup>
<thead>
<tr class="header">
<th>特性</th>
<th>Software 1.0</th>
<th>Software 2.0</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>开发方式</td>
<td>人类编写显式规则</td>
<td>通过神经网络训练自动生成</td>
</tr>
<tr class="even">
<td>代码控制</td>
<td>开发人员详细控制代码逻辑</td>
<td>依赖数据和训练模型生成解决方案</td>
</tr>
<tr class="odd">
<td>依赖因素</td>
<td>编程语言、开发工具</td>
<td>数据质量、模型架构、训练算法</td>
</tr>
<tr class="even">
<td>开发者角色</td>
<td>编写程序和调试代码</td>
<td>管理数据、设计架构、优化模型</td>
</tr>
</tbody>
</table>
<p>从表中可以看出，Software 2.0 是一种更为抽象的开发模式，开发者的工作重心从直接编写代码转移到了更高层次的架构设计和数据处理。</p>
</section>
<section id="数据的重要性" class="level3">
<h3 class="anchored" data-anchor-id="数据的重要性">数据的重要性</h3>
<p>在 Software 2.0 中，数据是最关键的资源。模型的性能和准确性与数据量和质量息息相关。因此，数据的标注、收集和处理成为了决定模型成败的关键。与传统编程不同，开发人员不再关心每一个细节的实现，而是通过大量高质量的数据来训练神经网络，使其能够自主推导出解决问题的最佳方案。</p>
</section>
<section id="开发者角色的转变" class="level3">
<h3 class="anchored" data-anchor-id="开发者角色的转变">开发者角色的转变</h3>
<p>在这种新的编程范式下，开发者的角色发生了根本性变化。程序员不再需要直接编写实现任务的规则，而是专注于以下几方面：</p>
<ol type="1">
<li><p><strong>数据管理</strong>：负责收集、清理和标注数据。</p></li>
<li><p><strong>模型设计</strong>：选择和设计合适的神经网络架构，如卷积神经网络（CNN）或循环神经网络（RNN）。</p></li>
<li><p><strong>超参数调整</strong>：在训练过程中调整参数优化模型。</p></li>
<li><p><strong>模型评估与调优</strong>：通过测试集评估模型效果，分析模型的表现并不断改进。</p></li>
</ol>
<p>这种转变带来了开发流程的简化，也使开发人员的工作重点转移到了模型架构和数据质量的把控上。</p>
</section>
<section id="神经网络的能力与挑战" class="level3">
<h3 class="anchored" data-anchor-id="神经网络的能力与挑战">神经网络的能力与挑战</h3>
<p>通过神经网络，机器可以在各种复杂任务上表现出超越传统规则编程的能力。这些任务包括图像分类、自然语言处理、自动驾驶等领域。然而，神经网络本身也带来了新的挑战，例如：</p>
<ul>
<li><p><strong>黑箱问题</strong>：难以解释其决策过程。</p></li>
<li><p><strong>数据依赖性</strong>：模型的性能高度依赖数据质量。</p></li>
</ul>
</section>
<section id="未来展望" class="level3">
<h3 class="anchored" data-anchor-id="未来展望">未来展望</h3>
<p>Software 2.0 的出现标志着软件开发进入了一个全新的时代。随着计算能力的增强、数据资源的增长以及深度学习技术的突破，越来越多的领域将从传统编程模式转向数据驱动的神经网络模型。</p>
<p>未来，开发者将逐渐从具体的代码编写中解放出来，转而专注于更高层次的架构设计和数据优化。Software 2.0 不仅提高了开发效率，还能在许多复杂任务中表现出前所未有的能力，彻底改变我们构建软件的方式。</p>
<hr>
<p><strong>结语</strong></p>
<p>Software 2.0 的核心思想是用数据和神经网络取代传统代码编写。随着这项技术的进步，编程范式将发生深刻变革。开发者需要适应这一趋势，掌握更多的数据处理和模型设计技能，以应对这个数据驱动的新时代。</p>


<!-- -->

</section>

 ]]></description>
  <category>deep learning</category>
  <category>software</category>
  <guid>https://leslie-lu.github.io/blog/2024/09/11/software_2.0/</guid>
  <pubDate>Wed, 11 Sep 2024 00:00:00 GMT</pubDate>
  <media:content url="https://miro.medium.com/v2/resize:fit:720/format:webp/1*5NG3U8MsaTqmQpjkr_-UOw.png" medium="image" type="image/png"/>
</item>
<item>
  <title>爱因斯坦求和</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/09/09/einsum/</link>
  <description><![CDATA[ 





<p>在物理学、机器学习、科学计算等领域，张量的操作是常见而又复杂的。而在张量操作中，有一种优雅的数学简化工具，即爱因斯坦求和约定（Einstein Summation Convention），它极大地减少了公式的复杂性，特别是在高维张量的运算中。</p>
<section id="什么是爱因斯坦求和" class="level3">
<h3 class="anchored" data-anchor-id="什么是爱因斯坦求和">什么是爱因斯坦求和？</h3>
<p>爱因斯坦求和约定是由著名物理学家阿尔伯特·爱因斯坦提出的一种简化公式的符号约定。根据这一约定，当一个表达式中有重复的索引变量时，默认对该索引进行求和运算，而不需要显式地写出求和符号。</p>
<p>例如，两个矩阵 (A) 和 (B) 的乘法可以通过爱因斯坦求和简化。通常，矩阵乘法公式为：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AC_%7Bik%7D%20=%20%5Csum_%7Bj%7D%20A_%7Bij%7D%20B_%7Bjk%7D%0A"></p>
<p>在爱因斯坦求和的符号下，重复出现的索引 (j) 表示对其求和，因此公式可以写为：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AC_%7Bik%7D%20=%20A_%7Bij%7D%20B_%7Bjk%7D%0A"></p>
<p>我们用torch实现这个例子：</p>
<div id="1a3ac7ac" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-2">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>).reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb1-3">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>).reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-4">torch.einsum(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ik,kj-&gt;ij'</span>, [a, b])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>tensor([[ 25,  28,  31,  34,  37],
        [ 70,  82,  94, 106, 118]])</code></pre>
</div>
</div>
<section id="column-sum" class="level4">
<h4 class="anchored" data-anchor-id="column-sum">column sum</h4>
<div id="2179fe81" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>).reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb3-2">torch.einsum(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ij-&gt;j'</span>, [a])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>tensor([3, 5, 7])</code></pre>
</div>
</div>
</section>
<section id="row-sum" class="level4">
<h4 class="anchored" data-anchor-id="row-sum">row sum</h4>
<div id="58ae91a6" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">torch.einsum(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ij-&gt;i'</span>, [a])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>tensor([ 3, 12])</code></pre>
</div>
</div>
</section>
<section id="sum" class="level4">
<h4 class="anchored" data-anchor-id="sum">sum</h4>
<div id="a00e3d6c" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">torch.einsum(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ij-&gt;'</span>, [a])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>tensor(15)</code></pre>
</div>
</div>
</section>
<section id="transpose" class="level4">
<h4 class="anchored" data-anchor-id="transpose">transpose</h4>
<div id="d9b985e6" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">torch.einsum(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ij-&gt;ji'</span>, [a])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>tensor([[0, 3],
        [1, 4],
        [2, 5]])</code></pre>
</div>
</div>
</section>
<section id="batch-matrix-multiplication" class="level4">
<h4 class="anchored" data-anchor-id="batch-matrix-multiplication">batch matrix multiplication</h4>
<div id="09796d47" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb11-2">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb11-3">torch.einsum(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ijk,ikl-&gt;ijl'</span>, [a, b])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>tensor([[[ 1.8923, -4.4780,  0.9744],
         [-2.0310, -3.1781, -3.4920]],

        [[ 1.3979, -1.8215,  1.7188],
         [ 1.0103, -0.9599,  1.3119]],

        [[ 2.0725,  2.3221,  1.1024],
         [ 0.6168,  1.4058,  2.4966]]])</code></pre>
</div>
</div>
</section>
</section>
<section id="为什么爱因斯坦求和如此重要" class="level3">
<h3 class="anchored" data-anchor-id="为什么爱因斯坦求和如此重要">为什么爱因斯坦求和如此重要？</h3>
<p>爱因斯坦求和的核心优势在于它可以极大地简化复杂的张量运算，特别是在涉及高维度张量时。这种简洁的符号不仅减少了书写和理解的困难，还可以避免出错，因为我们不再需要反复地书写求和符号。</p>
<p>在物理学中，尤其是在广义相对论和量子力学中，张量的运算无处不在，而爱因斯坦求和约定为这些运算提供了极大的便利。</p>


<!-- -->

</section>

 ]]></description>
  <category>linear algebra</category>
  <category>deep learning</category>
  <category>tensor</category>
  <guid>https://leslie-lu.github.io/blog/2024/09/09/einsum/</guid>
  <pubDate>Mon, 09 Sep 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409092357183.png" medium="image" type="image/png"/>
</item>
<item>
  <title>2023年中科院期刊分区表升级版</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/09/08/journal_category/</link>
  <description><![CDATA[ 





<p>前面我们爬了<a href="https://mp.weixin.qq.com/s/NdCZcUq2sdFhvk-s0B1COw">2023年最新JCR影响因子</a>，一直没有提供给大家2023年中科院期刊分区表。</p>
<p>今天我们爬了下中国科学院文献情报中心期刊分区表中的2023年升级版，大家公众号后台回复<code>2023年中科院分区</code>，即可拿到分区excel表格。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409081452781.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">2023年中科院期刊分区表</figcaption>
</figure>
</div>
<p>ps：直接复制这几个字后台回复即可。</p>


<!-- -->


 ]]></description>
  <category>journal category</category>
  <guid>https://leslie-lu.github.io/blog/2024/09/08/journal_category/</guid>
  <pubDate>Sun, 08 Sep 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409081452781.png" medium="image" type="image/png"/>
</item>
<item>
  <title>星球JC | 心脏功能障碍诊断模型</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/09/06/jc/</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>大家好，这一期预测模型星球Journal Club的分享来自中国中医科学院西苑医院的小格格同学。</p>
</blockquote>
<p>今天分享的是2024年发表在中科院医学1区的顶刊JACC: CardioOncology上，题为 A Biomarker-Based Diagnostic Model for Cardiac Dysfunction in Childhood Cancer Survivors <span class="citation" data-cites="leerink2024biomarker">(Leerink et al. 2024)</span> 的研究论文。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409062141816.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">figure abstract</figcaption>
</figure>
</div>
<section id="研究背景" class="level3">
<h3 class="anchored" data-anchor-id="研究背景">研究背景</h3>
<p>心血管疾病越来越多地在长期儿童癌症幸存者（CCS, childhood cancer survivors）中受到关注。在接受蒽环类药物、米托蒽醌和/或胸部定向放疗治疗的CCS患者中，约11%在癌症诊断后40年内发生心力衰竭。目前推荐终生超声心动图监测，通过早期发现左心室功能障碍（LV功能障碍）来预防或延缓心衰，监测间隔根据蒽环类药物、米托蒽醌和胸部定向放疗的累积剂量确定。</p>
<p>而心脏生物标志物在CCS长期监测中的作用仍不确定。生物标志物可能能够作为一种具有成本效益的鉴别检测，帮助确定是否继续或延迟应用超声心动图。如果血液生物标志物检测可以有效排除LV功能障碍，超声心动图可以推迟到下一个计划的监测时间点。尽管以往研究报告N末端B型利钠肽前体（NT-proBNP）和高敏心肌肌钙蛋白T（hs-cTnT）在长期CCS中检测LV功能障碍的诊断准确性有限，以致不建议使用心脏生物标志物进行CCS监测，但仍存在一些未解决的问题：</p>
<ol type="1">
<li><p>尽管先前的研究将心脏生物标志物作为检测LV功能障碍的独立诊断检测进行了研究，但若将其与临床信息结合可能会提高诊断性能。</p></li>
<li><p>CCS相关研究尚未探索用于rule out或rule in LV功能障碍的特定生物标志物的cutoff浓度，而这是提高诊断性能的潜在因素。</p></li>
<li><p>目前尚不清楚 CCS 中心脏生物标志物是否可能更有效地诊断更为严重的LV功能障碍，这一点在之前的一项针对普通人群的研究中得到了提示。</p></li>
</ol>
<p>基于横断面多中心研究，文章致力于开发和内部验证将心脏生物标志物与临床特征相结合的诊断模型，主要目的是确定其在先前未诊断出心肌病的 CCS 患者中rule in或rule out LV功能障碍的有效性。</p>
</section>
<section id="研究方法" class="level3">
<h3 class="anchored" data-anchor-id="研究方法">研究方法</h3>
<section id="研究类型" class="level4">
<h4 class="anchored" data-anchor-id="研究类型">研究类型</h4>
<p>多中心、横断面研究。</p>
</section>
<section id="研究人群" class="level4">
<h4 class="anchored" data-anchor-id="研究人群">研究人群</h4>
<p>CCS及其兄弟姐妹，其中，兄弟姐妹作为CSS的对照。</p>
</section>
<section id="数据收集" class="level4">
<h4 class="anchored" data-anchor-id="数据收集">数据收集</h4>
<p>通过问卷调查、血清学检测（NT-proBNP、hs-cTnT和肌酐水平、肾小球滤过率）、超声心动图检查收集数据。</p>
</section>
<section id="统计分析" class="level4">
<h4 class="anchored" data-anchor-id="统计分析">统计分析</h4>
<p>缺失值处理：探索了缺失值的可能模式，假设缺失值随机缺失（MAR），使用predictive mean matching进行重复20次的多重填补，继而基于每个填补的数据集进行独立分析，使用Rubin’s rules进行汇总，此外，文章做了一步填补结果与complete case analysis结果的比较。</p>
<p>生物标志物与LVEF的关系：通过local polynomial regression拟合CCS中生物标志物浓度与LVEF之间的关系。</p>
<p>预定义诊断标准：基于先前对呼吸困难患者心力衰竭诊断的研究，建立预定义的标准来rule out（阴性预测值NPV&gt;=98%，敏感度&gt;=90%）和rule in（阳性预测值PPV&gt;=75%，特异度&gt;=90%）LV功能障碍。</p>
<p>评价诊断准确性：包括AUC、敏感度、特异度、PPV和NPV；校准曲线进行评价；NRI（net reclassification improvement）。</p>
<p>预测模型的开发：基于logistic。第一个模型仅考虑临床预测因素，使用后向筛选关键变量，阈值设为0.05，由于使用了多重填补，最终选择出现在一半以上模型的变量进入最终模型；第二个模型加入NT-proBNP和hscTnT，使用pooled Wald test检验这两个变量给模型拟合带来的改善，此外，考虑到生物标志物与终点的非线性关系，文章进行了限制性立方样条分析。通过500次bootstrap进行内部验证。</p>
</section>
</section>
<section id="研究结果" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="研究结果">研究结果</h3>
<p>此研究共纳入1334例CCS，共有278名兄弟姐妹作为对照。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409062142408.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">Table 1</figcaption>
</figure>
</div>
<p>与兄弟姐妹相比，CCS患者的心脏生物标志物：NT-proBNP水平的中位数和异常比例都高于他们的兄弟姐妹，hs-cTnT浓度无显著差异。</p>
<section id="仅使用生物标志物建模" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="仅使用生物标志物建模">仅使用生物标志物建模</h4>
<p>local polynomial regression发现随着LVEF的降低，CCS患者中的NT-proBNP和hs-cTnT浓度呈现升高的趋势，特别是当LVEF下降到低于50%时，这种趋势更为明显。但单独使用NT-proBNP异常或hs-cTnT不足以rule out或rule in任何类型的LV功能障碍。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409062144175.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">Table 2</figcaption>
</figure>
</div>
</section>
<section id="结合临床特征与生物标志物" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="结合临床特征与生物标志物">结合临床特征与生物标志物</h4>
<p>将心脏生物标志物NT-proBNP和hs-cTnT结合到临床特征中，可以显著提高模型能力，特别是用于rule out LV功能障碍。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409062146996.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">Table 3</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409062148184.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">NRI</figcaption>
</figure>
</div>
<p>且校准度较好。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409062148642.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">Figure 2</figcaption>
</figure>
</div>
</section>
</section>
<section id="take-home-message" class="level3">
<h3 class="anchored" data-anchor-id="take-home-message">Take home message</h3>
<ol type="1">
<li><p>文章在关注常规模型评价指标的基础上，特别关注biomarker对模型rule out结局的影响，从rule in和rule out两方面来评价多个模型的不同用途。</p></li>
<li><p>文章通过建立多个生物标志物结合临床特征的诊断模型，展示了其最优cutoff值下可能的预测价值，同时对最新指南提到的高风险人群更新了分析。</p></li>
</ol>


<!-- -->


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-leerink2024biomarker" class="csl-entry">
Leerink, Jan M, Elizabeth AM Feijen, Esmee C de Baat, Remy Merkx, Helena JH van der Pal, Wim JE Tissing, Marloes Louwerens, et al. 2024. <span>“A Biomarker-Based Diagnostic Model for Cardiac Dysfunction in Childhood Cancer Survivors.”</span> <em>Cardio Oncology</em> 6 (2): 236–47.
</div>
</div></section></div> ]]></description>
  <category>journal club</category>
  <guid>https://leslie-lu.github.io/blog/2024/09/06/jc/</guid>
  <pubDate>Fri, 06 Sep 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409062131894.png" medium="image" type="image/png"/>
</item>
<item>
  <title>从随意推断（casual inference）到因果推断（causal inference）</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/09/04/casual_inference/</link>
  <description><![CDATA[ <blockquote class="blockquote">
<p>因果分析的核心首先是因果问题，它决定了我们分析什么数据、如何分析这些数据以及我们的推断结论适用于什么人群。提出一个好的因果问题是比较难的，相对来讲，因果分析则要简单得多。本书属于方法应用性质，主要聚焦于因果推断的分析阶段。在本书前六章中，我们将讨论什么是因果问题，如何改进我们的问题，以及思考一些例子。</p>
</blockquote>
<p>因果问题是我们可以通过统计方法提出的一组更广泛问题中的一部分，这些问题依据数据科学的主要目的可以大致分为：描述、预测和因果推断 <span class="citation" data-cites="hernan2019">(Hernán, Hsu, and Healy 2019)</span>。然而，在实际中，受到所使用统计方法的影响（如，这三类问题都可使用回归来处理）以及我们讨论它们的方式影响，我们常常会将这三种问题混淆在一起。当我们实际想要进行的是基于非随机数据的因果推断时，我们经常使用“关联”（association）这样的委婉说法，而不是直接声明我们想要估计因果效应 <span class="citation" data-cites="Hernan2018">(Hernán 2018)</span>。</p>
<p>例如，最近一项关于流行病学研究中所使用语言的研究显示，估计效应的描述中最常见的词根是 “associate”，而许多研究人员也默认 “associate” 至少暗示了某种因果效应 (Figure&nbsp;1) <span class="citation" data-cites="haber_causal_language">(Haber et al. 2022)</span>。在分析的全部研究中，只有大约 1% 使用了 “cause” 这个词根。此外，三分之一的研究基于结论提出了相关的行动建议，而其中 80% 的建议都暗含了某种因果效应。而提出了行动建议的这些研究通常比那些只是描述效应的研究（如，使用 “associate” 和 “compare” 这样的词根）要有更强的因果效应暗示。另一方面，尽管一些研究暗示其目标是因果推断，但只有大约 4% 使用了本书将讨论的那些正式的因果推断模型，其它研究更多的做法是通过对先前相关研究或理论的引用讨论来证明他们建立的因果关系的合理性。</p>
<div class="cell page-columns page-full">
<div class="cell-output cell-output-stderr">
<pre><code>── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.4     ✔ readr     2.1.5
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.5.1     ✔ tibble    3.2.1
✔ lubridate 1.9.3     ✔ tidyr     1.3.1
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</code></pre>
</div>
<div class="cell-output-display page-columns page-full">
<div id="fig-word-ranking" class="quarto-float quarto-figure quarto-figure-center anchored page-columns page-full">
<figure class="quarto-float quarto-float-fig figure page-columns page-full"><div aria-describedby="fig-word-ranking-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://leslie-lu.github.io/blog/2024/09/04/casual_inference/index_files/figure-html/fig-word-ranking-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-margin quarto-float-caption quarto-float-fig margin-caption" id="fig-word-ranking-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: 研究人员使用的词根的因果强度排名。具有更多 “Strong” 排名的词根比那些具有更多 “None” 或 “Weak” 评分的词根具有更强的因果暗示。数据来自 Haber 等人。
</figcaption></figure>
</div>
</div>
</div>
<p>因为没有明确地提出带有具体因果假设和目标的因果问题，我们最终都得到了“薛定谔的因果推断”：</p>
<blockquote class="blockquote">
<p>我们的结果表明，“薛定谔的因果推断”是很常见的，即研究一方面避免声明（甚至明确否认）对估计因果效应的兴趣，但另一方面又充满了因果意图、推断、因果暗示和行动建议。</p>
<p>— <span class="citation" data-cites="haber_causal_language">Haber et al. (2022)</span></p>
</blockquote>
<p>这种方法是随意推断（casual inference）的一个例子：在没有做必要的工作来理解因果问题并处理因果假设的情况下进行推断。</p>


<!-- -->



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-haber_causal_language" class="csl-entry">
Haber, N. A., S. E. Wieten, J. M. Rohrer, O. A. Arah, P. W. G. Tennant, E. A. Stuart, E. J. Murray, et al. 2022. <span>“<span class="nocase"><span>C</span>ausal and <span>A</span>ssociational <span>L</span>anguage in <span>O</span>bservational <span>H</span>ealth <span>R</span>esearch: <span>A</span> <span>S</span>ystematic <span>E</span>valuation</span>.”</span> <em>Am J Epidemiol</em> 191 (12): 2084–97.
</div>
<div id="ref-Hernan2018" class="csl-entry">
Hernán, Miguel A. 2018. <span>“The C-Word: Scientific Euphemisms Do Not Improve Causal Inference From Observational Data.”</span> <em>American Journal of Public Health</em> 108 (5): 616–19. <a href="https://doi.org/10.2105/ajph.2018.304337">https://doi.org/10.2105/ajph.2018.304337</a>.
</div>
<div id="ref-hernan2019" class="csl-entry">
Hernán, Miguel A., John Hsu, and Brian Healy. 2019. <span>“A Second Chance to Get Causal Inference Right: A Classification of Data Science Tasks.”</span> <em>CHANCE</em> 32 (1): 42–49. <a href="https://doi.org/10.1080/09332480.2019.1579578">https://doi.org/10.1080/09332480.2019.1579578</a>.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{lu2024,
  author = {Lu, Zhen},
  title = {从随意推断（casual {inference）到因果推断（causal}
    Inference）},
  date = {2024-09-04},
  url = {https://leslie-lu.github.io/blog/2024/09/04/casual_inference/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-lu2024" class="csl-entry quarto-appendix-citeas">
Lu, Zhen. 2024. <span>“从随意推断（casual Inference）到因果推断（causal
Inference）.”</span> September 4, 2024. <a href="https://leslie-lu.github.io/blog/2024/09/04/casual_inference/">https://leslie-lu.github.io/blog/2024/09/04/casual_inference/</a>.
</div></div></section></div> ]]></description>
  <category>causal inference</category>
  <guid>https://leslie-lu.github.io/blog/2024/09/04/casual_inference/</guid>
  <pubDate>Wed, 04 Sep 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409051340717.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>星球JC | 胃癌早期筛查工具</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/08/30/jc/</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>大家好，这一期预测模型星球Journal Club的分享来自中国医科大学的徐林玉同学，分享的是2019年发表在中科院医学1区的顶级期刊Gut上，题为“Development and validation of a prediction rule for estimating gastric cancer risk in the Chinese high-risk population: a nationwide multicentre study”的研究论文。</p>
</blockquote>
<section id="研究背景" class="level3">
<h3 class="anchored" data-anchor-id="研究背景">研究背景</h3>
<p>胃癌是中国第二常见的癌症，早期检测和治疗可以显著降低其死亡率。然而，由于高风险人群庞大，全面的胃镜筛查在经济和操作上都不切实际。当前，中国的国家筛查指南建议对高风险人群从40岁开始进行筛查，但由于高风险人群估计超过3亿人，全面的胃镜筛查并不可行。因此，迫切需要一种风险分层工具，作为胃镜检查前的初步筛查工具，以进一步识别真正的高风险个体；且当前中国国内尚无类似的工具。</p>
<p>现有的筛查工具主要基于已知的胃癌风险因素，如萎缩性胃炎和幽门螺杆菌感染。虽然有一些方法如ABC方法在日本被开发用于预测未来胃癌的发生，但其在中国高风险人群中的适用性仍存在疑问。此外，现有的生物标志物组合方法虽然在某些研究中表现良好，但其结果可能不适用于中国的高风险人群。因此，这项全国多中心横断面研究的目标是开发一种新的预测规则，用于二级预防（早发现、早诊断、早治疗），作为初步筛查工具，用于在中国无症状人群中识别高风险个体，以便进一步进行诊断性胃镜检查。</p>
</section>
<section id="研究方法" class="level3">
<h3 class="anchored" data-anchor-id="研究方法">研究方法</h3>
<section id="研究类型" class="level4">
<h4 class="anchored" data-anchor-id="研究类型">研究类型</h4>
<p>全国、多中心、横断面研究。</p>
</section>
<section id="研究人群" class="level4">
<h4 class="anchored" data-anchor-id="研究人群">研究人群</h4>
<p>年龄在40至80岁之间、无胃肠道症状的个体，符合中国胃癌高风险标准，并前往医院进行胃镜筛查。</p>
</section>
<section id="数据收集" class="level4">
<h4 class="anchored" data-anchor-id="数据收集">数据收集</h4>
<p>通过问卷调查、血清学检测（PG I、PG II、G-17、抗幽门螺杆菌IgG抗体）、胃镜检查和组织学检查收集数据。</p>
</section>
<section id="统计分析" class="level4">
<h4 class="anchored" data-anchor-id="统计分析">统计分析</h4>
<p>文章对数据的管理采取了中心化的管理，尽可能确保数据质量。参与者按2:1比例被随机分为开发队列和验证队列。开发队列用于模型开发，验证队列用于外部验证。文章利用Logistic回归模型开发预测规则。在开发队列中，通过univariate and multivariate analyses评估危险因素与胃癌的关联，其中，univariate analyses阈值设为p&lt;0.25，且multivariate analyses采用backward stepwise进行进一步的变量筛选。文章预测规则的设定基于regression coefficient-based scoring method（Points were assigned by dividing the regression coefficients by the absolute value of the smallest coefficient in the model and rounding up to the nearest integer）。模型整体性能通过R²和Brier评分进行衡量，区分能力通过AUC和discrimination slope评估，校准能力通过Hosmer-Lemeshow χ2统计量和calibration in the large进行评估。同时，评估模型预测的敏感度、特异度、准确率、阳性预测值（positive predictive value）、阴性预测值（negative predictive value）、阳性似然比（positive likelihood ratio）、阴性似然比（negative likelihood rario）和number needed to screen（defined as the number of participants who would need to undergo gastroscopy for one patient with GC to be identified）。文章对开发队列进行bootstrap抽样1000次作为内部验证，验证队列上进行外部验证。同时，基于u test比较模型在开发队列、验证队列上的AUC表现。此外，文章额外做了一部分工作，即将自身模型与当前现有文献中的预测模型进行效果的对比。数据分析使用IBM SPSS和R软件进行。</p>
</section>
</section>
<section id="研究结果" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="研究结果">研究结果</h3>
<p>此研究收集了2015年6月至2017年3月期间来自中国115家医院的数据，最终纳入14,929名合格参与者。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408302129019.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">图1 研究对象纳入及定义</figcaption>
</figure>
</div>
<section id="预测规则的开发" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="预测规则的开发">预测规则的开发</h4>
<p>基于分数的预测规则的开发：采用单因素和多因素分析，确定了包括年龄、性别、PG I/II比率、G-17水平、幽门螺杆菌感染和饮食习惯（腌制和油炸食品消费）在内的7个预测因素。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408302131409.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">Table 1</figcaption>
</figure>
</div>
<p>按照0–25分评分范围进行风险分层，将个体分为低风险（≤11）、中风险（12–16）和高风险（17–25）组。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408302132079.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">图2 logistic回归模型中胃癌的预测因素及相关预测规则</figcaption>
</figure>
</div>
<p>其中，中高风险组的胃镜检查检测到70.8%的胃癌病例和70.3%的早期胃癌病例。低风险组的胃镜检查需求减少了66.7%。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408302133117.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">Table 4</figcaption>
</figure>
</div>
<p>预测性能：开发的预测规则具有良好的性能表现。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408302133591.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">图3 预测模型的性能指标</figcaption>
</figure>
</div>
</section>
<section id="与其他预测模型的性能比较" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="与其他预测模型的性能比较">与其他预测模型的性能比较</h4>
<p>该预测规则表现良好，并显示出显著优于其他三种替代预测方法（即Miki等人的ABC方法、中国的基于ELISA的ABC方法以及Tu等人的五种生物标志物方法）在识别胃癌患者方面的区分能力。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408302134991.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">图4 验证队列中预测模型和替代预测模型的比较</figcaption>
</figure>
</div>
</section>
</section>
<section id="take-home-message" class="level3">
<h3 class="anchored" data-anchor-id="take-home-message">Take home message</h3>
<ol type="1">
<li><p>该预测规则在识别中国人群中胃镜检查前的高风险个体方面表现良好。可以作为一种准确且具有成本效益的大规模初步筛查工具，以提高胃癌（包括早期胃癌）的检测率，从而改善胃癌的二级预防。</p></li>
<li><p>文章不仅比较了自身模型在多中心外部验证中的效果，更是对比了现有模型，且表现均优于现有模型。</p></li>
<li><p>采用回归赋分的方式，对于人工智能算法解释性较好，能较好地在医院中进行推广应用；此外，采用赋分划分亚组的方式，关注到了模型实际可能带来的收益。</p></li>
</ol>


<!-- -->

</section>

 ]]></description>
  <category>journal club</category>
  <guid>https://leslie-lu.github.io/blog/2024/08/30/jc/</guid>
  <pubDate>Fri, 30 Aug 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408302124427.png" medium="image" type="image/png"/>
</item>
<item>
  <title>github actions使用docker渲染quarto文档</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/08/29/docker/</link>
  <description><![CDATA[ 





<p>在用github pages更新静态网站内容时，发现github actions突然报之前并未出现过的错误：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408292356507.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">error</figcaption>
</figure>
</div>
<p>错误表明系统在尝试调用UPower、Vulkan服务时遇到了问题，但是我也没找到到底是在哪里调用。而且UPower是一个用于管理电池电量和电源管理的服务，通常在桌面环境中使用。我尝试更新unbuntu上upower这些包的时候，发现github pages这种方式并没有给使用这类包的权限，看google上似乎也没有针对这个错误的比较好的解决方式。</p>
<p>没办法，只能选择换一种方法来render网站的内容，我又不想在本地利用quarto每次手动来render网页，最后只能尝试选择利用docker中配置的ubuntu环境来render github repository中更新的内容，然后再像以前一样，把render出来的html，重新利用actions publish到新的repository中，这样来更新网页内容，避开直接使用actions出现的这个错误。</p>
<p>我给docker的配置Dockfiles如下，给有可能遇见同样错误的同学参考：</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode dockerfile code-with-copy"><code class="sourceCode dockerfile"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install R and dependencies</span></span>
<span id="cb1-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ENV</span> DEBIAN_FRONTEND=noninteractive</span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update package indices</span></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> update <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qq</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install helper packages</span></span>
<span id="cb1-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--no-install-recommends</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> software-properties-common dirmngr</span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the signing key for the R repository</span></span>
<span id="cb1-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wget</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qO-</span> https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tee</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-a</span> /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc</span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the R 4.0 repository from CRAN</span></span>
<span id="cb1-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">add-apt-repository</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"deb https://cloud.r-project.org/bin/linux/ubuntu </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lsb_release</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-cs</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-cran40/"</span></span>
<span id="cb1-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--no-install-recommends</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> r-base </span>
<span id="cb1-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"if (!requireNamespace('renv', quietly=TRUE)) install.packages('renv', repos = c(CRAN = 'https://cloud.r-project.org'))"</span></span>
<span id="cb1-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">WORKDIR</span> /project</span>
<span id="cb1-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> renv.lock .</span>
<span id="cb1-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ENV</span> RENV_PATHS_LIBRARY /renv</span>
<span id="cb1-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> renv</span>
<span id="cb1-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> .Rprofile .Rprofile</span>
<span id="cb1-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> renv/activate.R renv/activate.R</span>
<span id="cb1-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> renv/settings.json renv/settings.json</span>
<span id="cb1-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"renv::activate(); renv::restore(repos = 'https://cloud.r-project.org')"</span></span>
<span id="cb1-21"></span>
<span id="cb1-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install python and dependencies</span></span>
<span id="cb1-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> update <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> python3.10 python3-pip <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-rf</span> /var/lib/apt/lists/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb1-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> requirements.txt .</span>
<span id="cb1-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip3</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--no-cache-dir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--break-system-packages</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> requirements.txt</span></code></pre></div>
<p>这样使用docker的方式就不会报错了：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408292348890.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">success</figcaption>
</figure>
</div>
<p>完整代码已经放在了<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>里，感兴趣的同学可以自行查看。</p>


<!-- -->


 ]]></description>
  <category>github</category>
  <category>quarto</category>
  <category>docker</category>
  <guid>https://leslie-lu.github.io/blog/2024/08/29/docker/</guid>
  <pubDate>Thu, 29 Aug 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408292348890.png" medium="image" type="image/png"/>
</item>
<item>
  <title>大图嵌小图</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/08/20/nested_layout/</link>
  <description><![CDATA[ <section id="由来" class="level3 page-columns page-full"><h3 class="anchored" data-anchor-id="由来">由来</h3>
<p>星球里不断有同学问到如何在一个大图中嵌入小图，这里简单介绍一下。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full"><p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408200018820.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">Q1</figcaption></figure>
</div>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full"><p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408200019279.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">Q2</figcaption></figure>
</div>
<p>我们使用生存曲线及risk table作为例子，其中生存曲线是大图，risk table是小图。常见的图形为：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full"><p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408200042969.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">survival curve</figcaption></figure>
</div>
<p>想要把risk table嵌入到生存曲线中。</p>
</section><section id="方法一" class="level3 page-columns page-full"><h3 class="anchored" data-anchor-id="方法一">方法一</h3>
<p>使用grid包，借助于grid包中的viewport函数。viewport用于定义一个绘图区域，可以在一个图形设备中创建多个独立的绘图区域，每个区域都有自己的坐标系和尺寸。</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">subvp</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">viewport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.35</span>, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.35</span>, x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ggsurv</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plot</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/print.html">print</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ggsurv</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">table</span>, vp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">subvp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>viewport创建了一个子视口，它定义了一个相对主视口的区域。效果如下：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full"><p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408200034399.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">option 1</figcaption></figure>
</div>
</section><section id="方法二" class="level3 page-columns page-full"><h3 class="anchored" data-anchor-id="方法二">方法二</h3>
<p>使用annotation_custom函数，它可以在图形中添加自定义的图形元素。</p>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ggsurv</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotation_custom</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplotGrob</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ggsurv</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">table</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, xmin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1900</span>, xmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3000</span>, ymin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, ymax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>ggplotGrob将ggsurv$table转换为grob对象，以便在图形中使用。效果如下：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full"><p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408200037108.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">option 2</figcaption></figure>
</div>
</section><section id="方法三" class="level3 page-columns page-full"><h3 class="anchored" data-anchor-id="方法三">方法三</h3>
<p>使用ggpp包。</p>
<div class="cell">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sub_plot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://tibble.tidyverse.org/reference/tibble.html">tibble</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.98</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.98</span>, plot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/list.html">list</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ggsurv</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">table</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ggsurv</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_plot_npc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sub_plot</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>npcx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span>, npcy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">y</span>, label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>使用geom_plot_npc函数将子图添加到主图中，label表示要添加的子图。效果如下：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full"><p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408200040329.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">option 3</figcaption></figure>
</div>
<p>完整代码已经放在了<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>里，感兴趣的同学可以自行查看。</p>


<!-- -->

</section> ]]></description>
  <category>r</category>
  <category>ggplot2</category>
  <guid>https://leslie-lu.github.io/blog/2024/08/20/nested_layout/</guid>
  <pubDate>Tue, 20 Aug 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408200034399.png" medium="image" type="image/png"/>
</item>
<item>
  <title>欢迎加入预测模型星球</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/08/14/clinical_prediction_model/</link>
  <description><![CDATA[ 





<section id="由来" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="由来">由来</h3>
<p>前面我们给大家推荐了这本几位非常厉害的教授老师主编的<a href="https://mp.weixin.qq.com/s/QQDM3aqyjaOSXXlZznJRDg">《临床预测模型方法与应用》</a>，陆陆续续地，在各个平台上，大家都反馈已经收到了这本书，并且这本书还很大很厚，涵盖了方法学、操作、专题以及案例。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408141829108.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">feedback</figcaption>
</figure>
</div>
<p>那这时候，就有同学和我说，按照以往看书的习惯，收到书的前一俩周，还是可以翻翻，但是后面就会慢慢地放在那里，然后就不了了之了。</p>
<p>所以，我们就想，能不能有一个平台，让大家一起学习这本书，一起讨论、交流，一起进步呢？</p>
</section>
<section id="预测模型星球" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="预测模型星球">预测模型星球</h3>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408141822826.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">知识星球</figcaption>
</figure>
</div>
<p>向大家完整介绍下这个星球，也鼓励更多想要讨论交流的小伙伴进入到我的星球里面，大家一起愉快地学习。</p>
<ol type="1">
<li>首先，你要有实体书，不然我们每周讨论学习某一个章节的时候，你可能会有点懵。</li>
</ol>
<p>购买的二维码链接在<a href="https://mp.weixin.qq.com/s/QQDM3aqyjaOSXXlZznJRDg">这里</a>。</p>
<ol start="2" type="1">
<li>知识星球的目的是和大家一起营造一个国内高质量的预测模型类研究的知识圈，让星球里的人能够受益。</li>
</ol>
<p>来到这里你会遇到一群志同道合的人，一起学习、相互交流、共同促进。这个交流圈高度专注于预测类研究领域。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408141840460.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">content</figcaption>
</figure>
</div>
<ol start="3" type="1">
<li><p>我们会每周一起学习讨论这本书的一个章节，每周一次，每次一个小时或一个章节，讨论的内容会包括这一章的重点内容、难点、案例分析等。</p></li>
<li><p>除了这本书，如果未来人数足够，我们还会不定期地邀请一些同样从事预测类研究的博士生、学者，来和大家分享他们的研究成果、经验、心得等。</p></li>
</ol>
<p>后续我们会根据星球中同学们的需求，不定时地开展更多主题的workshop，具体时间请关注我们的公众号和<a href="https://t.zsxq.com/5ecjA">星球</a>，我们会在这两个平台上发布最新的信息。</p>


<!-- -->

</section>

 ]]></description>
  <category>workshop</category>
  <category>prediction model</category>
  <guid>https://leslie-lu.github.io/blog/2024/08/14/clinical_prediction_model/</guid>
  <pubDate>Wed, 14 Aug 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408141822826.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>星球第二期workshop上线</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/08/11/workshop_002/</link>
  <description><![CDATA[ 





<p>我们<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>正式上线第二期workshop啦！</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408111605260.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">workshop</figcaption>
</figure>
</div>
<p>本期workshop主题是“Sample Size Calculations in Clinical Research”。本期workshop将从临床研究中不同试验设计的角度出发，介绍如何基于不同设计类型（平行设计、交叉设计、析因设计、成组序贯设计等）、比较类型（非劣效、等效、优效试验）、主要终点指标等因素进行样本量计算。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408111619582.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">screenshot</figcaption>
</figure>
</div>
<p>目前暂定的安排是每周一节一小时，直到本期workshop的全部内容结束。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408111620421.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">used files</figcaption>
</figure>
</div>
<p>后续我们会根据星球中同学们的需求，不定时地开展更多主题的workshop，具体时间请关注我们的公众号和<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>，我们会在这两个平台上发布最新的信息。</p>


<!-- -->


 ]]></description>
  <category>workshop</category>
  <category>sample size</category>
  <category>clinical research</category>
  <guid>https://leslie-lu.github.io/blog/2024/08/11/workshop_002/</guid>
  <pubDate>Sun, 11 Aug 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408111605260.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>星球第一期workshop上线</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/08/04/workshop_001/</link>
  <description><![CDATA[ 





<p>我们<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>正式上线第一期workshop啦！</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408041637573.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">workshop</figcaption>
</figure>
</div>
<p>本期workshop主题是“Statistical Methods for Analysis with Missing Data”。本期workshop将从缺失数据的概念、缺失数据的类型、缺失数据的机制、缺失数据的影响、缺失数据的处理方法等方面展开讲解，帮助大家更好地理解缺失数据的问题，掌握缺失数据的处理方法。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408041641868.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">screenshot</figcaption>
</figure>
</div>
<p>目前暂定的安排是每周一节一小时，直到本期workshop的全部内容结束。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408041644463.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">used files</figcaption>
</figure>
</div>
<p>后续我们会根据星球中同学们的需求，不定时地开展更多主题的workshop，具体时间请关注我们的公众号和<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>，我们会在这两个平台上发布最新的信息。</p>


<!-- -->


 ]]></description>
  <category>workshop</category>
  <category>missing data</category>
  <category>statistical methods</category>
  <guid>https://leslie-lu.github.io/blog/2024/08/04/workshop_001/</guid>
  <pubDate>Sun, 04 Aug 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408041637573.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>倾向性评分加权</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/08/03/propensity_score_weighting/</link>
  <description><![CDATA[ 





<section id="背景介绍" class="level3">
<h3 class="anchored" data-anchor-id="背景介绍">背景介绍</h3>
<p>对于非RCT类的观察性研究，由于分组的非随机性，导致了研究偏倚的存在，致使观察到的效应很多时候往往并不可用。为了解决这个问题，研究者们提出了倾向性评分的方法，通过倾向性评分的计算，可以使得试验组和对照组之间的分布更加接近，从而减少了研究偏倚的影响。</p>
<p>我们公众号以往有过五篇类似的介绍内容，分别是：</p>
<ol type="1">
<li><a href="https://mp.weixin.qq.com/s/S5nd__7fflKBekeOKCJQEQ">倾向性评分分析</a></li>
<li><a href="https://mp.weixin.qq.com/s/HuyE_79VJMY1e0VoRgcLbA">倾向性评分分析的统计学考虑</a></li>
<li><a href="https://mp.weixin.qq.com/s/j8olCbIDN06UCHgWirzq3g">倾向性评分匹配的生存分析怎么做</a></li>
<li><a href="https://mp.weixin.qq.com/s/hMXiND44bFGD57c7t7wGaw">倾向性评分overlapping weighting的SAS实现（一）</a></li>
<li><a href="https://mp.weixin.qq.com/s/fxqrH0Im2y_oqfg3K63Epw">生存资料倾向性评分OW的SAS实现（二）</a></li>
</ol>
<p>其中，后面两篇文章提到了倾向性评分加权中的overlapping weighting方法，这篇文章将对倾向性评分加权的方法进行详细介绍。</p>
</section>
<section id="因果效应" class="level3">
<h3 class="anchored" data-anchor-id="因果效应">因果效应</h3>
<p>首先，我们来看下几种因果效应。</p>
<p>ATE即平均处理效应（average treatment effect），是指在试验组和对照组之间的处理效应的差异。理想情况下，随机对照试验估计出来的效应即ATE，但是在实际研究中，由于种种原因，我们往往无法进行随机对照试验。由于ATE的估计人群是试验组和对照组的总体，ATE假设两组受试者是有相同的概率/机会接受某一种处理的，然而，实际研究中，研究者往往更加关注的是ATE的局部估计，即在某一特定的人群中（一般是接受治疗的试验组），处理的效应是多少，而这个效应即为ATT（average treatment effect on the treated）。由于ATT只需要对处理组人群估计因果处理效应，对于RCT而言，潜在的治疗效果和治疗组分配是相互独立的，因此，ATT即为ATE；然而，对于非RCT类研究而言，二者是不同的。</p>
<p>我们还可以计算ATC（average treatment effect on the control），即对于未接受治疗的人群，如果接受治疗，其效应是多少。此外，还有ATM（average treatment effect among the evenly matchable），即在对照组中，找到与试验组相匹配的人群，计算在这个匹配的总体人群中的治疗效应；ATO（average treatment effect among the overlap population），即在试验组和对照组的重叠人群中，计算治疗效应。相比于ATM，ATO有着更好的方差属性，由于其不像ATM那样匹配要求，转而是选择两组重叠的中间人群，因此，ATO的估计更加稳健。</p>
</section>
<section id="倾向性评分加权" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="倾向性评分加权">倾向性评分加权</h3>
<p>针对以上五种因果效应，我们可以通过倾向性评分加权的方法来进行相应的估计。这里直接给出五种权重的计算公式：</p>
<ol type="1">
<li>ATE：<img src="https://latex.codecogs.com/png.latex?w_%7BATE%7D%20=%20%5Cfrac%7BZ_i%7D%7Be_i%7D%20+%20%5Cfrac%7B1%20-%20Z_i%7D%7B1%20-%20e_i%7D"></li>
<li>ATT：<img src="https://latex.codecogs.com/png.latex?w_%7BATT%7D%20=%20%5Cfrac%7Be_iZ_i%7D%7Be_i%7D%20+%20%5Cfrac%7Be_i(1-Z_i)%7D%7B1-e_i%7D"></li>
<li>ATC：<img src="https://latex.codecogs.com/png.latex?w_%7BATC%7D%20=%20%5Cfrac%7B(1-e_i)Z_i%7D%7Be_i%7D%20+%20%5Cfrac%7B(1-e_i)%20(1-Z_i)%7D%7B1%20-%20e_i%7D"></li>
<li>ATM：<img src="https://latex.codecogs.com/png.latex?w_%7BATC%7D%20=%20%5Cfrac%7B(1-e_i)Z_i%7D%7Be_i%7D%20+%20%5Cfrac%7B(1-e_i)%20(1-Z_i)%7D%7B1%20-%20e_i%7D"></li>
<li>ATO：<img src="https://latex.codecogs.com/png.latex?w_%7BAT0%7D%20=%20(1-e_i)Z_i%20+%20e_i(1-Z_i)"></li>
</ol>
<p>以上五种加权的示例以及具体实现的全部代码，我们已经放在了<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>里，感兴趣的同学可以自行查看。</p>
<p>这里我们展示下加权后人群的分布情况。</p>
<section id="原始人群的ps分布" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="原始人群的ps分布">原始人群的ps分布</h4>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408031942417.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">ps of original population</figcaption>
</figure>
</div>
</section>
<section id="ate" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="ate">ATE</h4>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408031944764.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">ATE</figcaption>
</figure>
</div>
</section>
<section id="att" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="att">ATT</h4>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408031945648.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">ATT</figcaption>
</figure>
</div>
</section>
<section id="atc" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="atc">ATC</h4>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408031946706.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">ATC</figcaption>
</figure>
</div>
</section>
<section id="atm" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="atm">ATM</h4>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408031946718.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">ATM</figcaption>
</figure>
</div>
</section>
<section id="ato" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="ato">ATO</h4>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408031947889.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">ATO</figcaption>
</figure>
</div>
</section>
</section>
<section id="总结" class="level3">
<h3 class="anchored" data-anchor-id="总结">总结</h3>
<p>相信通过以上可视化的展示，大家会更容易理解倾向性评分加权的方法对目标人群的选择以及治疗效应的解释。借助于合适的效应加权，我们可以估计出治疗效应并对于以上五种治疗效应的估计值。</p>


<!-- -->

</section>

 ]]></description>
  <category>propensity score</category>
  <category>weighting</category>
  <guid>https://leslie-lu.github.io/blog/2024/08/03/propensity_score_weighting/</guid>
  <pubDate>Sat, 03 Aug 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408031947889.png" medium="image" type="image/png"/>
</item>
<item>
  <title>预测模型领域新书推荐</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/07/19/new_book/</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>首先，今天这篇不是软文哦。</p>
</blockquote>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://img01.yzcdn.cn/upload_files/2024/07/19/FlaDOPwuw67QXR1EG_dIwX858yNM.jpg!large.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">临床预测模型方法与应用</figcaption>
</figure>
</div>
<p>非常高兴向大家推荐和我们课题组一直保持良好合作的荷兰 Utrecht University <a href="https://www.uu.nl/staff/JWang6">王俊峰教授</a>参与主编的新书《<a href="https://shop19174385.m.youzan.com/wscgoods/detail/3f2t7uivrox5lr1?scan=1&amp;activity=none&amp;from=kdt&amp;qr=directgoods_4268678081&amp;shopAutoEnter=1&amp;is_share=1&amp;from_uuid=4760198145&amp;goodsImg=https%3A%2F%2Fimg01.yzcdn.cn%2Fupload_files%2F2024%2F07%2F19%2FFlaDOPwuw67QXR1EG_dIwX858yNM.jpg&amp;sf=wx_sm&amp;share_cmpt=native_wechat">临床预测模型方法与应用</a>》。</p>
<p>王老师是临床预测模型领域内的专家，大家感兴趣的可以去看王老师的<a href="https://scholar.google.com/citations?hl=en&amp;user=00iVjcAAAAAJ">google scolar</a>。在和王老师合作做项目的过程中，我也是收获很多，扫除了一些知识上的盲点和疑区。因而，对于关注我的同学们而言，如果有对临床预测模型感兴趣的，我也是非常推荐这本书。</p>
<p>这本书由南京医科大学公共卫生学院的陈峰教授作序，主编人员都是在预测模型、生物统计领域内有着丰富经验和深刻见解的科研人员，王老师在我们合作的项目文章里也给与了我悉心的指导，北京天坛医院<a href="https://scholar.google.com/citations?user=lRMQ1TQAAAAJ&amp;hl=en">谷鸿秋教授</a>也是刚刚作为一作发表了<a href="https://www.nejm.org/doi/full/10.1056/NEJMoa2400314">NEJM</a>，这本书可以说是大咖云集了。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://img01.yzcdn.cn/upload_files/2024/07/19/FhenV4zyYep1OLarEbPTNGwBTxQE.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">序言</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://img01.yzcdn.cn/upload_files/2024/07/19/FgbP3FuafNrK00Art1Rl0ocpCIZ7.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">序言</figcaption>
</figure>
</div>
<p>相信很多做科研的同学，一直想找一本这个方向领域的权威且全面的中文书，这本书应该是一个不错的选择。如果是对预测模型感兴趣的小伙伴可以直接下单预定啦，也可以关注下8月份王老师在北大、复旦的讲座。这本书8月份会正式上市，目前可以扫码下图进行预定。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202407191947983.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">预定</figcaption>
</figure>
</div>


<!-- -->


 ]]></description>
  <category>prediction model</category>
  <category>book</category>
  <guid>https://leslie-lu.github.io/blog/2024/07/19/new_book/</guid>
  <pubDate>Fri, 19 Jul 2024 00:00:00 GMT</pubDate>
  <media:content url="https://img01.yzcdn.cn/upload_files/2024/07/19/FlaDOPwuw67QXR1EG_dIwX858yNM.jpg!large.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>2023年最新JCR影响因子发布</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/06/23/JCR_2023/</link>
  <description><![CDATA[ 





<section id="年最新jcr影响因子" class="level3">
<h3 class="anchored" data-anchor-id="年最新jcr影响因子">2023年最新JCR影响因子</h3>
<p>最新的影响因子前几天已经发布了，和去年一样，大家在公众号后台回复”<strong>JCR2023</strong>”，即可拿到最全的总结excel表格，包括2023年的最新影响因子，以及各个学科的排名，希望对大家有所帮助。</p>
</section>
<section id="关注的一些期刊" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="关注的一些期刊">关注的一些期刊</h3>
<p>几乎全部的期刊影响因子都回落到了几年前的水平。</p>
<p>四大神刊中JAMA几近腰斩，柳叶刀系列的多个子刊也是如此。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202406231742280.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">柳叶刀系列</figcaption>
</figure>
</div>
<p>医工交叉领域也是普遍下滑。medical informatics数字医疗部分，lancet digital health和npj Digital Medicine分别是23.8和12.4分。</p>
<p>以往动辄二三十分的盛况不再。</p>


<!-- -->

</section>

 ]]></description>
  <category>sci</category>
  <category>jcr</category>
  <guid>https://leslie-lu.github.io/blog/2024/06/23/JCR_2023/</guid>
  <pubDate>Sun, 23 Jun 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202406231731181.png" medium="image" type="image/png"/>
</item>
<item>
  <title>常用损失函数</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/06/07/loss_function/</link>
  <description><![CDATA[ 





<section id="loss-function" class="level3">
<h3 class="anchored" data-anchor-id="loss-function">loss function</h3>
<p>在机器学习/深度学习任务中，衡量模型预测值与真实值之间的差异的指标称为损失函数。损失函数是模型训练的关键组成部分，它可以帮助我们优化模型参数，使得模型的预测值更加接近真实值。预测任务的目标也是最小化损失函数，如，我们利用反向传播算法等方法，通过更新损失函数相对于模型参数的梯度来最小化损失函数，提高模型的预测能力。此外，有效的损失函数还可以帮助我们平衡模型的偏差和方差，提高模型的泛化能力。</p>
<p>依据预测任务的不同，损失函数可以分为回归任务和分类任务两大类。回归任务的损失函数通常是均方误差（MSE）或平均绝对误差（MAE），而分类任务的损失函数则有交叉熵损失函数、Hinge损失函数等。本文将介绍常用的损失函数及其应用场景。</p>
<section id="均方误差mse" class="level4">
<h4 class="anchored" data-anchor-id="均方误差mse">均方误差（MSE）</h4>
<p>均方误差（Mean Squared Error，MSE）是回归任务中最常用的损失函数之一，它衡量模型预测值与真实值之间的差异。MSE的计算公式如下：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AMSE%20=%20%5Cfrac%7B1%7D%7Bn%7D%20%5Csum_%7Bi=1%7D%5E%7Bn%7D%20(y_i%20-%20%5Chat%7By%7D_i)%5E2%0A"></p>
<p>可以看到，MSE是预测值与真实值之间差值的平方和的均值，它对较大差异分配更高的惩罚。MSE非负，越小，说明模型的预测值与真实值之间的差异越小，模型的预测能力越好。MSE对异常值敏感，因为它是差值的平方和，异常值的平方会放大差异，导致模型的预测能力下降。</p>
<p>其在pytorch中的实现：</p>
<div id="mse" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">torch.nn.MSELoss(reduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>)</span></code></pre></div>
</div>
</section>
<section id="平均绝对误差mae" class="level4">
<h4 class="anchored" data-anchor-id="平均绝对误差mae">平均绝对误差（MAE）</h4>
<p>平均绝对误差（Mean Absolute Error，MAE）是回归任务中另一种常用的损失函数。MAE的计算公式如下：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AMAE%20=%20%5Cfrac%7B1%7D%7Bn%7D%20%5Csum_%7Bi=1%7D%5E%7Bn%7D%20%7Cy_i%20-%20%5Chat%7By%7D_i%7C%0A"></p>
<p>相比于MSE，MAE是预测值与真实值之间差值的绝对值的均值，它对异常值不敏感，因为它是差值的绝对值的和，不会对某一异常值的差异分配过高的权重。MAE的值越小，说明模型的预测值与真实值之间的差异越小，模型的预测能力越好。</p>
<p>针对MAE和MSE的优缺点，我们可以根据具体的任务需求选择合适的损失函数。如果任务需要重点关注异常值，可以选择MSE，否则选择MAE。</p>
<div id="mae" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">torch.nn.L1Loss(reduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>)</span></code></pre></div>
</div>
</section>
<section id="huber-loss" class="level4">
<h4 class="anchored" data-anchor-id="huber-loss">Huber loss</h4>
<p>Huber loss是一种结合了MSE和MAE的损失函数，它在差值较小的情况下使用MSE，差值较大的情况下使用MAE。Huber loss的计算公式如下：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AL_%7B%5Cdelta%7D(y,%20%5Chat%7By%7D)%20=%20%5Cleft%5C%7B%0A%5Cbegin%7Barray%7D%7Bll%7D%0A%5Cfrac%7B1%7D%7B2%7D(y%20-%20%5Chat%7By%7D)%5E2,%20&amp;%20%5Ctext%7Bif%20%7D%20%7Cy%20-%20%5Chat%7By%7D%7C%20%5Cleq%20%5Cdelta%20%5C%5C%0A%5Cdelta%20%7Cy%20-%20%5Chat%7By%7D%7C%20-%20%5Cfrac%7B1%7D%7B2%7D%20%5Cdelta%5E2,%20&amp;%20%5Ctext%7Botherwise%7D%0A%5Cend%7Barray%7D%0A%5Cright.%0A"></p>
<p>其中，<img src="https://latex.codecogs.com/png.latex?%5Cdelta">是一个超参数，用于控制MSE和MAE之间的平衡。Huber loss对异常值不敏感，同时保留了MSE的平滑性，是一种较为稳健的损失函数。</p>
<div id="smoothl1loss" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">torch.nn.SmoothL1Loss(reduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>)</span></code></pre></div>
</div>
</section>
<section id="二元交叉熵损失函数binary-cross-entropy-loss" class="level4">
<h4 class="anchored" data-anchor-id="二元交叉熵损失函数binary-cross-entropy-loss">二元交叉熵损失函数（Binary Cross Entropy Loss）</h4>
<p>交叉熵损失函数（Cross Entropy Loss）是二分类任务中最常用的损失函数之一，我们前面也以及<a href="https://mp.weixin.qq.com/s/y2gZKXebDv3tKha7Hu5Djw">介绍过</a>。交叉熵损失函数的计算公式如下：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AL(y,%20%5Chat%7By%7D)%20=%20-%5Cfrac%7B1%7D%7Bn%7D%20%5Csum_%7Bi=1%7D%5E%7Bn%7D%20y_i%20%5Clog(%5Chat%7By%7D_i)%20+%20(1%20-%20y_i)%20%5Clog(1%20-%20%5Chat%7By%7D_i)%0A"></p>
<p>其中，<img src="https://latex.codecogs.com/png.latex?y_i">是真实标签，<img src="https://latex.codecogs.com/png.latex?%5Chat%7By%7D_i">是模型预测的概率值。交叉熵损失函数对于模型预测的概率值和真实标签之间的差异进行了惩罚，使得模型更加关注预测正确的类别。交叉熵损失函数是一种凸函数，可以通过梯度下降等方法进行优化。</p>
<div id="bce" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">torch.nn.BCELoss(weight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, reduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>)</span></code></pre></div>
</div>
</section>
<section id="多类交叉熵损失函数categorical-cross-entropy-loss" class="level4">
<h4 class="anchored" data-anchor-id="多类交叉熵损失函数categorical-cross-entropy-loss">多类交叉熵损失函数（Categorical Cross Entropy Loss）</h4>
<p>多类交叉熵损失函数是多分类任务中常用的损失函数之一，它是交叉熵损失函数的扩展。多类交叉熵损失函数的计算公式如下：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AL(y,%20%5Chat%7By%7D)%20=%20-%5Cfrac%7B1%7D%7Bn%7D%20%5Csum_%7Bi=1%7D%5E%7Bn%7D%20%5Csum_%7Bj=1%7D%5E%7Bm%7D%20y_%7Bij%7D%20%5Clog(%5Chat%7By%7D_%7Bij%7D)%0A"></p>
<p>其中，<img src="https://latex.codecogs.com/png.latex?y_%7Bij%7D">是真实标签，<img src="https://latex.codecogs.com/png.latex?%5Chat%7By%7D_%7Bij%7D">是模型预测的概率值。</p>
<div id="ce" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">torch.nn.CrossEntropyLoss(weight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,ignore_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, reduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>)</span></code></pre></div>
</div>
</section>
<section id="hinge损失函数" class="level4">
<h4 class="anchored" data-anchor-id="hinge损失函数">Hinge损失函数</h4>
<p>Hinge损失函数是支持向量机（SVM）中常用的损失函数之一，它适用于二分类任务。Hinge损失函数的计算公式如下：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AL(y,%20%5Chat%7By%7D)%20=%20%5Cmax(0,%201%20-%20y%20%5Ccdot%20%5Chat%7By%7D)%0A"></p>
<p>Hinge损失函数旨在最大化决策边界的间隔，即使得正确分类的样本距离决策边界的距离尽可能大。Hinge损失函数对于误分类的样本进行了惩罚，使得模型更加关注分类边界附近的样本，从而尽可能把数据点推向远离决策边界的方向。</p>
<p>代码已经放进了<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>里。</p>


<!-- -->

</section>
</section>

 ]]></description>
  <category>python</category>
  <category>machine learning</category>
  <category>deep learning</category>
  <category>loss function</category>
  <guid>https://leslie-lu.github.io/blog/2024/06/07/loss_function/</guid>
  <pubDate>Fri, 07 Jun 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202406072019199.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Python中机器学习模型的校准</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/05/17/calibration/</link>
  <description><![CDATA[ 





<section id="calibration" class="level3">
<h3 class="anchored" data-anchor-id="calibration">calibration</h3>
<p>在我们利用机器学习模型来建模分类预测时，首要关注的指标能力当然是dircrimination，即模型的预测区分能力。常见的指标有sensitivity、specificity、AUROC等。我们在上一篇<a href="https://mp.weixin.qq.com/s/wolSW-kdUU8IC293KR9gKg">文章</a>中介绍了如何选择最优分类阈值，这里我们接着介绍在选择了最优阈值后，如何评估模型的<a href="https://mp.weixin.qq.com/s/OdSDu3XXXTbTz_-lYirs5w">校准能力</a>。</p>
<p>所谓校准能力，即模型预测的概率与实际发生的概率<strong>一致</strong>。</p>
<p>通俗来解释这个事情：比如说，我们模型预测某个病人患病的概率是0.8，那么，按照概率定义理解，模型预测概率为0.8时，100个人中应该有80个人最终患病，这个结果体现了模型的校准能力和稳定性。如果模型预测概率为0.8时，实际只有20个人患病，那么，模型的校准能力就不够好，你也不会信任这个模型在实际应用中的预测结果。这就是校准能力的重要性，即你的模型最终输出的概率值要准确反映出事件实际发生的概率。</p>
</section>
<section id="如何评价calibration" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="如何评价calibration">如何评价calibration</h3>
<section id="calibration-plot" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="calibration-plot">calibration plot</h4>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202405171632445.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">calibration curve</figcaption>
</figure>
</div>
<p>上图是一个典型的calibration curve，也是我们在文章中常见的图。</p>
<p>我们将模型预测概率cut或者quantile成5或者10个区间（bin），每个区间预测概率的均值作为x轴，每个区间实际发生的概率作为y轴，然后画出来这个曲线。这个图是评价模型校准能力的一个直观指标。python中可以轻松实现这个工作：</p>
<div id="calibration--plot" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.calibration <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> calibration_curve</span>
<span id="cb1-2">y_means, pred_means <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> calibration_curve(y_true, y_pred, n_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,strategy)</span></code></pre></div>
</div>
<p>理想情况下，所有点都在对角线上，即模型预测的概率与实际发生的概率完全一致。如果点在对角线上方，说明模型低估，反之，高估。</p>
<p>calibration level的定义有：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202405171653641.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">calibration level<span class="citation" data-cites="RN410">(Alonzo 2009)</span></figcaption>
</figure>
</div>
</section>
<section id="其他指标" class="level4">
<h4 class="anchored" data-anchor-id="其他指标">其他指标</h4>
<p>除了calibration plot，我们还可以用其他指标来评价模型的校准能力，比如说Brier score、Hosmer-Lemeshow test、calibration in the large等。这里不做详细介绍。</p>
<p>我们感兴趣的是，当我们通过上述方法评价了模型的校准能力后，如果发现模型的校准能力不够好，我们应该怎么办？</p>
</section>
</section>
<section id="calibrate-model" class="level3">
<h3 class="anchored" data-anchor-id="calibrate-model">calibrate model</h3>
<p>我们已经发现，模型输出值并不能代表概率。python中一般有<strong>predict_proba</strong>方法，即这个方法其实并不能保证输出的概率是真实的概率。</p>
<div id="predict_proba" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.ensemble <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> RandomForestClassifier</span>
<span id="cb2-2">model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RandomForestClassifier().fit(X_train, y_train)</span>
<span id="cb2-3">y_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict_proba(X_test)[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</div>
<p>所以，我们需要对模型进行校准。</p>
<section id="platt-scaling" class="level4">
<h4 class="anchored" data-anchor-id="platt-scaling">Platt scaling</h4>
<p>Platt scaling是一种常见的校准方法，其原理是对模型输出的概率以及真实标签，用一个logistic regression模型来拟合，从而实现对模型输出的概率进行校准，拿到最终的概率。</p>
<div id="platt-scaling" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.calibration <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> CalibratedClassifierCV</span>
<span id="cb3-2">calibrated <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CalibratedClassifierCV(model, method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sigmoid'</span>, cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb3-3">calibrated.fit(X_train, y_train)</span></code></pre></div>
</div>
</section>
<section id="isotonic-regression" class="level4">
<h4 class="anchored" data-anchor-id="isotonic-regression">Isotonic regression</h4>
<p>Isotonic regression是另一种校准方法，其原理是对模型输出的概率以及真实标签，用一个isotonic regression模型来拟合，从而实现对模型输出的概率进行校准。</p>
<div id="isotonic-regression" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.isotonic <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> IsotonicRegression</span>
<span id="cb4-2">ir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsotonicRegression().fit(y_pred, y_test)</span></code></pre></div>
</div>
</section>
<section id="bayesian-binning-into-quantiles" class="level4">
<h4 class="anchored" data-anchor-id="bayesian-binning-into-quantiles">bayesian binning into quantiles</h4>
<p>BBQ是一种基于贝叶斯的校准方法，其原理是将预测概率分成若干个区间，然后在每个区间内对概率进行校准。该方法结合了分箱（binning）和贝叶斯推断的优点，可以在样本量较小时仍然保持较好的校准效果。</p>
<p>还有其他方法可以供尝试。</p>
</section>
</section>
<section id="take-home-message" class="level3">
<h3 class="anchored" data-anchor-id="take-home-message">take home message</h3>
<p>在利用机器学习模型进行分类预测时，我们不可忽视模型的校准能力。</p>
<p>代码已经放进了<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>里。</p>


<!-- -->


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-RN410" class="csl-entry">
Alonzo, T. A. 2009. <span>“Clinical Prediction Models: A Practical Approach to Development, Validation, and Updating: By Ewout w. Steyerberg.”</span> Generic. Oxford University Press.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{lu2024,
  author = {Lu, Zhen},
  title = {Python中机器学习模型的校准},
  date = {2024-05-17},
  url = {https://leslie-lu.github.io/blog/2024/05/17/calibration/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-lu2024" class="csl-entry quarto-appendix-citeas">
Lu, Zhen. 2024. <span>“Python中机器学习模型的校准.”</span> May 17, 2024.
<a href="https://leslie-lu.github.io/blog/2024/05/17/calibration/">https://leslie-lu.github.io/blog/2024/05/17/calibration/</a>.
</div></div></section></div> ]]></description>
  <category>python</category>
  <category>machine learning</category>
  <category>calibration</category>
  <guid>https://leslie-lu.github.io/blog/2024/05/17/calibration/</guid>
  <pubDate>Fri, 17 May 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202405171632445.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Hierarchical composite endpoints治疗效应的可视化</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/05/13/hierarchical_composite_endpoints/</link>
  <description><![CDATA[ <section id="复合终点" class="level3"><h3 class="anchored" data-anchor-id="复合终点">复合终点</h3>
<p>有时，根据主要研究目的，我们很难从多个终点指标中选出其中某一个作为主要终点，此时，我们可以利用<strong>复合终点</strong>来作为主要终点。</p>
<p>Hierarchical composite endpoints (<a href="https://cran.r-project.org/web/packages/hce/hce.pdf">HCE</a>)可以整合不同类型、不同重要性终点成一个有序终点指标，以表示患者经历的不同严重程度的终点。如，在固定随访的RCT中，outcomes of interest可以是death、hospitalization，而这两个终点存在严重程度的差异。很明显，死亡是最严重的。同样最终死亡的两个患者，生存时间更长，意味治疗效应更好；同样最终住院的两个患者，入院前时间更长，治疗效应更好；同样未住院的两个患者，某一实验室指标的change from baseline更大，效应更好。</p>
<p>对于这种HCE，我们可以计算win odds<span class="citation" data-cites="RN1185">(Gasparyan et al. 2021)</span>来比较组间差异，然而，治疗效应的可视化受到复合终点的影响，不容易像单纯的生存曲线那样用合适的工具可视化出来。</p>
<p>针对这一问题，AstraZeneca的Martin Karpefors等人提出了一种新的方法，即<em>maraca plot<span class="citation" data-cites="RN1187">(Karpefors, Lindholm, and Gasparyan 2023)</span></em>。这种方法可以将复合终点中time to event(TTE)以及连续性终点的治疗效应可视化出来，同时也可以用来比较不同治疗组之间的差异。对应的<a href="https://cran.r-project.org/web/packages/maraca/index.html">R包</a>可以方便地实现这一点。</p>
</section><section id="maraca-plot" class="level3"><h3 class="anchored" data-anchor-id="maraca-plot">maraca plot</h3>
<p>maraca基于ggplot2，其中，对于TTE采用Kaplan-Meier曲线展示cumulative proportions，对于连续性终点可选用箱线图、violin plot以及scatter plot展示连续性分布。这种方法可以同时展示HCE的不同组成成分。</p>
<p>来看一个例子。</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://github.com/AstraZeneca/maraca">maraca</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/utils/data.html">data</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hce_scenario_a</span>, package <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"maraca"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hce_scenario_a</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/utils/head.html">head</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  SUBJID              GROUP GROUPN      AVAL0       AVAL    TRTP
1      1          Outcome I      0 120.440921   120.4409  Active
2      2 Continuous outcome  40000   3.345229 40003.3452 Control
3      3 Continuous outcome  40000  22.802615 40022.8026  Active
4      4          Outcome I      0 577.311386   577.3114 Control
5      5         Outcome II  10000 781.758081 10781.7581  Active
6      6        Outcome III  20000 985.097981 20985.0980 Control</code></pre>
</div>
</div>
<p>具体变量意义，大家可以查看<code><a href="https://rdrr.io/pkg/maraca/man/hce_scenario_a.html">?hce_scenario_a</a></code>。</p>
<p>可视化如下：</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">column_names</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>outcome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GROUP"</span>, arm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRTP"</span>, value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AVAL0"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">tte_outcomes</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Outcome I"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Outcome II"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Outcome III"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Outcome IV"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">continuous_outcome</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Continuous outcome"</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">arm_levels</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>active <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Active"</span>, control <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Control"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">maraca_object</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/maraca/man/maraca.html">maraca</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">tte_outcomes</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">continuous_outcome</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">arm_levels</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">column_names</span>,</span>
<span>  fixed_followup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span>, compute_win_odds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">AZ_colors</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#830051"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#F0AB00"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/graphics/plot.default.html">plot</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">maraca_object</span>, density_plot_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"default"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org/reference/ggtheme.html">theme_bw</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org/reference/scale_manual.html">scale_color_manual</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">AZ_colors</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org/reference/scale_manual.html">scale_fill_manual</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">AZ_colors</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://leslie-lu.github.io/blog/2024/05/13/hierarchical_composite_endpoints/index_files/figure-html/maraca-plot-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section><section id="结果解释" class="level3"><h3 class="anchored" data-anchor-id="结果解释">结果解释</h3>
<p>怎么看这张图？</p>
<p>首先是x轴上HCE的5个组成成分，x轴上每个成分的长度大小，代表了患者达到不同成分终点的比例，可以看到，continuous outcome的比例最大，说明这个终点的患者所占比例最大。其次，cumulative percentage显示active组在四个TTE终点上是存在差异的。再然后是continuous outcome的分布，偏向x轴右侧代表change from baseline更大。而这些结合起来，就是win odds的结果，可以看到，和我们从可视化的角度看到的结果是一致的。</p>
<p>代码已经放进了<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>里。</p>


<!-- -->


</section><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-RN1185" class="csl-entry">
Gasparyan, S. B., E. K. Kowalewski, F. Folkvaljon, O. Bengtsson, J. Buenconsejo, J. Adler, and G. G. Koch. 2021. <span>“Power and Sample Size Calculation for the Win Odds Test: Application to an Ordinal Endpoint in COVID-19 Trials.”</span> Journal Article. <em>Journal of Biopharmaceutical Statistics</em> 31 (6): 765–87.
</div>
<div id="ref-RN1187" class="csl-entry">
Karpefors, M., D. Lindholm, and S. B. Gasparyan. 2023. <span>“The Maraca Plot: A Novel Visualization of Hierarchical Composite Endpoints.”</span> Journal Article. <em>Clinical Trials (London, England)</em> 20 (1): 84–88. <a href="https://doi.org/10.1177/17407745221134949">https://doi.org/10.1177/17407745221134949</a>.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{lu2024,
  author = {Lu, Zhen},
  title = {Hierarchical Composite {endpoints治疗效应的可视化}},
  date = {2024-05-13},
  url = {https://leslie-lu.github.io/blog/2024/05/13/hierarchical_composite_endpoints/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-lu2024" class="csl-entry quarto-appendix-citeas">
Lu, Zhen. 2024. <span>“Hierarchical Composite
Endpoints治疗效应的可视化.”</span> May 13, 2024. <a href="https://leslie-lu.github.io/blog/2024/05/13/hierarchical_composite_endpoints/">https://leslie-lu.github.io/blog/2024/05/13/hierarchical_composite_endpoints/</a>.
</div></div></section></div> ]]></description>
  <category>r</category>
  <category>clinical trial</category>
  <category>endpoint</category>
  <guid>https://leslie-lu.github.io/blog/2024/05/13/hierarchical_composite_endpoints/</guid>
  <pubDate>Mon, 13 May 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202405131659328.png" medium="image" type="image/png"/>
</item>
<item>
  <title>最优分类阈值</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/05/11/optimal_threshold/</link>
  <description><![CDATA[ 





<p>这里我们借助<em>scikit-learn</em>来探讨分类问题中阈值的选择。</p>
<section id="数据准备和参数选择" class="level3">
<h3 class="anchored" data-anchor-id="数据准备和参数选择">数据准备和参数选择</h3>
<p>首先是数据准备：</p>
<div id="libraries-n-things" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_breast_cancer</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> confusion_matrix</span>
<span id="cb1-8"></span>
<span id="cb1-9">np.set_printoptions(suppress<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, precision<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb1-10">pd.options.mode.chained_assignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb1-11">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.max_columns'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb1-12">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.width'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb1-13"></span>
<span id="cb1-14">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_breast_cancer()</span>
<span id="cb1-15">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>]</span>
<span id="cb1-16">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>]</span>
<span id="cb1-17"></span>
<span id="cb1-18">Xtrain, Xvalid, ytrain, yvalid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X, y, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.20</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">516</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Xtrain.shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>Xtrain<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Xvalid.shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>Xvalid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Xtrain.shape: (455, 30)
Xvalid.shape: (114, 30)</code></pre>
</div>
</div>
<p>模型我们这里选择<em>随机森林</em>。超参的选择，基于<code>GridSearchCV</code>，这里也不赘述。有一个点需要说明，由于使用的是肿瘤数据集，在这种情况下，我们更关注的是<code>recall</code>，即尽量减少假阴性的情况。因而，我们在训练模型时，也是将recall作为评价指标。</p>
<div id="train-model-rf" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.ensemble <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> RandomForestClassifier</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GridSearchCV</span>
<span id="cb3-3"></span>
<span id="cb3-4">param_grid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb3-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n_estimators"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>],</span>
<span id="cb3-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"min_samples_leaf"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>],</span>
<span id="cb3-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ccp_alpha"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.3</span>]</span>
<span id="cb3-8">    }</span>
<span id="cb3-9"></span>
<span id="cb3-10">mdl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GridSearchCV(</span>
<span id="cb3-11">    RandomForestClassifier(random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">516</span>), </span>
<span id="cb3-12">    param_grid, </span>
<span id="cb3-13">    scoring<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"recall"</span>, </span>
<span id="cb3-14">    cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb3-15">    )</span>
<span id="cb3-16"></span>
<span id="cb3-17">mdl.fit(Xtrain, ytrain)</span>
<span id="cb3-18"></span>
<span id="cb3-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"best parameters: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mdl<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>best_params_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>best parameters: {'ccp_alpha': 0, 'min_samples_leaf': 4, 'n_estimators': 100}</code></pre>
</div>
</div>
</section>
<section id="模型预测" class="level3">
<h3 class="anchored" data-anchor-id="模型预测">模型预测</h3>
<p>拿到模型后，自然我们可以开始预测：</p>
<div id="cell-predict" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">ypred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mdl.predict_proba(Xvalid)[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb5-2">ypred</span></code></pre></div>
<div id="predict" class="cell-output cell-output-display" data-execution_count="3">
<pre><code>array([0.005     , 0.82743637, 0.97088095, 0.        , 0.        , 1.        , 0.98020202, 0.67380556, 0.        , 0.99333333, 0.9975    , 0.30048576, 0.9528113 , 0.99666667, 0.04102381, 0.99444444, 1.        , 0.828226  , 0.        , 0.        , 0.97916667, 1.        , 0.99607143, 0.90425163, 0.        , 0.02844156, 0.99333333, 0.98183333, 0.9975    , 0.08869769, 0.97369841, 0.        , 1.        , 0.71100866, 0.96022727, 0.        , 0.71200885, 0.06103175, 0.005     , 0.99490476, 0.1644127 , 0.        , 0.23646934, 1.        , 0.57680164, 0.64901715, 0.9975    , 0.61790818, 0.95509668, 0.99383333, 0.04570455, 0.97575758, 1.        , 0.47115815, 0.92422619, 0.77371415, 0.        , 1.        , 0.26198657, 0.        , 0.28206638, 0.95216162, 0.98761905, 0.99464286, 0.98704762, 0.85579351, 0.10036905, 0.00222222, 0.98011905, 0.99857143, 0.92285967, 0.95180556, 0.97546947, 0.84433189, 0.005     , 0.99833333, 0.83616339, 1.        , 0.9955    , 1.        , 0.99833333, 1.        ,
       0.86399315, 0.9807381 , 0.        , 0.99833333, 0.9975    , 0.        , 0.98733333, 0.96822727, 0.23980827, 0.7914127 , 0.        , 0.98133333, 1.        , 1.        , 0.89251019, 0.9498226 , 0.18943254, 0.83494391, 0.9975    , 1.        , 0.77079113, 0.99722222, 0.30208297, 1.        , 0.92111977, 0.99428571, 0.91936508, 0.47118074, 0.98467172, 0.006     , 0.05750305, 0.96954978])</code></pre>
</div>
</div>
<p>这个时候，我们要讲的东西就来了。一般地，我们会选择0.50作为分类阈值，即大于0.50的为正类，小于0.50的为负类。</p>
<div id="threshold-0.50" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">ypred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mdl.predict_proba(Xvalid)[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-2">yhat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mdl.predict(Xvalid).reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-3">preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.concatenate([ypred, yhat], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(preds)</span>
<span id="cb7-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(confusion_matrix(yvalid, yhat))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[0.005      0.        ]
 [0.82743637 1.        ]
 [0.97088095 1.        ]
 [0.         0.        ]
 [0.         0.        ]
 [1.         1.        ]
 [0.98020202 1.        ]
 [0.67380556 1.        ]
 [0.         0.        ]
 [0.99333333 1.        ]
 [0.9975     1.        ]
 [0.30048576 0.        ]
 [0.9528113  1.        ]
 [0.99666667 1.        ]
 [0.04102381 0.        ]
 [0.99444444 1.        ]
 [1.         1.        ]
 [0.828226   1.        ]
 [0.         0.        ]
 [0.         0.        ]
 [0.97916667 1.        ]
 [1.         1.        ]
 [0.99607143 1.        ]
 [0.90425163 1.        ]
 [0.         0.        ]
 [0.02844156 0.        ]
 [0.99333333 1.        ]
 [0.98183333 1.        ]
 [0.9975     1.        ]
 [0.08869769 0.        ]
 [0.97369841 1.        ]
 [0.         0.        ]
 [1.         1.        ]
 [0.71100866 1.        ]
 [0.96022727 1.        ]
 [0.         0.        ]
 [0.71200885 1.        ]
 [0.06103175 0.        ]
 [0.005      0.        ]
 [0.99490476 1.        ]
 [0.1644127  0.        ]
 [0.         0.        ]
 [0.23646934 0.        ]
 [1.         1.        ]
 [0.57680164 1.        ]
 [0.64901715 1.        ]
 [0.9975     1.        ]
 [0.61790818 1.        ]
 [0.95509668 1.        ]
 [0.99383333 1.        ]
 [0.04570455 0.        ]
 [0.97575758 1.        ]
 [1.         1.        ]
 [0.47115815 0.        ]
 [0.92422619 1.        ]
 [0.77371415 1.        ]
 [0.         0.        ]
 [1.         1.        ]
 [0.26198657 0.        ]
 [0.         0.        ]
 [0.28206638 0.        ]
 [0.95216162 1.        ]
 [0.98761905 1.        ]
 [0.99464286 1.        ]
 [0.98704762 1.        ]
 [0.85579351 1.        ]
 [0.10036905 0.        ]
 [0.00222222 0.        ]
 [0.98011905 1.        ]
 [0.99857143 1.        ]
 [0.92285967 1.        ]
 [0.95180556 1.        ]
 [0.97546947 1.        ]
 [0.84433189 1.        ]
 [0.005      0.        ]
 [0.99833333 1.        ]
 [0.83616339 1.        ]
 [1.         1.        ]
 [0.9955     1.        ]
 [1.         1.        ]
 [0.99833333 1.        ]
 [1.         1.        ]
 [0.86399315 1.        ]
 [0.9807381  1.        ]
 [0.         0.        ]
 [0.99833333 1.        ]
 [0.9975     1.        ]
 [0.         0.        ]
 [0.98733333 1.        ]
 [0.96822727 1.        ]
 [0.23980827 0.        ]
 [0.7914127  1.        ]
 [0.         0.        ]
 [0.98133333 1.        ]
 [1.         1.        ]
 [1.         1.        ]
 [0.89251019 1.        ]
 [0.9498226  1.        ]
 [0.18943254 0.        ]
 [0.83494391 1.        ]
 [0.9975     1.        ]
 [1.         1.        ]
 [0.77079113 1.        ]
 [0.99722222 1.        ]
 [0.30208297 0.        ]
 [1.         1.        ]
 [0.92111977 1.        ]
 [0.99428571 1.        ]
 [0.91936508 1.        ]
 [0.47118074 0.        ]
 [0.98467172 1.        ]
 [0.006      0.        ]
 [0.05750305 0.        ]
 [0.96954978 1.        ]]
[[35  3]
 [ 1 75]]</code></pre>
</div>
</div>
<p>但是，这个阈值是可以调整的。我们可以通过调整阈值来达到不同的目的。比如，我们可以通过调整阈值来减少假阴性的情况，这在类别不平衡时尤为重要。</p>
</section>
<section id="阈值的选择" class="level3">
<h3 class="anchored" data-anchor-id="阈值的选择">阈值的选择</h3>
<p>我们介绍几种常用的方法。</p>
<section id="阳性类别prevalance" class="level4">
<h4 class="anchored" data-anchor-id="阳性类别prevalance">1. 阳性类别prevalance</h4>
<p>我们看下这个数据集中阳性类别的比例：</p>
<div id="positive-prevalance" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Proportion of positives in training set: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>ytrain<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ytrain<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Proportion of positives in training set: 0.62</code></pre>
</div>
</div>
<p>这个toy数据集很夸张哈，达到了0.62。在实际应用中，这个比例可能只有10%或者1%。这里我们只是拿它示例哈，用这个prevalance来作为阈值。</p>
<div id="threshold-prevalance" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ytrain.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ytrain.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb11-2">yhat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.where(ypred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> thresh, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb11-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(confusion_matrix(yvalid, yhat))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[34  4]
 [ 0 76]]</code></pre>
</div>
</div>
<p>考虑prevalance的方法，可以在类别不平衡的情况下，减少假阴性的情况。</p>
</section>
<section id="最优f1指数" class="level4">
<h4 class="anchored" data-anchor-id="最优f1指数">2. 最优F1指数</h4>
<p>F1指数是precision和recall的调和平均数。我们可以通过最大F1指数来选择最优的阈值。</p>
<div id="threshold-f1" class="cell" data-execution_count="7">
<div class="cell-output cell-output-stdout">
<pre><code>Threshold using optimal f1-score: 0.471.</code></pre>
</div>
</div>
<p>F1最高为0.471，我们采用它来进行预测：</p>
<div id="threshold-f1-predict" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.471</span></span>
<span id="cb14-2">yhat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.where(ypred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> thresh, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb14-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(confusion_matrix(yvalid, yhat))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[34  4]
 [ 0 76]]</code></pre>
</div>
</div>
</section>
<section id="roc曲线" class="level4">
<h4 class="anchored" data-anchor-id="roc曲线">3. ROC曲线</h4>
<p>我们可以通过<a href="https://mp.weixin.qq.com/s/Zw85hAdx7VdwCioG5NwHQw">ROC曲线</a>来选择最优的阈值。ROC曲线下的面积AUC越大，说明模型越好。我们可以选择ROC曲线最靠近左上角的点作为最优阈值。</p>
<div id="cell-threshold-roc" class="cell" data-execution_count="9">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://leslie-lu.github.io/blog/2024/05/11/optimal_threshold/index_files/figure-html/threshold-roc-output-1.png" id="threshold-roc" class="quarto-figure quarto-figure-center anchored figure-img" width="445" height="447"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="prc曲线" class="level4">
<h4 class="anchored" data-anchor-id="prc曲线">4. PRC曲线</h4>
<p>PRC曲线是<a href="https://mp.weixin.qq.com/s/Zw85hAdx7VdwCioG5NwHQw">precision-recall曲线</a>。相比于ROC曲线，PRC曲线更适合类别不平衡的情况。我们主要选择PRC曲线最靠近右上角的点作为最优阈值。</p>
<div id="cell-threshold-prc" class="cell" data-execution_count="10">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://leslie-lu.github.io/blog/2024/05/11/optimal_threshold/index_files/figure-html/threshold-prc-output-1.png" id="threshold-prc" class="quarto-figure quarto-figure-center anchored figure-img" width="445" height="447"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Selected threshold using precision-recall curve: 0.674.</code></pre>
</div>
</div>
</section>
<section id="分别关注precision和recall" class="level4">
<h4 class="anchored" data-anchor-id="分别关注precision和recall">5. 分别关注precision和recall</h4>
<p>我们可以通过调整阈值来分别关注precision和recall。比如，我们可以通过调整阈值来提高recall，减少假阴性的情况。</p>
<div id="cell-threshold-pre-recall" class="cell" data-execution_count="11">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://leslie-lu.github.io/blog/2024/05/11/optimal_threshold/index_files/figure-html/threshold-pre-recall-output-1.png" id="threshold-pre-recall" class="quarto-figure quarto-figure-center anchored figure-img" width="614" height="374"></p>
</figure>
</div>
</div>
</div>
<p><br></p>
<p>代码已经放进了<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>里。</p>
<p><br></p>


<!-- -->

</section>
</section>

 ]]></description>
  <category>python</category>
  <category>machine learning</category>
  <guid>https://leslie-lu.github.io/blog/2024/05/11/optimal_threshold/</guid>
  <pubDate>Sat, 11 May 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202405112020810.png" medium="image" type="image/png"/>
</item>
<item>
  <title>一文搞懂如何选择卡方检验</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/04/30/</link>
  <description><![CDATA[ 





<p>在实际进行数据处理过程中，我发现有的时候，会有小伙伴在选择何种检验方法时，存在一定的疑问。今天咱们梳理一下究竟如何选择卡方检验及其相关检验方法。</p>
<section id="四格表资料卡方检验" class="level3">
<h3 class="anchored" data-anchor-id="四格表资料卡方检验">四格表资料卡方检验</h3>
<ul>
<li><p>非配对设计时</p>
<ol type="1">
<li><p>当总样本量n&gt;=40且所有理论数T&gt;=5时，用普通的Pearson卡方检验，若所得的P约等于检验水准，改用确切概率法；</p></li>
<li><p>当总样本量n&gt;=40但有1&lt;=T&lt;5时，用连续性校正的卡方检验；</p></li>
<li><p>当总样本量n&lt;40或有理论数T&lt;1时，不能用卡方检验，改用确切概率法。</p></li>
</ol></li>
<li><p>配对设计时</p>
<ol type="1">
<li><p>四格表配对卡方检验对称性检验：McNemar检验；</p></li>
<li><p>配对卡方检验的一致性检验：Kappa一致性检验。</p></li>
</ol></li>
</ul>
</section>
<section id="rc-表资料卡方检验" class="level3">
<h3 class="anchored" data-anchor-id="rc-表资料卡方检验">R*C 表资料卡方检验</h3>
<p>R*C 表资料可以分为双向无序、单向有序、双向有序属性相同和双向有序属性不同4类：</p>
<ol type="1">
<li><p>双向无序R*C表：表中两个分类变量皆为无序分类变量，对于该类资料：</p>
<ol type="a">
<li><p>若研究目的为多个样本率或构成比的比较，可用行*列表资料的卡方检验；</p></li>
<li><p>若研究目的为分析两个分类变量之间有无关联性以及关系的密切程度，可用行*列表资料的卡方检验，以及Pearson列联系数进行分析</p></li>
</ol></li>
<li><p>单向有序R*C表有两种形式：一种是R*C表中的分组变量有序、指标变量无序，此种单向有序R*C表可用行*列表资料的卡方检验；另一种是R*C表中的分组变量无序、指标变量有序，此种单向有序R*C表宜用秩和检验或行均分检验进行分析。</p>
<p>具体采用哪种检验方法，需要重点关注谁为指标变量、谁为分组变量以及指标变量是否有序。</p></li>
<li><p>双向有序属性相同的R*C表，表中的两个分类变量皆为有序且属性相同，研究目的通常是分析两种方法的一致性，实际上是2*2配对设计的扩展，此时宜用Kappa一致性检验，也可以用特殊模型分析方法。一致性检验与处理配对设计2*2表的思路一样。</p>
<p>除了对该方表资料作一致性检验外，还可以对两种方法的结果不一致的部分作比较，此时称为对称性检验。</p></li>
<li><p>双向有序属性不同的R*C表，表中的两个分类变量皆为有序且属性不同。对于此类资料，有3种分析目的，所以也就有3种相应的统计分析方法：</p>
<ol type="a">
<li><p>只关心试验分组变量取不同水平时，有序的指标结果变量之间的差别是否有显著性差异，可用单向有序列联表的第二种行均分检验；</p></li>
<li><p>希望研究两个有序变量之间是否有相关关系，需要运用定性资料的相关分析方法，包括Spearman秩相关分析和典型相关分析；</p></li>
<li><p>若两个有序变量之间有相关关系，但不能推断两个变量之间是否是线性相关，是否呈直线变化关系，还需要进一步研究两个变量之间是否呈直线变化关系，即两个有序分类变量间是否存在线性变化趋势，还需要进一步进行线性趋势检验即趋势卡方检验，以判断两变量是否线性相关。</p></li>
</ol></li>
</ol>


<!-- -->

</section>

 ]]></description>
  <category>biostatisitcs</category>
  <category>chi-square test</category>
  <guid>https://leslie-lu.github.io/blog/2020/04/30/</guid>
  <pubDate>Thu, 30 Apr 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408291336046.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>矩阵乘向量的新视角：空间映射</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/04/29/</link>
  <description><![CDATA[ 





<p>我们前面提到：在指定矩阵的乘法作用下，原始空间中的向量被映射转换到了目标空间中的新坐标，向量的空间位置由此发生了变化，甚至在映射之后，目标空间的维数相较于原始空间都有可能发生改变。</p>
<p>这就引入了矩阵乘向量的一个新视角。</p>
<p>我们知道，向量需要设定一组具体的基底来进行自身的坐标表示。而实际上，矩阵与向量的乘法，本质上可以看作是对向量坐标表示的基底的一种改变。</p>
<p>当我们从列的角度来审视矩阵A与向量x的乘法运算，会发现本质上，是对矩阵A的各个列向量进行线性组合的过程，每个列向量的组合系数就是向量x的各个对应成分。</p>
<p>于是，可以按照列的角度重新把矩阵A写成一组列向量并排的形式，然后将其再与向量x进行乘法运算，这样一看，它所包含的几何意义就更加清楚了。即，一个矩阵和一个列向量相乘的过程可以理解为对位于原矩阵各列的列向量重新进行线性组合的过程。</p>
<p>向量的坐标表示需要依托于基底的选取，只有明确了基底，向量的坐标表示才有实际意义。如，我们说一个二维列向量的坐标是x和y，我们其实已经默认它的基底是二维平面的x轴和y轴正方向上的单位向量。</p>
<p>而矩阵与向量相乘后，我们发现，列向量的基底被变换为新的基底，正是矩阵的各列，矩阵的各列称为新的基向量。</p>
<p>总结一般的情况：矩阵A是m*n的一般矩阵，其中，m不等于n，而向量x是一个n维列向量，没有任何的特殊性，映射前后，列向量x的基向量维数发生了变化：原始的n维列向量x被变换了n个m维列向量线性组合的形式，最终的运算结果是一个m维的列向量。</p>
<p>由此可以看出，映射后的向量维数和原始向量维数的关系取决于矩阵维数m和n的关系：若m大于n，那么映射后的目标向量维数就大于原始列向量的维数，注意：即使矩阵的n个列向量线性无关，由于n个列向量不能张成m维空间，不能表示m维空间中的所有向量，所以称为m维目标空间的基底是不妥当的；若m小于n，那么目标向量的维数就小于原始列向量的维数，注意：由于列向量实现了降维，显然这n个m维列向量线性相关，因此准确地来说，不能构成基底；若m=n，则列向量的维数保持不变，此时，若n个m维向量线性无关，此时，矩阵的各列向量才能称为目标空间中的一组新基底。</p>
<p>矩阵A的各个列是列向量x默认基底经过转换后的目标向量，正因为存在维度和线性相关性方面的多种不同情况，所以这组目标向量的张成空间和原始列向量所在的原始空间之间就存在着多种不同的对应关系。</p>
<p>这也是我们后面所要介绍的空间映射的内容。</p>


<!-- -->


 ]]></description>
  <category>linear algebra</category>
  <category>matrix</category>
  <guid>https://leslie-lu.github.io/blog/2020/04/29/</guid>
  <pubDate>Wed, 29 Apr 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409051637211.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>如何理解残差与误差</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/04/28/</link>
  <description><![CDATA[ 





<p>线性回归因变量的观测值是样本真实数据，估计值是回归模型估计出来的预测值，二者的差别称为残差。误差项表示对因变量而言，模型自变量无法解释的部分，通常假定误差服从均值为0的分布。</p>
<p>注意：残差与误差项不同，残差是针对样本真实数据而言，可以视为对总体模型中误差项的估计。</p>
<p>残差越小，说明拟合的回归模型越好，模型的预测值更加贴近实际值。</p>
<p>虽然我们可能会更关心回归系数的大小，但实际上残差能告诉我们这些系数的估计值是否可靠，而这一点更为重要，回归系数无论表现多好，如果其不能稳定可靠，我们的计算和预测是没有意义的。</p>
<p>因此，在数据分析中一定要学会观察残差图，任何模型拟合的问题基本上都能在残差图中体现出来。</p>
<p>一条对数据点拟合较好的回归线必然穿过所有数据点的中央，所有的点围绕这条线随机波动，反映在残差中就应该是围绕0随机波动，不应该有任何趋势。如果残差能看出趋势，则说明模型拟合肯定有问题。</p>


<!-- -->


 ]]></description>
  <category>biostatisitcs</category>
  <category>residual error</category>
  <guid>https://leslie-lu.github.io/blog/2020/04/28/</guid>
  <pubDate>Tue, 28 Apr 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408291336046.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>矩阵的运算</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/04/27/</link>
  <description><![CDATA[ 





<section id="矩阵的加法运算" class="level3">
<h3 class="anchored" data-anchor-id="矩阵的加法运算">矩阵的加法运算</h3>
<p>矩阵之间的加法运算必须运用在两个相等规模的矩阵之间，即行数和列数都相等的两个矩阵才能做加法运算，原因非常容易理解：因为需要将参与加法运算的两个矩阵对应位置上的元素分别进行相加，才能得到最终的结果矩阵。</p>
<div id="753f4ef0" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb1-3">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>],</span>
<span id="cb1-4">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]])</span>
<span id="cb1-5">B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>],</span>
<span id="cb1-6">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>],</span>
<span id="cb1-7">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>]])</span>
<span id="cb1-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>B)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[11 22]
 [33 44]
 [55 66]]</code></pre>
</div>
</div>
</section>
<section id="矩阵的数量乘法运算" class="level3">
<h3 class="anchored" data-anchor-id="矩阵的数量乘法运算">矩阵的数量乘法运算</h3>
<p>将参与运算的标量数字分别与矩阵的每一个元素相乘，得到结果矩阵对应的新元素，显然，得到的结果矩阵的大小规模是不变的。</p>
<div id="4135ff31" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>],</span>
<span id="cb3-2">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>],</span>
<span id="cb3-3">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]])</span>
<span id="cb3-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>A)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[ 2  8]
 [ 4 10]
 [ 6 12]]</code></pre>
</div>
</div>
</section>
<section id="矩阵与矩阵的乘法" class="level3">
<h3 class="anchored" data-anchor-id="矩阵与矩阵的乘法">矩阵与矩阵的乘法</h3>
<p>不是随意两个矩阵都可以相乘，乘法运算对两个矩阵的形态是有特定要求的，主要有以下3条：</p>
<ol type="1">
<li><p>左边矩阵的列数和右边矩阵的行数必须相等</p></li>
<li><p>左边矩阵的行数决定最终结果矩阵的行数</p></li>
<li><p>右边矩阵的列数决定最终结果矩阵的列数</p></li>
</ol>
<div id="c21f96b3" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb5-2">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>],</span>
<span id="cb5-3">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>],</span>
<span id="cb5-4">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]])</span>
<span id="cb5-5">B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>],</span>
<span id="cb5-6">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]])</span>
<span id="cb5-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(np.dot(A, B))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[ 14  17  20  23]
 [ 30  37  44  51]
 [ 46  57  68  79]
 [ 62  77  92 107]]</code></pre>
</div>
</div>
</section>
<section id="矩阵乘以向量" class="level3">
<h3 class="anchored" data-anchor-id="矩阵乘以向量">矩阵乘以向量</h3>
<p>矩阵与向量的乘法，一般是将矩阵A写在左边，列向量x写在右边，这种 Ax 形式的写法便于描述向量x的空间位置在矩阵A的作用下进行变换的过程。</p>
<p>正如前面文章所讲，矩阵与向量的乘法可以看作是矩阵与矩阵乘法的一种特殊形式，只不过位于后面的是一个列数为1的特殊矩阵而已。</p>
<p>对应前面矩阵与矩阵的乘法规则，矩阵与向量的乘法规则主要有：</p>
<ol type="1">
<li><p>矩阵在左，列向量在右，矩阵的列数和列向量的维数必须相等</p></li>
<li><p>矩阵和列向量相乘的结果也是一个列向量</p></li>
<li><p>矩阵的行数就是结果向量的维数</p></li>
<li><p>乘法运算的实施过程就是矩阵的每行和列向量的对应元素分别相乘之后再进行相加</p></li>
</ol>
<div id="cdbb0caa" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb7-2">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>],</span>
<span id="cb7-3">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]])</span>
<span id="cb7-4">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]]).T</span>
<span id="cb7-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(np.dot(A, x))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[14]
 [32]
 [50]]</code></pre>
</div>
</div>
<p>从结果来看，原始向量表示二维平面上的一个点，其平面坐标为(4,5)，经过矩阵A的乘法作用，最终将原始点转化为三维空间中的一个新的目标点，其空间坐标为(14,32,50)。</p>
<p>从这个例子中，我们可以总结出矩阵所发挥的重要作用：在指定矩阵的乘法作用下，原始空间中的向量被映射转换到了目标空间中的新坐标，向量的空间位置由此发生了变化，甚至在映射后，目标空间的维数相较于原始空间都有可能发生改变。</p>
<p>具体这些空间位置的改变的规律，以及其背后更深层次的内涵，我们会在后面的文章中一起讨论学习。</p>


<!-- -->

</section>

 ]]></description>
  <category>linear algebra</category>
  <category>matrix</category>
  <category>python</category>
  <guid>https://leslie-lu.github.io/blog/2020/04/27/</guid>
  <pubDate>Mon, 27 Apr 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409051637211.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>Python与矩阵</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/04/26/</link>
  <description><![CDATA[ 





<p>矩阵可以被看作是排列的向量或堆放在一起的数字。矩阵的意义非常重要，它可以作用在一个具体的向量上，使向量空间位置发生变换。</p>
<section id="矩阵的python表示" class="level3">
<h3 class="anchored" data-anchor-id="矩阵的python表示">矩阵的Python表示</h3>
<p>对于矩阵而言，最直观的描述就是一个<code>m*n</code>的数字方阵，它可以看作是n个m维列向量从左到右并排摆放，也可以看作是m个n维行向量从上到下进行叠放。</p>
<div id="a8777564" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 矩阵的表示：</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb1-4">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>],</span>
<span id="cb1-5">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>],</span>
<span id="cb1-6">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]])</span>
<span id="cb1-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(A)</span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 在形容矩阵的形状和规模时，一般采用其行数和列数来进行描述</span></span>
<span id="cb1-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(A.shape)</span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 通过矩阵A的shape属性，可以获取一个表示矩阵规模的元组对象</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 这个元组对象包含两个元素：第一个元素表示行数，第二个表示列数</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1 2]
 [3 4]
 [5 6]
 [7 8]]
(4, 2)</code></pre>
</div>
</div>
<p>前面提到，n维的行向量可以看作是一个<code>1*n</code>的特殊矩阵；同理，n维的列向量也同样可以看作是一个<code>n*1</code>的特殊矩阵。这样，一方面，可以将矩阵和向量的Python表示方法统一起来；另一方面，在接下来要介绍的矩阵与向量的乘法运算中，可以将其看作是矩阵与矩阵之间乘法的一种特殊形式，从而统一运算方式。</p>
<div id="df244d85" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#行向量；用生成矩阵的方法生成了一个1*4的矩阵，用来表示一个四维的行向量</span></span>
<span id="cb3-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(B.shape)</span>
<span id="cb3-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(B.T) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#转置成列向量；因为是矩阵形式，所以可以用转置方法，得到对应的四维列向量</span></span>
<span id="cb3-4">C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb3-5">            [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb3-6">            [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],</span>
<span id="cb3-7">            [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#列向量</span></span>
<span id="cb3-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(C)</span>
<span id="cb3-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(C.shape)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(1, 4)
[[1]
 [2]
 [3]
 [4]]
[[1]
 [2]
 [3]
 [4]]
(4, 1)</code></pre>
</div>
</div>
</section>
<section id="特殊形态的矩阵" class="level3">
<h3 class="anchored" data-anchor-id="特殊形态的矩阵">特殊形态的矩阵</h3>
<ol type="1">
<li>方阵：行数和列数相等的一类矩阵，称为方阵，其行数或列数称为它的阶数。</li>
</ol>
<div id="b4c1e256" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb5-2">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb5-3">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],</span>
<span id="cb5-4">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#4阶方阵</span></span>
<span id="cb5-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(A)</span>
<span id="cb5-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(A.shape)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1 1 1 1]
 [2 2 2 2]
 [3 3 3 3]
 [4 4 4 4]]
(4, 4)</code></pre>
</div>
</div>
<ol start="2" type="1">
<li><p>对称矩阵：开始介绍对称矩阵之前，先说明一下矩阵转置的概念。</p>
<p>对于指定的矩阵，若将其行和列上的元素进行位置互换，即原行元素作新列，原列元素作新行，即可得到一个全新的矩阵，这个新矩阵称为原矩阵的转置矩阵，行和列互换的矩阵操作就称为矩阵的转置。</p>
<p>若原矩阵和转置后新得到的矩阵相等，那么将原矩阵称为对称矩阵。由此可见，矩阵对称的前提条件是该矩阵首先必须是一个方阵；此外，对称矩阵的一个典型特征为：沿着从左上到右下的对角线，关于这条对角线相互对称的元素都是彼此相等的。</p>
<p>可以说，对称矩阵是最重要的矩阵，在矩阵的相关分析中扮演极其重要的角色。</p></li>
</ol>
<div id="11919e15" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 矩阵的转置：</span></span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb7-3">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>],</span>
<span id="cb7-4">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]])</span>
<span id="cb7-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(A)</span>
<span id="cb7-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(A.T)</span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 对称矩阵：</span></span>
<span id="cb7-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb7-9">S <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>],</span>
<span id="cb7-10">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>],</span>
<span id="cb7-11">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>],</span>
<span id="cb7-12">              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]])</span>
<span id="cb7-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(S)</span>
<span id="cb7-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(S.T)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1 2 3 4]
 [5 6 7 8]]
[[1 5]
 [2 6]
 [3 7]
 [4 8]]
[[1 2 3 4]
 [2 5 6 7]
 [3 6 8 9]
 [4 7 9 0]]
[[1 2 3 4]
 [2 5 6 7]
 [3 6 8 9]
 [4 7 9 0]]</code></pre>
</div>
</div>
<ol start="3" type="1">
<li>零矩阵：所有元素均为0的矩阵，称为零矩阵。</li>
</ol>
<div id="66bf6f05" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb9-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(A)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[0. 0. 0.]
 [0. 0. 0.]
 [0. 0. 0.]
 [0. 0. 0.]
 [0. 0. 0.]]</code></pre>
</div>
</div>
<ol start="4" type="1">
<li>对角矩阵：若方阵在非对角线位置上元素全部为0，则称为对角矩阵，0元素的位置可以省去不写。</li>
</ol>
<div id="6f69ba3e" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.diag([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])</span>
<span id="cb11-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(A)</span>
<span id="cb11-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(A.T)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1 0 0 0 0]
 [0 2 0 0 0]
 [0 0 3 0 0]
 [0 0 0 4 0]
 [0 0 0 0 5]]
[[1 0 0 0 0]
 [0 2 0 0 0]
 [0 0 3 0 0]
 [0 0 0 4 0]
 [0 0 0 0 5]]</code></pre>
</div>
</div>
<ol start="5" type="1">
<li>单位矩阵/单位阵：对角位置上元素全部为1，其余位置元素均为0的特殊对角矩阵，称为单位矩阵。</li>
</ol>
<div id="c163c63d" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">I <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.eye(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb13-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(I)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 0.]
 [0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 1.]]</code></pre>
</div>
</div>


<!-- -->

</section>

 ]]></description>
  <category>linear algebra</category>
  <category>matrix</category>
  <category>python</category>
  <guid>https://leslie-lu.github.io/blog/2020/04/26/</guid>
  <pubDate>Sun, 26 Apr 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409041318020.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>R语言4.0发布上线</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/04/25/</link>
  <description><![CDATA[ 





<p>昨天，R语言的4.0正式版本已经上线，小伙伴们可以去更新下载了，mac版本的地址：https://mirrors.tuna.tsinghua.edu.cn/CRAN/bin/macosx/R-4.0.0.pkg。</p>
<p>一些小知识点：</p>
<ul>
<li><p>R包安装路径：/Library/Frameworks/R.framework/Versions/Current/Resources/library/；</p></li>
<li><p>不同版本的R包会放在不同的路径下：/Library/Frameworks/R.framework/Versions；</p></li>
<li><p>一般软件都会有很好的向下兼容性，高版本普遍能很好地支持低版本中的功能，但R比较特殊，很多人的电脑上会安装多个版本的R。R包的版本是跟着R的版本走的，所以你要是想用新版R环境中的新R包，就必须更新R；要是想用旧版的低版本R包，最好使用旧版R。最好的应对R版本更迭的方式就是：在你的电脑中安装多个版本的R，这样，使用R包的时候，就不用担心受R版本的影响了。</p></li>
</ul>


<!-- -->


 ]]></description>
  <category>r</category>
  <guid>https://leslie-lu.github.io/blog/2020/04/25/</guid>
  <pubDate>Sat, 25 Apr 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409032128325.png" medium="image" type="image/png"/>
</item>
<item>
  <title>概率密度与累积分布</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/03/22/</link>
  <description><![CDATA[ 





<p>概率分布是统计学的基础，统计学中不少概念和思想都与概率分布有关系。理解了概率分布，很多原来不明白的问题很可能就迎刃而解了。</p>
<ol type="1">
<li><p>理解累积分布和概率密度的概念。</p>
<p>累积分布通俗地说，就是从0一直累积到100%，累积的速度可以相等，也可以不相等，累积分布函数一般用F(x)来表示；概率密度也就是概率的密度，通俗而言，密度就是在某个点上数据比较集中，反映了数据的不同变化特征，概率密度函数一般用f(x)表示。</p></li>
<li><p>理解累积分布的斜率与概率密度的关系。</p>
<p>累积分布的斜率越大，概率密度也越大。事实上，密度值等于累积分布中对应点的斜率。</p></li>
<li><p>理解累积分布与概率密度的关系。</p>
<p>密度与累积分布的关系是：密度=累积分布的增加量/长度，或者，累积分布的增加量=密度*长度，即概率密度曲线下面积等于相应累积分布函数增加量。对于累积分布而言，如果看整条曲线，即从0增加到100%，因此对应的概率密度曲线下，其面积一定也是100%。</p></li>
</ol>
<p>我们常说的正态分布、二项分布、t分布等概率分布其实都是概率密度函数，所以它们的曲线下方的面积都是100%，只是不同点的密度不同而已。如有的分布可能在0的时候密度较高（数据主要集中在0附近）。</p>


<!-- -->


 ]]></description>
  <category>biostatistics</category>
  <category>probability</category>
  <guid>https://leslie-lu.github.io/blog/2020/03/22/</guid>
  <pubDate>Sun, 22 Mar 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409032123556.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>空间中的向量</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/03/12/</link>
  <description><![CDATA[ 





<p>我们知道，向量的坐标表示方法并不是唯一的，它的具体表示和空间中基底的选择密切相关。</p>
<section id="向量的坐标" class="level3">
<h3 class="anchored" data-anchor-id="向量的坐标">向量的坐标</h3>
<p>向量的坐标依赖于选取的基底。</p>
<p>对于二维向量u=[4,5]⊤而言，我们一直以来都理所当然地认定一个事实：它表示一条在x轴上投影为4、y轴上投影为5的有向线段，它的坐标是(4,5)。这其实是基于一个没有刻意强调前提：利用方向为x轴、y轴正方向，且长度为1的两个向量，即Ex=[1,0]⊤，Ey=[0,1]⊤作为上述讨论的基础。因此，对于向量u而言，其完整的写法应该为u=4Ex + 5Ey，进一步展开就是u=4[1,0]⊤ + 5[0,1]⊤，这种形式的表意是最完整的。</p>
<p>这里被选中作为向量u基准的一组向量是Ex和Ey，它们被称为基底。基底的每一个成员向量被称为基向量，而坐标对应的就是各个基向量前的系数。一般情况下，若不做特殊说明，那么基向量都是选取沿着坐标轴正方向且长度为1的向量，这样方便描述和计算。</p>
<p>关于向量u的完整准确的说法是：在基底(Ex,Ey)下，其坐标是[4,5]⊤。也就是说，坐标必须依托于指定的基底才有意义。因此，要想准确地描述向量，首先就要确定一组基底，然后通过求出向量在各个基向量上的投影值，最后才能确定在这个基上的坐标值。</p>
</section>
<section id="向量在不同基底上表示为不同坐标" class="level3">
<h3 class="anchored" data-anchor-id="向量在不同基底上表示为不同坐标">向量在不同基底上表示为不同坐标</h3>
<p>一个指定的向量可以在多组不同的基底上进行坐标表示，在不同的基底表示下，坐标自然也是不同的。根据一组基底对应的坐标值去求另一组基底所对应的坐标值，这就是以后我们将会反复用到的坐标变换。</p>
<p>根据我们之前关于向量内积的介绍，最好是事先把基向量的模长转化为1。这样一来，从向量内积的内涵可以看出，若基向量的模长是1，那么就可以用目标向量内积基向量，从而可以直接获得该向量在这个基向量方向上的对应坐标值。实际上，对于任何一个向量，想要找到同方向上模长为1的向量并不是一件难事，只要让向量的各成分分别除以向量的模长即可，就能使向量的模长为单位1。而向量的坐标就是指定基的对应系数。</p>
</section>
<section id="构成基底的条件" class="level3">
<h3 class="anchored" data-anchor-id="构成基底的条件">构成基底的条件</h3>
<p>在一个n维空间中，不是随便选取n个向量都能作为一组基底，构成基底的向量必须满足这样的条件：在n维空间中，任意一个向量都可以表示为这一组基向量的线性组合，并且这种线性组合的表示方式（也就是系数）必须是唯一的。</p>
<ul>
<li><p>向量数量足够</p>
<p>若想成为三维空间中的一组基底，首先，其中的每个基向量的维数都必须是3；其次，基向量的个数也必须为3个。若数量不足，如只有两个三维向量a1和a2（假设它们是不共线的两个向量），那么无论对这两个向量怎么进行线性组合，它们都只能表示二者所构成的平面上的任意向量，而三维空间中位于该二维平面上外的任何一个向量，都无法由a1和a2的线性组合进行表示。</p></li>
<li><p>满足线性无关</p>
<p>如何确保表示方法的唯一性呢？这里我们引入向量线性无关的概念。一组向量需要满足线性无关的条件，即其中任何一个向量都不能通过其余向量的线性组合的形式进行表示。</p>
<p>换句话说，当且仅当x1=x2=x3=…=xn=0的等式关系成立时，线性组合x1u1 + x2u2 + x3u3 + … + xnun才能生成零向量，若xi中有非零值存在，那么这一组向量就是线性相关的。一组向量满足线性无关的条件等效于满足线性组合表示方法的唯一性（可以从反证法的角度说明线性无关和表示方法的唯一性是等价的）。</p>
<p>在这个三维空间中，要求所选取的3个基向量线性无关。若它们线性相关，那么x3就可以表示为x1和x2的线性组合，换句话说，备选的3个向量就处在一个平面上了。这样，自然无法通过线性组合的方法来表示三维空间中位于平面外的任何一个向量了，即3个三维向量之间由于彼此线性相关，因此无法张成整个三维空间，只能张成三维空间中的二维平面甚至是退化为一条直线。</p>
<p>若三维空间中基向量的个数超过3个，则是不行的。如，假设有4个向量试图成为该空间的一组基向量，任选出其中的3个向量，按照前提，假设它们之间满足线性无关性，那么对于第4个向量，由于它也处于三维空间中，则它一定能够被前3个向量的线性组合所表示。那么，三维空间中的这4个向量显示是线性相关的，无法满足向量构成基底的唯一性条件。</p></li>
</ul>
</section>
<section id="构成基底的条件-1" class="level3">
<h3 class="anchored" data-anchor-id="构成基底的条件-1">构成基底的条件</h3>
<p>对于一组向量，由它的所有线性组合所构成的空间称为这一组向量的张成空间。张成空间对所讨论向量的线性无关性没有要求，这些向量可以是线性相关的。</p>
<p>两个线性无关的二维向量，它们构成了二维空间中的一组基底，因此它们的张成空间就是整个二维空间；两个线性相关的共线二维向量，它们的张成空间是一条穿过原点的一维直线；等。</p>
<p>向量的个数和维数都不是其张成空间维数及形态的决定因素，具体的情况需要结合向量的线性无关性进行整体考量，这就会涉及秩的相关概念。</p>


<!-- -->

</section>

 ]]></description>
  <category>biostatistics</category>
  <category>linear algebra</category>
  <guid>https://leslie-lu.github.io/blog/2020/03/12/</guid>
  <pubDate>Thu, 12 Mar 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409021427240.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>Python与向量</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/03/11/</link>
  <description><![CDATA[ 





<p>Python中一般使用numpy库生成一个向量，但其默认生成的是行向量。</p>
<div id="4255e900" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 行向量</span></span>
<span id="cb1-3">a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb1-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(a)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1 2 3 4]</code></pre>
</div>
</div>
<p>但我们一般使用列向量的形式，因此需要对其做一些处理。有人想，转置处理就可以了，也就是把向量的行索引和列索隐交换位置。但是numpy重的转置方法对于一维数组是无效的：</p>
<div id="d1ec862b" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb3-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(a.transpose()) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#从程序的运行结果来看，确实是无效的</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1 2 3 4]</code></pre>
</div>
</div>
<p>应该如何表示一个列向量呢？</p>
<div id="704ddc3c" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb5-2">A_t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A[:, np.newaxis] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#增加一个维度</span></span>
<span id="cb5-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(A_t)</span>
<span id="cb5-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(A_t.shape) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#列向量本身就是二维表示的</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]
 [2]
 [3]
 [4]]
(4, 1)</code></pre>
</div>
</div>
<p>这种做法比较复杂，更直观更简单的实现方法是：显然，我们一直把向量看作是一个维数为1的数组，其实也可以看作是行数为1或列数为1的一个二维数组。而二维数组对应的就是矩阵，因此向量还可以看作是一个特殊的矩阵，即可以把行向量看作是一个1<em>m的特殊矩阵，可以把列向量看作是一个n</em>1的特殊矩阵。</p>
<div id="2df78dfa" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 在对行向量进行初始化时，使用了numpy中的二维数组的初始化方法，因此在语句中多嵌套了一层中括号</span></span>
<span id="cb7-2">A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]])</span>
<span id="cb7-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(A)</span>
<span id="cb7-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(A.T) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#此时可以直接通过行向量转置的方法生成对应的列向量</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1 2 3 4]]
[[1]
 [2]
 [3]
 [4]]</code></pre>
</div>
</div>
<section id="向量的加法" class="level3">
<h3 class="anchored" data-anchor-id="向量的加法">向量的加法</h3>
<p>两个维数相同的向量才能进行加法运算，只要将相同位置上的元素对应相加即可，结果向量的维数保持不变。</p>
<div id="f02fab54" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]]).T</span>
<span id="cb9-2">u</span>
<span id="cb9-3">v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]]).T</span>
<span id="cb9-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>v)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[ 6]
 [ 8]
 [10]]</code></pre>
</div>
</div>
</section>
<section id="向量的数乘" class="level3">
<h3 class="anchored" data-anchor-id="向量的数乘">向量的数乘</h3>
<p>向量的数乘就是将参与乘法运算的标量同向量的每个元素分别相乘，以此得到最终的结果向量，结果向量的维数依然保持不变。从几何意义上来看，向量的数乘就是将向量沿着所在直线的方向拉伸相应的倍数，拉伸方向和参与运算的标量符号一致。</p>
<div id="2dceee5c" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]]).T</span>
<span id="cb11-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>u)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[3]
 [6]
 [9]]</code></pre>
</div>
</div>
</section>
<section id="向量间的乘法内积和外积" class="level3">
<h3 class="anchored" data-anchor-id="向量间的乘法内积和外积">向量间的乘法：内积和外积</h3>
<p>向量间的乘法分为内积和外积两种形式。</p>
<p>向量的内积运算：参与内积运算的两个向量必须维数相等，运算规则是先将对应位置上的元素相乘，然后合并相加，最终运算结果是一个标量。可能这样说不太好理解，要是从几何表示上看，内积的意义就非常清晰了。</p>
<p>内积的几何表示<code>u*v= |u||v|cosθ</code>，它表示向量u在向量v方向上的投影长度乘以向量v的模长。需要注意的是，在实际运算向量内积时，无论是行向量间的内积还是列向量间的内积，最终的运算结果都是一样的。</p>
<div id="452f112a" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb13-2">v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>])</span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 若使用numpy库中的内积运算函数dot进行运算，传入的参数必须是用一维数组表示的行向量</span></span>
<span id="cb13-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(np.dot(u,v)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#一维乘一维，结果还是一维</span></span>
<span id="cb13-5"></span>
<span id="cb13-6">uC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> u[:,np.newaxis]</span>
<span id="cb13-7">vC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v[:,np.newaxis]</span>
<span id="cb13-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(uC)</span>
<span id="cb13-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(vC)</span>
<span id="cb13-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(np.dot(uC,vC)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#行数为1的二维数组，即二维数组形式的行向量，报错</span></span>
<span id="cb13-11"></span>
<span id="cb13-12">u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]])</span>
<span id="cb13-13">v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]])</span>
<span id="cb13-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(np.dot(u,v)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#列数为1的二维数组，即二维数组形式的行向量，报错</span></span>
<span id="cb13-15"></span>
<span id="cb13-16">u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]).T</span>
<span id="cb13-17">v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]]).T</span>
<span id="cb13-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(np.dot(u,v)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#列数为1的二维数组，即二维数组形式的列向量，报错</span></span></code></pre></div>
</div>
<p>二维数组形式的向量怎么进行内积运算呢？我们知道二维数组表示下得向量的本质上是矩阵，只不过是行数或列数为1的特殊矩阵。若将这种表示方法下的向量作为传入内积运算函数dot的参数，就需要依据矩阵的乘法法则来计算。</p>
<div id="dbeaaf40" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]])</span>
<span id="cb14-2">v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]]).T</span>
<span id="cb14-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(np.dot(u,v)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#二维乘二维，结果还是二维</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[37]]</code></pre>
</div>
</div>
<p>向量的外积运算：这里只讨论在二维平面和三维空间中的运算情况。</p>
<p>在二维平面中，与内积类似，外积也有一种表达式：u*v= |u||v|sinθ。在二维平面中，向量的外积表示两个向量张成的平行四边形的“面积”。当然，这个面积要打上引号，因为若两个向量的夹角大于180度，那么向量外积运算所得到的结果为负。</p>
<div id="bbe8956e" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])</span>
<span id="cb16-2">v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb16-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(np.cross(u,v)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#一维乘一维，结果还是一维</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>7</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_5934/2827165229.py:3: DeprecationWarning: Arrays of 2-dimensional vectors are deprecated. Use arrays of 3-dimensional vectors instead. (deprecated in NumPy 2.0)
  print(np.cross(u,v)) #一维乘一维，结果还是一维</code></pre>
</div>
</div>
<p>而在三维空间中，外积要复杂一点，其计算所得到的结果是一个向量而不是一个数值。其最终得到的结果向量也是有明确的物理含义的，即表示u和v两个向量张成平面的法向量。</p>
<div id="16bc6c09" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>])</span>
<span id="cb19-2">y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>])</span>
<span id="cb19-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(np.cross(x,y))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[  0 -27   9]</code></pre>
</div>
</div>
</section>
<section id="向量先数乘后叠加向量的线性组合" class="level3">
<h3 class="anchored" data-anchor-id="向量先数乘后叠加向量的线性组合">向量先数乘后叠加：向量的线性组合</h3>
<p>基于向量加法和数量乘法这两类基本运算，将其进行组合应用。针对向量u和v，先求出标量c和向量u的数量积，再求出标量d和向量v的数量积，最后再将二者进行叠加，就得到向量u和v的线性组合cu+dv，这里的标量c和d可以取任意值，包括0。</p>
<div id="edfbc625" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]]).T</span>
<span id="cb21-2">v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]]).T</span>
<span id="cb21-3">w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]]).T</span>
<span id="cb21-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>u <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w)</span>
<span id="cb21-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(u)</span>
<span id="cb21-6">u.shape</span>
<span id="cb21-7">np.array([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]]).shape</span>
<span id="cb21-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(np.dot(u.T,v.T)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#报错，带有第二个维度无法进行向量内积</span></span></code></pre></div>
</div>
<p>进一步思考：我们知道，两个向量相加，在几何上就是将两个向量首尾依次连接，所得到的结果向量就是连接最初的起点和最终的终点的有向连线。我们假定有3个非零的三维列向量u、v和w，讨论以下几种不同的线性组合情况：</p>
<ul>
<li><p>第一种情况：cu的所有线性组合构成的图像</p>
<p>由于标量c可以取0，因而cu的所有线性组合构成的图像可以表示为三维空间中一条穿过原点(0,0,0)的直线，包括原点本身。</p></li>
<li><p>第二种情况：cu+dv的所有线性组合构成的图像</p>
<ol type="1">
<li><p>当向量u和向量v不在一条直线上时，即u和v不共线</p>
<p><code>cu+dv</code>的所有线性组合构成的图像可以表示为三维空间中的一个通过原点(0,0,0)的二维平面。</p></li>
<li><p>当向量u和向量v处在一条直线上时</p>
<p>则<code>cu+dv</code>的所有线性组合构成的图像可以表示为三维空间中一条穿过原点(0,0,0)的直线，包括原点本身。</p></li>
</ol></li>
<li><p>第三种情况：cu+dv+ew的所有线性组合构成的图像</p>
<ol type="1">
<li><p>当向量u、v、w不在一个平面上时，cu+dv+ew的所有线性组合构成的图像是整个三维空间。</p></li>
<li><p>当向量u、v、w处在一个平面上时，cu+dv+ew的所有线性组合构成的图像是三维空间中的一个通过原点(0,0,0)的二维平面。</p></li>
<li><p>当向量u、v、w处在一条直线上时，cu+dv+ew的所有线性组合构成的图像是三维空间中一条穿过原点(0,0,0)的直线，包括原点本身。</p></li>
</ol></li>
</ul>
<p>我们发现，在讨论上述线性组合的多种不同情况时，均反复提到了共线、共面的概念。这些特殊的性质会对一组向量线性组合所得到的结果向量在空间中的位置产生重要影响，它们构成了线性代数中非常重要的概念。后面我们也将使用更加专业的词汇对其进行描述和介绍，即线性相关和线性无关。</p>


<!-- -->

</section>

 ]]></description>
  <category>biostatistics</category>
  <category>linear algebra</category>
  <category>python</category>
  <guid>https://leslie-lu.github.io/blog/2020/03/11/</guid>
  <pubDate>Wed, 11 Mar 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409021427240.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>线性代数之向量</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/03/10/</link>
  <description><![CDATA[ 





<p>空间是贯穿整个线性代数的主干脉络和核心概念。下面我们学习利用向量这个工具对空间进行定量描述。</p>
<section id="关于向量" class="level3">
<h3 class="anchored" data-anchor-id="关于向量">关于向量</h3>
<p>直观地说，把一组数字排列成一行或一列，就称为向量。它可以作为对空间进行描述的有力工具。</p>
<p>如一个简单的二维向量[4,5]⊤，这个向量有两个成分：第一个成分是数字4，第二个成分是数字5。其可以理解为二维平面中x坐标为4，y坐标为5的一个点，也可以理解为以平面中的原点(0,0)为起点，(4,5)为重点的一条有向线段，这就是二维向量的空间表示。一个向量中成分的个数就是该向量的维数。</p>
<p>不过，向量也不局限于用来直接描述空间中的点坐标和有向线段，也可以凭借基础的数据表示功能，成为一种描述事物属性的便捷工具。</p>
<p>如你的考试成绩为：语文85分，数学92分，英语89分。由于这三门课具有不同科目属性，因此，可以使用一个三维向量来对其进行表示，即score=[85,92,89]⊤。此时不仅仅可以把向量score看作是一个盛放数据的容器，似乎也可以利用它讲科目考试成绩和空间建立起某种关联。</p>
<p>又如，在自然语言处理中，也少不了向量这个重要的工具。程序在进行文本阅读时，首先会对文本材料进行分词处理，然后使用向量对词汇进行表示。这是因为向量很适合将对象的属性和特征对应到高维空间中进行定量表达，同时在此基础上进行进一步的后续处理，如判断词汇之间的相似性等。</p>
<p>我们陆续接触到一些数据处理的基本方法：如投影、降维等，这些方法都是在向量描述的基础上实现的。</p>
</section>
<section id="列向量" class="level3">
<h3 class="anchored" data-anchor-id="列向量">列向量</h3>
<p>向量对应地就拥有两种表达方式：若元素是纵向排列的，就称为列向量；若元素是横向排列的，就成为行向量。在没有特殊说明的情况下，一般都默认为列向量。为什么会偏爱列向量呢？主要是为了方便后续的向量坐标变换、空间之间的映射等计算过程的处理。</p>
<p>将一个矩阵A所表示的映射作用于某个向量x上时，习惯上将其写成矩阵乘以向量的表达形式，即Ax。这种写法的数据表示基础就是：向量x必须是一个列向量。</p>


<!-- -->

</section>

 ]]></description>
  <category>biostatistics</category>
  <category>linear algebra</category>
  <guid>https://leslie-lu.github.io/blog/2020/03/10/</guid>
  <pubDate>Tue, 10 Mar 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202409021427240.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>协方差分析</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/02/23/</link>
  <description><![CDATA[ 





<p>医学试验设计一个很重要的目的就是为了排除非处理因素的干扰影响，使试验误差的估计降到最低限度，从而可以准确地获得处理因素的试验效应。但在某些实际问题中，有些因素在目前还不能控制或难以控制。如在动物饲养试验中，各组动物所增加的平均体重不仅仅与各种饲料营养价值高低有关，还与各动物的进食量有关，甚至与各动物的初始体重等因素及其交互作用都有关系。如果直接进行方差分析，会因为混杂因素的影响而无法得出正确的结论。</p>
<p>协方差分析是将回归分析与方差分析结合起来使用的一种分析方法。在协方差分析中，先将定量的影响因素（即难以控制的混杂因素）看作自变量/协变量，建立因变量随自变量变化的回归方程，利用回归方程把因变量的变化中受不易控制的定量因素的影响扣除掉，从而能够较合理地比较定性的影响因素处在不同水平下，经回归分析手段修正以后的因变量的总体均数之间是否有显著性的差别，这就是协方差分析的基本思想。</p>
<p>协方差分析用于比较一个变量Y在一个或几个因素不同水平上的差异，但Y在受这些因素影响的同时，还受到另一个变量X的影响，且X变量的取值难以人为控制，不能作为方差分析中的一个因素处理。此时如果X与Y之间可以建立回归关系，则可以用协方差分析的方法排除X对Y的影响，然后再用方差分析的方法对各因素水平的差异进行统计推断。在协方差分析中，我们称Y为因变量，X为协变量，即在方差分析中用来校正因变量的数值型变量。</p>
<p>也许有人会问随机因素的影响也是不能人为控制的，为什么不能把X作为一种随机因素处理呢？</p>
<p>这里的差异主要在于作为随机因素处理时，虽然每一水平的影响是不能人为控制的，但我们至少可以得到几个属于同一水平的重复，因此可以把它们分别用另一因素的不同水平处理，最后在方差分析时，我们才能排除这一随机因素的影响，对另一因素的各水平进行比较。</p>
<p>例如，当我们考虑动物窝别对增重的影响时，一般可把它当作随机因素处理。一方面是由于它不易数量化，另一方面是同一窝一般有几只动物，可分别接受另一因素不同水平的处理。如果我们考虑试验开始时动物初始体重的影响，这时一般的方法是选初始体重相同的动物作为一组，分别接受另一因素的不同水平处理，此时用方差分析没有问题。但显然，这种方法往往是很困难的，一般需要很大的样本。若可供试验的动物样本很少，初始体重又有明显差异，无法选出体重相当的动物，那就只好认为初始体重X与最终体重Y有回归关系，采用协方差分析的方法排除初始体重的影响，再来比较其他因素如饲料种类、数量对增重的影响。协方差分析既利用了回归分析的基本方法，又用到了方差分析的基本方法，这就是协方差分析的基本思想。</p>
<p>消除初始体重影响的另一种方法是对最终体重与初始体重的差值进行统计分析，这种方法与协方差分析的生物学意义是不同的。对差值进行分析的生物学假设是初始体重对以后的体重增量没有任何影响，而协方差分析则是假设体重增量中包含初始体重的影响（不仅仅是初始体重对最终体重的影响），这种影响的大小与初始体重成正比，如果这一比值为1，协方差分析与对差值进行方差分析是相同的。但如果比值不为1，它们的结果将是不同的。也就是说，协方差分析假设使初始体重不同的因素在以后的生长过程中也会发挥作用，而对差值进行方差分析则是假设这些因素以后不再发挥作用，这两种生物学假设是有很大区别的。</p>
<p>在学习中需要注意统计学知识背后的研究假设。由于协方差分析包含了对协变量影响是否存在及其大小等一系列统计检验与估计，它显然比对差值进行分析等方法有更广泛的适用范围，因此除非有明显的证据说明对差值进行分析的生物学假设是正确的，一般情况下还是应采用协方差分析方法。</p>
<p>在医学研究中，很多情况下都需要借助协方差分析来排除非处理因素的干扰，从而准确地估计处理因素的试验效应。如，评价3种药物治疗高脂血症的效果，寻求各方面自然条件基本相同的受试者是很困难的，但是把患者的年龄、体重指数、用药前的血脂水平等作为协变量进行协方差分析，就简单很多。同样，比较几种不同营养奶粉对婴幼儿体重增长的作用差异，把研究对象的性别、年龄、基线体重等混杂因子作为协变量进行协方差分析，则是非常有效的统计分析方法。</p>
<p>和方差分析一样，协方差分析也属于参数分析，因变量Y应当满足以下假设条件：</p>
<ol type="1">
<li><p>在效应因子的每一个水平上，因变量Y服从正态分布，且方差相等；</p></li>
<li><p>在效应因子的每一个水平上，因变量Y和协变量X呈线性关系，且斜率相同。</p></li>
</ol>


<!-- -->


 ]]></description>
  <category>biostatistics</category>
  <category>ancova</category>
  <guid>https://leslie-lu.github.io/blog/2020/02/23/</guid>
  <pubDate>Sun, 23 Feb 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408291336046.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>试验设计与方差分析（4）</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/02/22/</link>
  <description><![CDATA[ 





<section id="重复测量设计" class="level3">
<h3 class="anchored" data-anchor-id="重复测量设计">重复测量设计</h3>
<p>重复测量是指对同一观察对象的同一观察指标在不同的时间点上进行多次测量，用于分析观察指标在不同时间上的变化规律。</p>
<p>这类测量资料在医学研究中比较常见，例如，药效分析中常分析给药后不同时间的疗效比较，由于同一受试对象在不同时点的观测值之间往往彼此不独立，存在某种程度的相关，因此不能满足常规统计方法所要求的独立性假定，使得其分析方法有别于一般的统计分析方法。</p>
<p>最常见的重复测量资料是前后测量设计，如高血压患者治疗前后的血压，其设计与配对设计t检验的试验表达完全相同，但却是两种不同类型的设计，其区别在于：</p>
<ol type="1">
<li><p>配对设计中同一对子的两个试验单位可以随机分配处理，两个试验单位同期观察试验结果，可以比较处理组间差异，而前后测量设计不能同期观察试验结果；</p></li>
<li><p>配对t检验要求同一对子的两个试验单位的观察结果分别与差值相互独立，差值服从正态分布，而前后测量设计前后两次测量的结果通常与差值不独立；</p></li>
<li><p>配对设计用平均差值推断处理作用，而前后测量设计除了分析平均差值外，还可以进行相关回归分析。</p></li>
</ol>
<p>重复测量设计大体有两类，一类是对每个人在同一时间不同因子组合间测量，另外一类是对每个人在不同时间点上重复。前者常见于裂区设计，而后者常见于经典试验设计，即包括前测、处理一次或几次后测的情况，后者比前者要多见。不论沿裂区方向还是沿时间点方向重复，个体内因子无一例外的都是重复测量因子。</p>
<p>重复测量设计的特点是一定有个体内因子，但不一定有个体间因子，后者是不同处理组合或不同个体组，而且即使有不同组群（如男性和女性），但人人都经历重复测量，而不是一组接受重复测量，另一组不接受。</p>
<p>具有重复测量的设计，即在给予某种处理后，在几个不同的时间点上从同一个受试对象身上重复获得指标的观测值，有时是从同一个个体的不同部位上重复获得指标的观测值。由于这种设计符合许多医学试验本身的特点，故在医学科研中应用的频率相当高。</p>
<p>如果试验中共有k个试验因素，其中只有m个因素与重复测量有关，则称为具有m个重复测量的k因素设计。重复测量资料来源于同一受试对象的某一观测值的多次重复测量，常见的重复测量数据的基本格式：N个观测个体，g个处理组，X为观测指标，p为重复测量次数。</p>
<p>在对重复测量资料进行方差分析时，除了要求样本是随机的，在处理的同一水平上观测是独立的，及每一水平的测定值都来自正态总体外，特别强调协方差的复合对称性或球形性。因此，在进行重复测量资料的方差分析前，应先对资料的协方差阵进行球形性检验。若满足球形性要求，则直接进行方差分析；若不满足球形性要求，则需对与时间有关的F统计量分子、分母的自由度进行校正，以减少犯I类错误的概率，或直接进行多变量方差分析。</p>
<p>对重复测量试验数据的方差分析，需考虑两个因素的影响：一个因素是处理分组，可通过施加干预和随机分组来实现；另一个因素是测量时间，由研究者根据专业知识和要求确定。因此重复测量资料的变异可分解为处理因素、时间因素、处理和时间的交互作用、受试对象间的随机误差和重复测量的随机误差等5部分。</p>
<p>重复测量设计的优点：每一个体作为自身的对照，克服了个体间的变异，分析时可更好地集中于处理效应，且被试者自身差异的问题不再存在，即减少了一个差异来源；重复测量设计的每一个体作为自身的对照，研究所需的个体相对较少，因此更加经济。</p>
<p>重复测量设计的缺点：滞留效应，前面的处理效应有可能滞留到下一次的处理；潜隐效应，前面的处理效应有可能激活原本以前不活跃的效应；学习效应，由于是逐步熟悉试验，因此研究对象的反应能力有可能逐步得到提高。</p>
<p>对于重复测量资料的分析处理，我们应用较多的是单变量方差分析的一般线性模型方法。在R数据格式中，重复测量资料同一观察单位在各测量点的测量值用一组变量来表示，计算时将这一组变量当作一个整体作为反应变量来处理。</p>


<!-- -->

</section>

 ]]></description>
  <category>biostatistics</category>
  <category>anova</category>
  <guid>https://leslie-lu.github.io/blog/2020/02/22/</guid>
  <pubDate>Sat, 22 Feb 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408291336046.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>试验设计与方差分析（3）</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/02/20/</link>
  <description><![CDATA[ 





<section id="正交设计" class="level3">
<h3 class="anchored" data-anchor-id="正交设计">正交设计</h3>
<p>析因设计的缺点是当因素个数较多时（3个因素以上），所需试验单位数、处理组数、试验次数和方差分析的计算量会剧增。减少多因素试验次数的有效方法是采用正交试验设计。</p>
<p>当析因设计要求的试验次数太多时，一个非常自然的想法就是从析因设计的全部水平组合中选择一部分有代表性的水平组合进行试验，因此就出现了分式析因设计。但是对于试验设计知识较少的实际工作者而言，选择适当的分式析因设计还是比较困难的，而正交试验设计是研究多因素多水平的又一种试验设计方法。</p>
<p>它是根据正交性从全部的试验组合中挑选出部分有代表性的水平组合进行试验，这些有代表性的水平组合具备均匀分散、齐整可比的特点。正交试验设计是分式析因设计的主要方法，高效、快速、经济。日本著名统计学家田口玄一将正交试验选择的水平组合列成表格，称为正交表。</p>
<p>例如做一个3因素3水平的试验，按全面试验要求，需进行3<em>3</em>3=27种水平组合的试验，且尚未考虑每一组合的重复数，而正交试验设计可以大大减少工作量。</p>
<p>正交设计在医学研究中的用途相当广泛，在具体的操作上，也比析因设计简单，可寻找疗效好的药物配方、医疗仪器多个参数的优化组合、医疗产品的生成工艺、生物体的培养条件等。</p>
<p>假定在一个农业试验中要考察3个小麦品种、3种不同的肥料和3种播种方式对小麦产量的影响，并假定有9个地力基本相同的试验小区。在这个问题中，有3个可能影响小麦产量的因子：品种、肥料和播种方式，每个因子有3个水平，如果要做完全试验，就需要3<em>3</em>3=27个小区，而实际上总共只有9个小区，显然，完全试验在当前的情况下行不通。</p>
<p>因此我们可退一步考虑，按照上述正交设计的想法，设计要求品种、肥料和播种方式中的任意两个的不同水平的搭配都出现一次，满足这种性质的试验设计就是正交试验。</p>
<p>下面给出正交设计的一般性陈述：考虑设计一个试验，安排m个因子，做n次试验，若它满足以下两个条件，则其为正交试验：</p>
<ol type="1">
<li><p>每一因子的不同水平在试验中出现相同的次数（均衡性）；</p></li>
<li><p>任意两因子的不同水平组合在试验中出现相同的次数（正交性）。</p></li>
</ol>
<p>就定义来说，等重复的完全试验显然满足上述两个条件，因此当然也是正交试验设计。但由于其要求的试验次数太多，所以实际上很难实施。我们通常所说的正交试验设计，是指既满足上述两条件，同时试验次数n又远远小于N的设计。</p>
<p>正交试验设计的方案可以用一张表来表示，这张表就被称为正交设计表。一般来说，正交设计表的第1行为表头，标明每列所代表的因子，最左一列标明试验的序号，由1到n。注意：试验的序号并不表示试验的时间先后顺序，先后顺序要按照随机化原则来安排。表中每列的数字代表相应因子的水平序号，每行的数字代表在相应试验中各因子的水平序号，有：</p>
<ol type="1">
<li><p>每列中不同数字出现的次数相同（试验的均衡性）；</p></li>
<li><p>每两列中不同的数字组合出现的次数相同（试验的正交性）。</p></li>
</ol>
<p>假定因子对响应变量的影响无交互效应（许多实际情况正是这样），正交试验的优点是在很少的试验次数（与全面试验相比）中，所得数据可以简便而有效地对因子效应进行参数估计和方差分析。</p>
<p>其方法可一般地归纳如下：</p>
<ul>
<li><p>总均值的估计=试验数据的总平均值</p></li>
<li><p>某因子的某个主效应的估计=该因子的该主效应所出现的试验数据的平均值-总平均值</p></li>
<li><p>总平方和=（试验数据-总平均值）的平方和，自由度=n-1</p></li>
<li><p>某因子的主效应平方和=重复数*参数估计的平方和，自由度=水平数-1</p></li>
<li><p>残差平方和=总平方和-因子效应平方和的和，自由度=总平方和-因子效应自由度的和</p></li>
</ul>


<!-- -->

</section>

 ]]></description>
  <category>biostatistics</category>
  <category>anova</category>
  <guid>https://leslie-lu.github.io/blog/2020/02/20/</guid>
  <pubDate>Thu, 20 Feb 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408291336046.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>试验设计与方差分析（2）</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/02/18/</link>
  <description><![CDATA[ 





<section id="拉丁方设计" class="level3">
<h3 class="anchored" data-anchor-id="拉丁方设计">拉丁方设计</h3>
<p>完全随机设计只涉及一个处理因素，随机区组设计涉及一个处理因素、一个区组因素/配伍因素。若实验研究涉及一个处理因素和两个控制因素，每个因素的类别数或水平数相等，此时可采用拉丁方设计来安排试验，将两个控制因素分别安排在拉丁方设计的行和列上。</p>
<p>将k个不同符号排成k行k列，使得每一个符号在每一行、每一列都只出现一次的方阵，叫做k*k拉丁方。</p>
<p>拉丁方设计就是将处理从纵横两个方向排列为区组/重复，使每个处理在每一行和每一列中出现的次数相等（通常为1次），即在行和列两个方向都进行局部控制，所以它是比随机区组多一个方向局部控制的随机排列设计，因而具有较高精确性。</p>
<p>拉丁方设计的特点是处理数、重复数、行数、列数都相等，即处理数=行区组数=列区组数=重复次数，它的每一行和每一列都是一个区组或一次重复，而每一个处理在每一行或每一列都只出现1次</p>
<p>拉丁方试验设计的步骤：</p>
<ol type="1">
<li><p>选择标准方：标准方是指代表处理因素水平的字母。在进行拉丁方设计时，首先要根据试验处理水平数k从标准方表中选定一个k*k的标准方，随后要对选定的标准方的行、列和处理进行随机化排列；</p></li>
<li><p>列随机</p></li>
<li><p>行随机</p></li>
<li><p>处理随机</p></li>
</ol>
<p>拉丁方设计的特点是纵横两个方向都设了区组，从而可在两个方向上对土壤等差异（指田间试验时）进行局部控制。试验有k个处理，便有k*k个观测值。进行方差分析时，从总变异方差中除了分解出处理间方差和误差项方差外，还可以分解出纵横两个区组的方差，这样可使误差项方差进一步减小，所以拉丁方试验的精确度比随机区组试验更高。</p>
<p>拉丁方设计的优点是：精确度高；缺点是：由于重复数与处理数必须相等，使得两者之间相互制约，缺乏伸缩性。因此采用拉丁方设计时试验的处理数不能太多，一般以4～10个为宜。</p>
</section>
<section id="析因设计" class="level3">
<h3 class="anchored" data-anchor-id="析因设计">析因设计</h3>
<p>单因素方差分析只涉及一个处理因素，该因素至少有两个水平，只是根据试验对象的属性和控制试验误差的需要，采用的试验设计方法有所不同。如比较注射4种不同剂量雌激素对大白鼠子宫重量的影响，处理因素是注射不同剂量的雌激素，有4个水平。完全随机设计是将n只白鼠随机分4组，随机区组设计是将n只白鼠按出生体重相近的原则，4只一组配成区组后，每个区组内随机分配4个处理水平，拉丁方设计则是在随机区组设计的基础上增加了一个列区组，如白鼠有4个种系（行区组），每个种系的4只白鼠按体重分成4个级别（列区组）。可以看出，完全随机设计、随机区组设计和拉丁方设计的处理因素没有变化，都是比较注射4种不同剂量雌激素带来的差别，只是改变了设计的方法，在同样的试验条件下，通过改进试验设计方法可以大大提高试验的效率，如上述试验，白鼠按体重配成区组后再施加处理（随机区组设计），试验的误差均方通常小于完全随机设计。</p>
<p>而上述介绍的各种试验设计方法，严格地说，它们仅适用于只有1个处理因素的试验问题之中，其他因素都属于区组因素，即与处理因素无交互作用。若试验所涉及的处理因素的个数为2或以上，当各因素在试验中所处的地位基本平等，且因素之间存在1级（即2因素之间）、2级（即3因素之间）乃至更复杂的交互作用时，则需选用析因设计。</p>
<p>在评价药物疗效时，除需知道A药和B药各剂量的疗效外（主效应），还需知道两种药同时使用的协同疗效，析因设计及其相应的方差分析用于分析药物的单独效应、主效应和交互效应。</p>
<p>主效应：某因素各水平的平均效应；单独效应：在每个B水平，A的效应；或在每个A水平，B的效应；交互效应：某因素各水平的单独效应随另一因素水平变化而变化，则称两因素之间存在交互效应，包括协同、拮抗作用。</p>
<p>析因设计有交互作用的二因子方差分析将总偏差平方和做如下分解：</p>
<ul>
<li><p>误差偏差平方和：反映随机误差对试验结果的影响；</p></li>
<li><p>因子A引起的偏差平方和：除含有误差波动外，反映因子A对试验结果的影响；</p></li>
<li><p>因子B引起的偏差平方和：除含有误差波动外，反映因子B对试验结果的影响；</p></li>
<li><p>因子A与B的交互作用的偏差平方和：反映因子A与B的交互作用对试验结果的影响。</p></li>
</ul>
<p>如果不存在交互效应，则只需考虑各因素的主效应；在方差分析中，如果存在交互效应，解释结果时，要逐一分析各因素的单独效应，找出最优搭配。在两因素析因设计时，只需考虑一阶交互效应；3个因素及以上时，除一阶交互效应外，还需考虑二阶、三阶等高阶交互效应，解释将更复杂。</p>


<!-- -->

</section>

 ]]></description>
  <category>biostatistics</category>
  <category>anova</category>
  <guid>https://leslie-lu.github.io/blog/2020/02/18/</guid>
  <pubDate>Tue, 18 Feb 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408291336046.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>试验设计与方差分析（1）</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/02/17/</link>
  <description><![CDATA[ 





<section id="完全随机设计" class="level3">
<h3 class="anchored" data-anchor-id="完全随机设计">完全随机设计</h3>
<p>完全随机设计采用完全随机化的分组方法，将全部试验对象分配到k个处理组，各组分别接受不同的处理，试验结束后比较各组均数之间的差别有无统计学意义，推断处理因素的效应。</p>
<p>在方差分析中，常称上述的处理因素为因子，用A、B、C等表示因子在试验中所处的不同情况或状态称为水平。</p>
<p>方差分析解决问题的思路是：从所有观测值的总变异（总方差）中分析出系统误差和随机误差，并用数量表示，在一定意义下比较系统误差和随机误差，若两者的差别不大，说明试验条件的变化（因素水平的不同）对试验结果影响不大；若两者相差较大，且系统误差大得多，说明系统条件变化引出的误差不可忽视。</p>
</section>
<section id="随机区组设计" class="level3">
<h3 class="anchored" data-anchor-id="随机区组设计">随机区组设计</h3>
<p>随机区组设计是根据局部控制和随机排列的原理进行的：将研究的对象按照不同的性质划分为等于重复次数的区组，例如将试验土地按土壤肥力程度等不同的性质划分为等于重复次数的区组，使区组内环境差异最小，而区组间环境允许存在差异，每个区组即为一次完整的重复，区组内的各处理都独立地随机排列，这是随机排列设计中最常用最基本的设计。</p>
<p>随机区组设计的优点：富于伸缩性，单因素、复因素以及综合试验等都可应用；能提供无偏的误差估计，在大区域试验中能有效地降低非处理因素等试验条件的单向差异，降低误差；对试验地的地形要求不严，只对每个区组内的非处理因素等试验条件要求尽量一致，因此不同区组可分散设置在不同地段上。</p>
<p>随机区组设计的缺点：这种设计方法不允许处理数太多，处理数过多，区组必然增大，局部控制的效率会降低，所以处理数一般不超过20个，最好在10个左右。</p>
<p>随机区组设计考虑了个体差异的影响，可分析处理因素和个体差异对试验效应的影响，所以又称为两因素实验设计，比完全随机设计的检验效率高。</p>
<p>该设计是将受试对象先按配比条件配成配伍组（如动物试验时，可按同窝别、同性别、体重相近等进行配伍），每个配伍组有3个或以上的受试对象，再按随机化原则分别将各配伍组中的受试对象分配到各个处理组。</p>
<p>在进行单因素随机区组试验结果的统计分析时，可将处理看作A因素，区组看作B因素，剩余部分则为试验误差。总平方和=区组间平方和+处理间平方和+试验误差平方和，总自由度=区组自由度+处理自由度+误差自由度。</p>


<!-- -->

</section>

 ]]></description>
  <category>biostatistics</category>
  <category>anova</category>
  <guid>https://leslie-lu.github.io/blog/2020/02/17/</guid>
  <pubDate>Mon, 17 Feb 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408291336046.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>方差分析</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/02/15/</link>
  <description><![CDATA[ 





<section id="方差分析" class="level3">
<h3 class="anchored" data-anchor-id="方差分析">方差分析</h3>
<p>t检验和u检验不适用于多个样本均数的比较，而用方差分析比较多个样本均数，可以有效地控制I类错误。</p>
<p>方差分析（analysis of variance，ANOVA）由英国统计学家R.A.Fisher首先提出，以F命名其统计量，故方差分析又称F检验。</p>
<p>方差分析的基本思想是根据研究的目的和设计类型，将总变异的离均差平方和SS及其自由度v分别分解成相应的若干部分，然后求各相应部分的变异（数理统计证明，总的离均差平方和等于各部分离均差平方和之和）；再用各部分的变异与组内（或误差）变异进行比较，得出统计量F值；最后根据F值的大小确定p值，作出统计推断。</p>
<p>方差分析的用途很广，包括两个或多个样本均数间的比较，分析两个或多个因素间的交互作用，回归方程的线性假设检验，多元线性回归分析中偏回归系数的假设检验，两样本的方差齐性检验等。</p>
<p>方差分析的应用条件为：各样本需是相互独立的随机样本；各样本来自正态分布总体；各总体方差相等，即方差齐性。</p>
</section>
<section id="方差分析基本术语" class="level3">
<h3 class="anchored" data-anchor-id="方差分析基本术语">方差分析基本术语</h3>
<p>实验设计和方差分析都有自己相应的语言。</p>
<p>以研究某药物对某癌细胞株增殖影响的研究为例，现有两种药物：新研究药物（Treatdrug）和对照组药物（Controldrug）。</p>
<p>我们提取培养10个某癌细胞株作为研究对象，随机分配一半癌细胞株接受为期96h的Treatdrug治疗，另一半接受为期96h的Controldrug治疗。研究结束时，对两组细胞株的细胞抑制率进行评估。</p>
<p>在这个实验设计中，治疗方案是两水平（Treatdrug和Controldrug）的组间因子，之所以称作组间因子是因为每个患者都仅被分配到一个组别中，没有患者同时接受Treatdrug和Controldrug。</p>
<p>细胞抑制率是因变量，治疗方案是自变量。由于在每种治疗方案下观测数相等，因此这种设计也称为均衡设计；若观测数不同，则称为非均衡设计。</p>
<p>因为仅有一个类别型变量，这种设计又称为单因子方差分析或进一步称为单因子组间方差分析。</p>
<p>方差分析主要是通过F检验来进行效果评测，若治疗方案的F检验显著，则说明96h后两种药物的细胞抑制率均值不同。</p>
<p>假设只对Treatdrug的效果感兴趣，则需要将10个癌细胞株都放在Treatdrug组中，然后在治疗24h和96h后分别评估疗效。此时，时间是两水平（24h和96h）的组内因子，因为每个癌细胞株在时间的所有水平下都进行了测量，因此这种设计称为单因子组内方差分析；又由于每个癌细胞株都不止一次被测量，也称作重复测量方差分析。若时间的F检验显著，则说明细胞抑制率在24h和96h间发生了改变。</p>
<p>现假设对治疗方案差异和它随时间的改变都感兴趣，则可以将两个设计结合起来：随机分配一半癌细胞株到Treatdrug组，另一半到Controldrug组，在24h和96h分别评估它们的细胞抑制率。治疗方案和时间都作为因子时，既可以分析治疗方案的影响和时间的影响，也可以分析治疗方案和时间的交互作用。前两个为主效应，交互部分为交互效应。在这种情况下，需要进行3次F检验，治疗方案因素1次，时间因素1次，两者的交互因素1次。若治疗方案显著，说明Treatdrug和Controldrug对癌细胞的抑制效果不同；若时间显著，表明细胞抑制率在24h和96h间发生了改变；若两种因素交互效应显著，说明两种药物随着时间变化对癌细胞的一直效果不同（即细胞抑制率从24h到96h的改变程度在Treatdrug和Controldrug之间是不同的）。</p>
<p>当设计中包含两个甚至更多因子时，便是多因子方差分析设计。两个因子时称为双因子方差分析，三因子时称为三因子方差分析。若因子设计包括组内因子和组间因子，又称为混合模型方差分析。</p>
<p>这里，即使不同的癌细胞株被随机分配到不同的治疗方案中，但在研究开始时两组癌细胞株的增殖速度可能不同，治疗后的差异可能是最初的增殖速度不同导致的，而不是实验方案的影响。增殖速度也可以解释因变量的组间差异，因此它常被称为混杂因素。如果我们在评测治疗方案类型的影响前，对组建的统计学差异进行统计性调整，将初始增殖速度作为协变量，这样的设计称为协方差分析。</p>
<p>当因变量不止一个时，该设计被称为多元方差分析，若还存在协变量，则称为多元协方差分析。</p>


<!-- -->

</section>

 ]]></description>
  <category>biostatistics</category>
  <category>anova</category>
  <guid>https://leslie-lu.github.io/blog/2020/02/15/</guid>
  <pubDate>Sat, 15 Feb 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408291336046.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>R语言数据处理分析实例</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/02/06/</link>
  <description><![CDATA[ <section id="前言" class="level3"><h3 class="anchored" data-anchor-id="前言">前言</h3>
<p>R是一种块状结构程序语言，“块”由大括号划分，当“块”只包含一条语句时大括号可以省略。程序语句由换行符或分号分隔。和许多脚本语言一样，R语言不需要“声明”变量。</p>
<p>接下来我们一起来处理分析一个简单的数据任务。</p>
</section><section id="实例" class="level3"><h3 class="anchored" data-anchor-id="实例">实例</h3>
<p>一组学生参加了数学、科学和英语三科考试。为了给所有学生确定一个综合的成绩衡量指标，需要将这些科目的成绩组合起来，将排名在前20%的学生评定为A，接下来20%的学生评定为B，依此类推，最后，按字母顺序对学生进行排序。请试处理分析。</p>
<p>如下，我们首先创建原始数据框：</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">studentname</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"John Davis"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Angela Williams"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bullwinkle Moose"</span>, </span>
<span>               <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"David Jones"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Janice Markhammer"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cheryl Cushing"</span>, </span>
<span>               <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Reuven Ytzrhak"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Greg Knox"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Joel England"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mary Rayburn"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">math</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">502</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">412</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">358</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">495</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">410</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">625</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">573</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">522</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">science</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">95</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">82</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">95</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">89</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">86</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">English</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/data.frame.html">data.frame</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">studentname</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">math</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">science</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">English</span>, stringsAsFactors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>         studentname math science English
1         John Davis  502      95      25
2    Angela Williams  600      99      22
3   Bullwinkle Moose  412      80      18
4        David Jones  358      82      15
5  Janice Markhammer  495      75      20
6     Cheryl Cushing  512      85      28
7     Reuven Ytzrhak  410      80      15
8          Greg Knox  625      95      30
9       Joel England  573      89      27
10      Mary Rayburn  522      86      18</code></pre>
</div>
</div>
<p>观察此数据集，马上可以发现一些明显的挑战：首先，三科考试成绩是无法比较的。由于它们的均值和标准差相差很大，对它们求三科的平均成绩是没有意义的。因此，在组合这些考试成绩之前，必须将其转换为可比较的成绩。</p>
<p>因而，我们做如下处理，将三科成绩进行标准化，这样每科考试成绩都是用单位标准差来表示，而非原始的分值尺度表示：</p>
<div class="cell">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">z</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/scale.html">scale</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">z</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>             math     science     English
 [1,]  0.01269128  1.07806562  0.58685145
 [2,]  1.14336936  1.59143020  0.03667822
 [3,] -1.02568654 -0.84705156 -0.69688609
 [4,] -1.64871324 -0.59036927 -1.24705932
 [5,] -0.06807144 -1.48875728 -0.33010394
 [6,]  0.12806660 -0.20534583  1.13702468
 [7,] -1.04876160 -0.84705156 -1.24705932
 [8,]  1.43180765  1.07806562  1.50380683
 [9,]  0.83185601  0.30801875  0.95363360
[10,]  0.24344191 -0.07700469 -0.69688609
attr(,"scaled:center")
   math science English 
  500.9    86.6    21.8 
attr(,"scaled:scale")
     math   science   English 
86.673654  7.791734  5.452828 </code></pre>
</div>
</div>
<p>scale函数为数据对象按列进行中心化（center=TRUE）或标准化（center=TRUE, scale=TRUE），默认情况下，函数scale对矩阵或数据框的指定列进行均值为0、标准差为1的标准化，给出各科成绩标准化后的结果以及各科成绩的均值和标准差。</p>
<p>然后，我们通过mean函数来计算各行的均值以获得三科成绩的综合评价得分，并使用cbind函数将其添加到学生成绩的原始数据框中：</p>
<div class="cell">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Score</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/apply.html">apply</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">z</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">mean</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Score</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1]  0.5592028  0.9238259 -0.8565414 -1.1620473 -0.6289776  0.3532485
 [7] -1.0476242  1.3378934  0.6978361 -0.1768163</code></pre>
</div>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/cbind.html">cbind</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Score</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata2</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>         studentname math science English      Score
1         John Davis  502      95      25  0.5592028
2    Angela Williams  600      99      22  0.9238259
3   Bullwinkle Moose  412      80      18 -0.8565414
4        David Jones  358      82      15 -1.1620473
5  Janice Markhammer  495      75      20 -0.6289776
6     Cheryl Cushing  512      85      28  0.3532485
7     Reuven Ytzrhak  410      80      15 -1.0476242
8          Greg Knox  625      95      30  1.3378934
9       Joel England  573      89      27  0.6978361
10      Mary Rayburn  522      86      18 -0.1768163</code></pre>
</div>
</div>
<p>apply函数可将一个任意函数应用到矩阵、数组、数据框的任何维度上，在矩阵或数据框中，1表示行，2表示列。cbind函数进行列合并，增加列。</p>
<p>接下来，我们通过函数quantile给出三科成绩综合评价得分的百分位数，将学生的百分位数排名重编码为一个新的类别型成绩变量grade，如下：</p>
<div class="cell">
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/stats/quantile.html">quantile</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Score</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">y</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>       80%        60%        40%        20% 
 0.7430341  0.4356302 -0.3576808 -0.8947579 </code></pre>
</div>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">grade</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Score</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">grade</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Score</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Score</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">grade</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Score</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Score</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">grade</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Score</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Score</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">grade</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Score</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata2</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>         studentname math science English      Score grade
1         John Davis  502      95      25  0.5592028     B
2    Angela Williams  600      99      22  0.9238259     A
3   Bullwinkle Moose  412      80      18 -0.8565414     D
4        David Jones  358      82      15 -1.1620473     E
5  Janice Markhammer  495      75      20 -0.6289776     D
6     Cheryl Cushing  512      85      28  0.3532485     C
7     Reuven Ytzrhak  410      80      15 -1.0476242     E
8          Greg Knox  625      95      30  1.3378934     A
9       Joel England  573      89      27  0.6978361     B
10      Mary Rayburn  522      86      18 -0.1768163     C</code></pre>
</div>
</div>
<p>quantile函数求分位数，这里求Score数值型向量的20%、40%、60%和80%分位点。</p>
<p>接下来，我们使用strsplit函数以空格把学生姓名拆分为姓氏和名字：</p>
<div class="cell">
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/strsplit.html">strsplit</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">studentname</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">name</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] "John"  "Davis"

[[2]]
[1] "Angela"   "Williams"

[[3]]
[1] "Bullwinkle" "Moose"     

[[4]]
[1] "David" "Jones"

[[5]]
[1] "Janice"     "Markhammer"

[[6]]
[1] "Cheryl"  "Cushing"

[[7]]
[1] "Reuven"  "Ytzrhak"

[[8]]
[1] "Greg" "Knox"

[[9]]
[1] "Joel"    "England"

[[10]]
[1] "Mary"    "Rayburn"</code></pre>
</div>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">lastname</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/lapply.html">sapply</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">name</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"["</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">firstname</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/lapply.html">sapply</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">name</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"["</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/cbind.html">cbind</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">firstname</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">lastname</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata3</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>    firstname   lastname math science English      Score grade
1        John      Davis  502      95      25  0.5592028     B
2      Angela   Williams  600      99      22  0.9238259     A
3  Bullwinkle      Moose  412      80      18 -0.8565414     D
4       David      Jones  358      82      15 -1.1620473     E
5      Janice Markhammer  495      75      20 -0.6289776     D
6      Cheryl    Cushing  512      85      28  0.3532485     C
7      Reuven    Ytzrhak  410      80      15 -1.0476242     E
8        Greg       Knox  625      95      30  1.3378934     A
9        Joel    England  573      89      27  0.6978361     B
10       Mary    Rayburn  522      86      18 -0.1768163     C</code></pre>
</div>
</div>
<p>strsplit函数应用到一个字符串向量上会返回一个列表，使用sapply函数分别提取列表中每个成分的第一个元素和第二个元素，<code>[</code>是一个可以提取某个对象的一部分的函数，再使用cbind函数将它们添加到学生成绩的原始数据中。</p>
<p>最后，我们使用order函数依姓氏和名字对数据集进行排序，完成这个数据任务。</p>
<div class="cell">
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/order.html">order</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">lastname</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">firstname</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scoredata4</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>    firstname   lastname math science English      Score grade
6      Cheryl    Cushing  512      85      28  0.3532485     C
1        John      Davis  502      95      25  0.5592028     B
9        Joel    England  573      89      27  0.6978361     B
4       David      Jones  358      82      15 -1.1620473     E
8        Greg       Knox  625      95      30  1.3378934     A
5      Janice Markhammer  495      75      20 -0.6289776     D
3  Bullwinkle      Moose  412      80      18 -0.8565414     D
10       Mary    Rayburn  522      86      18 -0.1768163     C
2      Angela   Williams  600      99      22  0.9238259     A
7      Reuven    Ytzrhak  410      80      15 -1.0476242     E</code></pre>
</div>
</div>


<!-- -->

</section> ]]></description>
  <category>r</category>
  <guid>https://leslie-lu.github.io/blog/2020/02/06/</guid>
  <pubDate>Thu, 06 Feb 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408231513804.webp" medium="image" type="image/webp"/>
</item>
</channel>
</rss>
