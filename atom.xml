<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Zhen Lu&#39;s blog</title>
<link>https://leslie-lu.github.io/atom.html</link>
<atom:link href="https://leslie-lu.github.io/atom.xml" rel="self" type="application/rss+xml"/>
<description>Zhen Lu&#39;s blog</description>
<language>en</language>
<generator>quarto-1.5.56</generator>
<lastBuildDate>Tue, 20 Aug 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>大图嵌小图</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/08/20/nested_layout/</link>
  <description><![CDATA[ 





<section id="由来" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="由来">由来</h3>
<p>星球里不断有同学问到如何在一个大图中嵌入小图，这里简单介绍一下。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408200018820.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">Q1</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408200019279.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">Q2</figcaption>
</figure>
</div>
<p>我们使用生存曲线及risk table作为例子，其中生存曲线是大图，risk table是小图。常见的图形为：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408200042969.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">survival curve</figcaption>
</figure>
</div>
<p>想要把risk table嵌入到生存曲线中。</p>
</section>
<section id="方法一" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="方法一">方法一</h3>
<p>使用grid包，借助于grid包中的viewport函数。viewport用于定义一个绘图区域，可以在一个图形设备中创建多个独立的绘图区域，每个区域都有自己的坐标系和尺寸。</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># not run</span></span>
<span id="cb1-2">subvp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">viewport</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.35</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.35</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>)</span>
<span id="cb1-3">ggsurv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plot</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(ggsurv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>table, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vp =</span> subvp)</span></code></pre></div>
</div>
<p>viewport创建了一个子视口，它定义了一个相对主视口的区域。效果如下：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408200034399.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">option 1</figcaption>
</figure>
</div>
</section>
<section id="方法二" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="方法二">方法二</h3>
<p>使用annotation_custom函数，它可以在图形中添加自定义的图形元素。</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># not run</span></span>
<span id="cb2-2">ggsurv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotation_custom</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplotGrob</span>(ggsurv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>table), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1900</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</div>
<p>ggplotGrob将ggsurv$table转换为grob对象，以便在图形中使用。效果如下：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408200037108.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">option 2</figcaption>
</figure>
</div>
</section>
<section id="方法三" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="方法三">方法三</h3>
<p>使用ggpp包。</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># not run</span></span>
<span id="cb3-2">sub_plot<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb3-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">98</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">98</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(ggsurv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>table)</span>
<span id="cb3-4">)</span>
<span id="cb3-5">ggsurv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_plot_npc</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sub_plot, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">npcx =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">npcy =</span> y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> plot))</span></code></pre></div>
</div>
<p>使用geom_plot_npc函数将子图添加到主图中，label表示要添加的子图。效果如下：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408200040329.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">option 3</figcaption>
</figure>
</div>
<p>完整代码已经放在了<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>里，感兴趣的同学可以自行查看。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>

 ]]></description>
  <category>r</category>
  <category>ggplot2</category>
  <guid>https://leslie-lu.github.io/blog/2024/08/20/nested_layout/</guid>
  <pubDate>Tue, 20 Aug 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408200034399.png" medium="image" type="image/png"/>
</item>
<item>
  <title>欢迎加入预测模型星球</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/08/14/clinical_prediction_model/</link>
  <description><![CDATA[ 





<section id="由来" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="由来">由来</h3>
<p>前面我们给大家推荐了这本几位非常厉害的教授老师主编的<a href="https://mp.weixin.qq.com/s/QQDM3aqyjaOSXXlZznJRDg">《临床预测模型方法与应用》</a>，陆陆续续地，在各个平台上，大家都反馈已经收到了这本书，并且这本书还很大很厚，涵盖了方法学、操作、专题以及案例。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408141829108.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">feedback</figcaption>
</figure>
</div>
<p>那这时候，就有同学和我说，按照以往看书的习惯，收到书的前一俩周，还是可以翻翻，但是后面就会慢慢地放在那里，然后就不了了之了。</p>
<p>所以，我们就想，能不能有一个平台，让大家一起学习这本书，一起讨论、交流，一起进步呢？</p>
</section>
<section id="预测模型星球" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="预测模型星球">预测模型星球</h3>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408141822826.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">知识星球</figcaption>
</figure>
</div>
<p>向大家完整介绍下这个星球，也鼓励更多想要讨论交流的小伙伴进入到我的星球里面，大家一起愉快地学习。</p>
<ol type="1">
<li>首先，你要有实体书，不然我们每周讨论学习某一个章节的时候，你可能会有点懵。</li>
</ol>
<p>购买的二维码链接在<a href="https://mp.weixin.qq.com/s/QQDM3aqyjaOSXXlZznJRDg">这里</a>。</p>
<ol start="2" type="1">
<li>知识星球的目的是和大家一起营造一个国内高质量的预测模型类研究的知识圈，让星球里的人能够受益。</li>
</ol>
<p>来到这里你会遇到一群志同道合的人，一起学习、相互交流、共同促进。这个交流圈高度专注于预测类研究领域。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408141840460.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">content</figcaption>
</figure>
</div>
<ol start="3" type="1">
<li><p>我们会每周一起学习讨论这本书的一个章节，每周一次，每次一个小时或一个章节，讨论的内容会包括这一章的重点内容、难点、案例分析等。</p></li>
<li><p>除了这本书，如果未来人数足够，我们还会不定期地邀请一些同样从事预测类研究的博士生、学者，来和大家分享他们的研究成果、经验、心得等。</p></li>
</ol>
<p>后续我们会根据星球中同学们的需求，不定时地开展更多主题的workshop，具体时间请关注我们的公众号和<a href="https://t.zsxq.com/5ecjA">星球</a>，我们会在这两个平台上发布最新的信息。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>

 ]]></description>
  <category>workshop</category>
  <category>prediction model</category>
  <guid>https://leslie-lu.github.io/blog/2024/08/14/clinical_prediction_model/</guid>
  <pubDate>Wed, 14 Aug 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408141822826.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>星球第二期workshop上线</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/08/11/workshop_002/</link>
  <description><![CDATA[ 





<p>我们<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>正式上线第二期workshop啦！</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408111605260.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">workshop</figcaption>
</figure>
</div>
<p>本期workshop主题是“Sample Size Calculations in Clinical Research”。本期workshop将从临床研究中不同试验设计的角度出发，介绍如何基于不同设计类型（平行设计、交叉设计、析因设计、成组序贯设计等）、比较类型（非劣效、等效、优效试验）、主要终点指标等因素进行样本量计算。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408111619582.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">screenshot</figcaption>
</figure>
</div>
<p>目前暂定的安排是每周一节一小时，直到本期workshop的全部内容结束。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408111620421.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">used files</figcaption>
</figure>
</div>
<p>后续我们会根据星球中同学们的需求，不定时地开展更多主题的workshop，具体时间请关注我们的公众号和<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>，我们会在这两个平台上发布最新的信息。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>

 ]]></description>
  <category>workshop</category>
  <category>sample size</category>
  <category>clinical research</category>
  <guid>https://leslie-lu.github.io/blog/2024/08/11/workshop_002/</guid>
  <pubDate>Sun, 11 Aug 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408111605260.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>星球第一期workshop上线</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/08/04/workshop_001/</link>
  <description><![CDATA[ 





<p>我们<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>正式上线第一期workshop啦！</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408041637573.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">workshop</figcaption>
</figure>
</div>
<p>本期workshop主题是“Statistical Methods for Analysis with Missing Data”。本期workshop将从缺失数据的概念、缺失数据的类型、缺失数据的机制、缺失数据的影响、缺失数据的处理方法等方面展开讲解，帮助大家更好地理解缺失数据的问题，掌握缺失数据的处理方法。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408041641868.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">screenshot</figcaption>
</figure>
</div>
<p>目前暂定的安排是每周一节一小时，直到本期workshop的全部内容结束。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408041644463.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">used files</figcaption>
</figure>
</div>
<p>后续我们会根据星球中同学们的需求，不定时地开展更多主题的workshop，具体时间请关注我们的公众号和<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>，我们会在这两个平台上发布最新的信息。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>

 ]]></description>
  <category>workshop</category>
  <category>missing data</category>
  <category>statistical methods</category>
  <guid>https://leslie-lu.github.io/blog/2024/08/04/workshop_001/</guid>
  <pubDate>Sun, 04 Aug 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408041637573.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>倾向性评分加权</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/08/03/propensity_score_weighting/</link>
  <description><![CDATA[ 





<section id="背景介绍" class="level3">
<h3 class="anchored" data-anchor-id="背景介绍">背景介绍</h3>
<p>对于非RCT类的观察性研究，由于分组的非随机性，导致了研究偏倚的存在，致使观察到的效应很多时候往往并不可用。为了解决这个问题，研究者们提出了倾向性评分的方法，通过倾向性评分的计算，可以使得试验组和对照组之间的分布更加接近，从而减少了研究偏倚的影响。</p>
<p>我们公众号以往有过五篇类似的介绍内容，分别是：</p>
<ol type="1">
<li><a href="https://mp.weixin.qq.com/s/S5nd__7fflKBekeOKCJQEQ">倾向性评分分析</a></li>
<li><a href="https://mp.weixin.qq.com/s/HuyE_79VJMY1e0VoRgcLbA">倾向性评分分析的统计学考虑</a></li>
<li><a href="https://mp.weixin.qq.com/s/j8olCbIDN06UCHgWirzq3g">倾向性评分匹配的生存分析怎么做</a></li>
<li><a href="https://mp.weixin.qq.com/s/hMXiND44bFGD57c7t7wGaw">倾向性评分overlapping weighting的SAS实现（一）</a></li>
<li><a href="https://mp.weixin.qq.com/s/fxqrH0Im2y_oqfg3K63Epw">生存资料倾向性评分OW的SAS实现（二）</a></li>
</ol>
<p>其中，后面两篇文章提到了倾向性评分加权中的overlapping weighting方法，这篇文章将对倾向性评分加权的方法进行详细介绍。</p>
</section>
<section id="因果效应" class="level3">
<h3 class="anchored" data-anchor-id="因果效应">因果效应</h3>
<p>首先，我们来看下几种因果效应。</p>
<p>ATE即平均处理效应（average treatment effect），是指在试验组和对照组之间的处理效应的差异。理想情况下，随机对照试验估计出来的效应即ATE，但是在实际研究中，由于种种原因，我们往往无法进行随机对照试验。由于ATE的估计人群是试验组和对照组的总体，ATE假设两组受试者是有相同的概率/机会接受某一种处理的，然而，实际研究中，研究者往往更加关注的是ATE的局部估计，即在某一特定的人群中（一般是接受治疗的试验组），处理的效应是多少，而这个效应即为ATT（average treatment effect on the treated）。由于ATT只需要对处理组人群估计因果处理效应，对于RCT而言，潜在的治疗效果和治疗组分配是相互独立的，因此，ATT即为ATE；然而，对于非RCT类研究而言，二者是不同的。</p>
<p>我们还可以计算ATC（average treatment effect on the control），即对于未接受治疗的人群，如果接受治疗，其效应是多少。此外，还有ATM（average treatment effect among the evenly matchable），即在对照组中，找到与试验组相匹配的人群，计算在这个匹配的总体人群中的治疗效应；ATO（average treatment effect among the overlap population），即在试验组和对照组的重叠人群中，计算治疗效应。相比于ATM，ATO有着更好的方差属性，由于其不像ATM那样匹配要求，转而是选择两组重叠的中间人群，因此，ATO的估计更加稳健。</p>
</section>
<section id="倾向性评分加权" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="倾向性评分加权">倾向性评分加权</h3>
<p>针对以上五种因果效应，我们可以通过倾向性评分加权的方法来进行相应的估计。这里直接给出五种权重的计算公式：</p>
<ol type="1">
<li>ATE：<img src="https://latex.codecogs.com/png.latex?w_%7BATE%7D%20=%20%5Cfrac%7BZ_i%7D%7Be_i%7D%20+%20%5Cfrac%7B1%20-%20Z_i%7D%7B1%20-%20e_i%7D"></li>
<li>ATT：<img src="https://latex.codecogs.com/png.latex?w_%7BATT%7D%20=%20%5Cfrac%7Be_iZ_i%7D%7Be_i%7D%20+%20%5Cfrac%7Be_i(1-Z_i)%7D%7B1-e_i%7D"></li>
<li>ATC：<img src="https://latex.codecogs.com/png.latex?w_%7BATC%7D%20=%20%5Cfrac%7B(1-e_i)Z_i%7D%7Be_i%7D%20+%20%5Cfrac%7B(1-e_i)%20(1-Z_i)%7D%7B1%20-%20e_i%7D"></li>
<li>ATM：<img src="https://latex.codecogs.com/png.latex?w_%7BATC%7D%20=%20%5Cfrac%7B(1-e_i)Z_i%7D%7Be_i%7D%20+%20%5Cfrac%7B(1-e_i)%20(1-Z_i)%7D%7B1%20-%20e_i%7D"></li>
<li>ATO：<img src="https://latex.codecogs.com/png.latex?w_%7BAT0%7D%20=%20(1-e_i)Z_i%20+%20e_i(1-Z_i)"></li>
</ol>
<p>以上五种加权的示例以及具体实现的全部代码，我们已经放在了<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>里，感兴趣的同学可以自行查看。</p>
<p>这里我们展示下加权后人群的分布情况。</p>
<section id="原始人群的ps分布" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="原始人群的ps分布">原始人群的ps分布</h4>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408031942417.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">ps of original population</figcaption>
</figure>
</div>
</section>
<section id="ate" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="ate">ATE</h4>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408031944764.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">ATE</figcaption>
</figure>
</div>
</section>
<section id="att" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="att">ATT</h4>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408031945648.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">ATT</figcaption>
</figure>
</div>
</section>
<section id="atc" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="atc">ATC</h4>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408031946706.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">ATC</figcaption>
</figure>
</div>
</section>
<section id="atm" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="atm">ATM</h4>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408031946718.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">ATM</figcaption>
</figure>
</div>
</section>
<section id="ato" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="ato">ATO</h4>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408031947889.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">ATO</figcaption>
</figure>
</div>
</section>
</section>
<section id="总结" class="level3">
<h3 class="anchored" data-anchor-id="总结">总结</h3>
<p>相信通过以上可视化的展示，大家会更容易理解倾向性评分加权的方法对目标人群的选择以及治疗效应的解释。借助于合适的效应加权，我们可以估计出治疗效应并对于以上五种治疗效应的估计值。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>

 ]]></description>
  <category>propensity score</category>
  <category>weighting</category>
  <guid>https://leslie-lu.github.io/blog/2024/08/03/propensity_score_weighting/</guid>
  <pubDate>Sat, 03 Aug 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408031947889.png" medium="image" type="image/png"/>
</item>
<item>
  <title>预测模型领域新书推荐</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/07/19/new_book/</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>首先，今天这篇不是软文哦。</p>
</blockquote>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://img01.yzcdn.cn/upload_files/2024/07/19/FlaDOPwuw67QXR1EG_dIwX858yNM.jpg!large.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">临床预测模型方法与应用</figcaption>
</figure>
</div>
<p>非常高兴向大家推荐和我们课题组一直保持良好合作的荷兰 Utrecht University <a href="https://www.uu.nl/staff/JWang6">王俊峰教授</a>参与主编的新书《<a href="https://shop19174385.m.youzan.com/wscgoods/detail/3f2t7uivrox5lr1?scan=1&amp;activity=none&amp;from=kdt&amp;qr=directgoods_4268678081&amp;shopAutoEnter=1&amp;is_share=1&amp;from_uuid=4760198145&amp;goodsImg=https%3A%2F%2Fimg01.yzcdn.cn%2Fupload_files%2F2024%2F07%2F19%2FFlaDOPwuw67QXR1EG_dIwX858yNM.jpg&amp;sf=wx_sm&amp;share_cmpt=native_wechat">临床预测模型方法与应用</a>》。</p>
<p>王老师是临床预测模型领域内的专家，大家感兴趣的可以去看王老师的<a href="https://scholar.google.com/citations?hl=en&amp;user=00iVjcAAAAAJ">google scolar</a>。在和王老师合作做项目的过程中，我也是收获很多，扫除了一些知识上的盲点和疑区。因而，对于关注我的同学们而言，如果有对临床预测模型感兴趣的，我也是非常推荐这本书。</p>
<p>这本书由南京医科大学公共卫生学院的陈峰教授作序，主编人员都是在预测模型、生物统计领域内有着丰富经验和深刻见解的科研人员，王老师在我们合作的项目文章里也给与了我悉心的指导，北京天坛医院<a href="https://scholar.google.com/citations?user=lRMQ1TQAAAAJ&amp;hl=en">谷鸿秋教授</a>也是刚刚作为一作发表了<a href="https://www.nejm.org/doi/full/10.1056/NEJMoa2400314">NEJM</a>，这本书可以说是大咖云集了。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://img01.yzcdn.cn/upload_files/2024/07/19/FhenV4zyYep1OLarEbPTNGwBTxQE.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">序言</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://img01.yzcdn.cn/upload_files/2024/07/19/FgbP3FuafNrK00Art1Rl0ocpCIZ7.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">序言</figcaption>
</figure>
</div>
<p>相信很多做科研的同学，一直想找一本这个方向领域的权威且全面的中文书，这本书应该是一个不错的选择。如果是对预测模型感兴趣的小伙伴可以直接下单预定啦，也可以关注下8月份王老师在北大、复旦的讲座。这本书8月份会正式上市，目前可以扫码下图进行预定。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202407191947983.jpg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">预定</figcaption>
</figure>
</div>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>

 ]]></description>
  <category>prediction model</category>
  <category>book</category>
  <guid>https://leslie-lu.github.io/blog/2024/07/19/new_book/</guid>
  <pubDate>Fri, 19 Jul 2024 00:00:00 GMT</pubDate>
  <media:content url="https://img01.yzcdn.cn/upload_files/2024/07/19/FlaDOPwuw67QXR1EG_dIwX858yNM.jpg!large.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>2023年最新JCR影响因子发布</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/06/23/JCR_2023/</link>
  <description><![CDATA[ 





<section id="年最新jcr影响因子" class="level3">
<h3 class="anchored" data-anchor-id="年最新jcr影响因子">2023年最新JCR影响因子</h3>
<p>最新的影响因子前几天已经发布了，和去年一样，大家在公众号后台回复”<strong>JCR2023</strong>”，即可拿到最全的总结excel表格，包括2023年的最新影响因子，以及各个学科的排名，希望对大家有所帮助。</p>
</section>
<section id="关注的一些期刊" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="关注的一些期刊">关注的一些期刊</h3>
<p>几乎全部的期刊影响因子都回落到了几年前的水平。</p>
<p>四大神刊中JAMA几近腰斩，柳叶刀系列的多个子刊也是如此。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202406231742280.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">柳叶刀系列</figcaption>
</figure>
</div>
<p>医工交叉领域也是普遍下滑。medical informatics数字医疗部分，lancet digital health和npj Digital Medicine分别是23.8和12.4分。</p>
<p>以往动辄二三十分的盛况不再。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>

 ]]></description>
  <category>sci</category>
  <category>jcr</category>
  <guid>https://leslie-lu.github.io/blog/2024/06/23/JCR_2023/</guid>
  <pubDate>Sun, 23 Jun 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202406231731181.png" medium="image" type="image/png"/>
</item>
<item>
  <title>常用损失函数</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/06/07/loss_function/</link>
  <description><![CDATA[ 





<section id="loss-function" class="level3">
<h3 class="anchored" data-anchor-id="loss-function">loss function</h3>
<p>在机器学习/深度学习任务中，衡量模型预测值与真实值之间的差异的指标称为损失函数。损失函数是模型训练的关键组成部分，它可以帮助我们优化模型参数，使得模型的预测值更加接近真实值。预测任务的目标也是最小化损失函数，如，我们利用反向传播算法等方法，通过更新损失函数相对于模型参数的梯度来最小化损失函数，提高模型的预测能力。此外，有效的损失函数还可以帮助我们平衡模型的偏差和方差，提高模型的泛化能力。</p>
<p>依据预测任务的不同，损失函数可以分为回归任务和分类任务两大类。回归任务的损失函数通常是均方误差（MSE）或平均绝对误差（MAE），而分类任务的损失函数则有交叉熵损失函数、Hinge损失函数等。本文将介绍常用的损失函数及其应用场景。</p>
<section id="均方误差mse" class="level4">
<h4 class="anchored" data-anchor-id="均方误差mse">均方误差（MSE）</h4>
<p>均方误差（Mean Squared Error，MSE）是回归任务中最常用的损失函数之一，它衡量模型预测值与真实值之间的差异。MSE的计算公式如下：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AMSE%20=%20%5Cfrac%7B1%7D%7Bn%7D%20%5Csum_%7Bi=1%7D%5E%7Bn%7D%20(y_i%20-%20%5Chat%7By%7D_i)%5E2%0A"></p>
<p>可以看到，MSE是预测值与真实值之间差值的平方和的均值，它对较大差异分配更高的惩罚。MSE非负，越小，说明模型的预测值与真实值之间的差异越小，模型的预测能力越好。MSE对异常值敏感，因为它是差值的平方和，异常值的平方会放大差异，导致模型的预测能力下降。</p>
<p>其在pytorch中的实现：</p>
<div id="mse" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">torch.nn.MSELoss(reduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>)</span></code></pre></div>
</div>
</section>
<section id="平均绝对误差mae" class="level4">
<h4 class="anchored" data-anchor-id="平均绝对误差mae">平均绝对误差（MAE）</h4>
<p>平均绝对误差（Mean Absolute Error，MAE）是回归任务中另一种常用的损失函数。MAE的计算公式如下：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AMAE%20=%20%5Cfrac%7B1%7D%7Bn%7D%20%5Csum_%7Bi=1%7D%5E%7Bn%7D%20%7Cy_i%20-%20%5Chat%7By%7D_i%7C%0A"></p>
<p>相比于MSE，MAE是预测值与真实值之间差值的绝对值的均值，它对异常值不敏感，因为它是差值的绝对值的和，不会对某一异常值的差异分配过高的权重。MAE的值越小，说明模型的预测值与真实值之间的差异越小，模型的预测能力越好。</p>
<p>针对MAE和MSE的优缺点，我们可以根据具体的任务需求选择合适的损失函数。如果任务需要重点关注异常值，可以选择MSE，否则选择MAE。</p>
<div id="mae" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">torch.nn.L1Loss(reduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>)</span></code></pre></div>
</div>
</section>
<section id="huber-loss" class="level4">
<h4 class="anchored" data-anchor-id="huber-loss">Huber loss</h4>
<p>Huber loss是一种结合了MSE和MAE的损失函数，它在差值较小的情况下使用MSE，差值较大的情况下使用MAE。Huber loss的计算公式如下：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AL_%7B%5Cdelta%7D(y,%20%5Chat%7By%7D)%20=%20%5Cleft%5C%7B%0A%5Cbegin%7Barray%7D%7Bll%7D%0A%5Cfrac%7B1%7D%7B2%7D(y%20-%20%5Chat%7By%7D)%5E2,%20&amp;%20%5Ctext%7Bif%20%7D%20%7Cy%20-%20%5Chat%7By%7D%7C%20%5Cleq%20%5Cdelta%20%5C%5C%0A%5Cdelta%20%7Cy%20-%20%5Chat%7By%7D%7C%20-%20%5Cfrac%7B1%7D%7B2%7D%20%5Cdelta%5E2,%20&amp;%20%5Ctext%7Botherwise%7D%0A%5Cend%7Barray%7D%0A%5Cright.%0A"></p>
<p>其中，<img src="https://latex.codecogs.com/png.latex?%5Cdelta">是一个超参数，用于控制MSE和MAE之间的平衡。Huber loss对异常值不敏感，同时保留了MSE的平滑性，是一种较为稳健的损失函数。</p>
<div id="smoothl1loss" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">torch.nn.SmoothL1Loss(reduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>)</span></code></pre></div>
</div>
</section>
<section id="二元交叉熵损失函数binary-cross-entropy-loss" class="level4">
<h4 class="anchored" data-anchor-id="二元交叉熵损失函数binary-cross-entropy-loss">二元交叉熵损失函数（Binary Cross Entropy Loss）</h4>
<p>交叉熵损失函数（Cross Entropy Loss）是二分类任务中最常用的损失函数之一，我们前面也以及<a href="https://mp.weixin.qq.com/s/y2gZKXebDv3tKha7Hu5Djw">介绍过</a>。交叉熵损失函数的计算公式如下：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AL(y,%20%5Chat%7By%7D)%20=%20-%5Cfrac%7B1%7D%7Bn%7D%20%5Csum_%7Bi=1%7D%5E%7Bn%7D%20y_i%20%5Clog(%5Chat%7By%7D_i)%20+%20(1%20-%20y_i)%20%5Clog(1%20-%20%5Chat%7By%7D_i)%0A"></p>
<p>其中，<img src="https://latex.codecogs.com/png.latex?y_i">是真实标签，<img src="https://latex.codecogs.com/png.latex?%5Chat%7By%7D_i">是模型预测的概率值。交叉熵损失函数对于模型预测的概率值和真实标签之间的差异进行了惩罚，使得模型更加关注预测正确的类别。交叉熵损失函数是一种凸函数，可以通过梯度下降等方法进行优化。</p>
<div id="bce" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">torch.nn.BCELoss(weight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, reduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>)</span></code></pre></div>
</div>
</section>
<section id="多类交叉熵损失函数categorical-cross-entropy-loss" class="level4">
<h4 class="anchored" data-anchor-id="多类交叉熵损失函数categorical-cross-entropy-loss">多类交叉熵损失函数（Categorical Cross Entropy Loss）</h4>
<p>多类交叉熵损失函数是多分类任务中常用的损失函数之一，它是交叉熵损失函数的扩展。多类交叉熵损失函数的计算公式如下：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AL(y,%20%5Chat%7By%7D)%20=%20-%5Cfrac%7B1%7D%7Bn%7D%20%5Csum_%7Bi=1%7D%5E%7Bn%7D%20%5Csum_%7Bj=1%7D%5E%7Bm%7D%20y_%7Bij%7D%20%5Clog(%5Chat%7By%7D_%7Bij%7D)%0A"></p>
<p>其中，<img src="https://latex.codecogs.com/png.latex?y_%7Bij%7D">是真实标签，<img src="https://latex.codecogs.com/png.latex?%5Chat%7By%7D_%7Bij%7D">是模型预测的概率值。</p>
<div id="ce" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">torch.nn.CrossEntropyLoss(weight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,ignore_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, reduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>)</span></code></pre></div>
</div>
</section>
<section id="hinge损失函数" class="level4">
<h4 class="anchored" data-anchor-id="hinge损失函数">Hinge损失函数</h4>
<p>Hinge损失函数是支持向量机（SVM）中常用的损失函数之一，它适用于二分类任务。Hinge损失函数的计算公式如下：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AL(y,%20%5Chat%7By%7D)%20=%20%5Cmax(0,%201%20-%20y%20%5Ccdot%20%5Chat%7By%7D)%0A"></p>
<p>Hinge损失函数旨在最大化决策边界的间隔，即使得正确分类的样本距离决策边界的距离尽可能大。Hinge损失函数对于误分类的样本进行了惩罚，使得模型更加关注分类边界附近的样本，从而尽可能把数据点推向远离决策边界的方向。</p>
<p>代码已经放进了<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>里。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>
</section>

 ]]></description>
  <category>python</category>
  <category>machine learning</category>
  <category>deep learning</category>
  <category>loss function</category>
  <guid>https://leslie-lu.github.io/blog/2024/06/07/loss_function/</guid>
  <pubDate>Fri, 07 Jun 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202406072019199.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Python中机器学习模型的校准</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/05/17/calibration/</link>
  <description><![CDATA[ 





<section id="calibration" class="level3">
<h3 class="anchored" data-anchor-id="calibration">calibration</h3>
<p>在我们利用机器学习模型来建模分类预测时，首要关注的指标能力当然是dircrimination，即模型的预测区分能力。常见的指标有sensitivity、specificity、AUROC等。我们在上一篇<a href="https://mp.weixin.qq.com/s/wolSW-kdUU8IC293KR9gKg">文章</a>中介绍了如何选择最优分类阈值，这里我们接着介绍在选择了最优阈值后，如何评估模型的<a href="https://mp.weixin.qq.com/s/OdSDu3XXXTbTz_-lYirs5w">校准能力</a>。</p>
<p>所谓校准能力，即模型预测的概率与实际发生的概率<strong>一致</strong>。</p>
<p>通俗来解释这个事情：比如说，我们模型预测某个病人患病的概率是0.8，那么，按照概率定义理解，模型预测概率为0.8时，100个人中应该有80个人最终患病，这个结果体现了模型的校准能力和稳定性。如果模型预测概率为0.8时，实际只有20个人患病，那么，模型的校准能力就不够好，你也不会信任这个模型在实际应用中的预测结果。这就是校准能力的重要性，即你的模型最终输出的概率值要准确反映出事件实际发生的概率。</p>
</section>
<section id="如何评价calibration" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="如何评价calibration">如何评价calibration</h3>
<section id="calibration-plot" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="calibration-plot">calibration plot</h4>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202405171632445.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">calibration curve</figcaption>
</figure>
</div>
<p>上图是一个典型的calibration curve，也是我们在文章中常见的图。</p>
<p>我们将模型预测概率cut或者quantile成5或者10个区间（bin），每个区间预测概率的均值作为x轴，每个区间实际发生的概率作为y轴，然后画出来这个曲线。这个图是评价模型校准能力的一个直观指标。python中可以轻松实现这个工作：</p>
<div id="calibration--plot" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.calibration <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> calibration_curve</span>
<span id="cb1-2">y_means, pred_means <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> calibration_curve(y_true, y_pred, n_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,strategy)</span></code></pre></div>
</div>
<p>理想情况下，所有点都在对角线上，即模型预测的概率与实际发生的概率完全一致。如果点在对角线上方，说明模型低估，反之，高估。</p>
<p>calibration level的定义有：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202405171653641.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">calibration level<span class="citation" data-cites="RN410">(Alonzo 2009)</span></figcaption>
</figure>
</div>
</section>
<section id="其他指标" class="level4">
<h4 class="anchored" data-anchor-id="其他指标">其他指标</h4>
<p>除了calibration plot，我们还可以用其他指标来评价模型的校准能力，比如说Brier score、Hosmer-Lemeshow test、calibration in the large等。这里不做详细介绍。</p>
<p>我们感兴趣的是，当我们通过上述方法评价了模型的校准能力后，如果发现模型的校准能力不够好，我们应该怎么办？</p>
</section>
</section>
<section id="calibrate-model" class="level3">
<h3 class="anchored" data-anchor-id="calibrate-model">calibrate model</h3>
<p>我们已经发现，模型输出值并不能代表概率。python中一般有<strong>predict_proba</strong>方法，即这个方法其实并不能保证输出的概率是真实的概率。</p>
<div id="predict_proba" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.ensemble <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> RandomForestClassifier</span>
<span id="cb2-2">model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RandomForestClassifier().fit(X_train, y_train)</span>
<span id="cb2-3">y_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict_proba(X_test)[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</div>
<p>所以，我们需要对模型进行校准。</p>
<section id="platt-scaling" class="level4">
<h4 class="anchored" data-anchor-id="platt-scaling">Platt scaling</h4>
<p>Platt scaling是一种常见的校准方法，其原理是对模型输出的概率以及真实标签，用一个logistic regression模型来拟合，从而实现对模型输出的概率进行校准，拿到最终的概率。</p>
<div id="platt-scaling" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.calibration <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> CalibratedClassifierCV</span>
<span id="cb3-2">calibrated <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CalibratedClassifierCV(model, method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sigmoid'</span>, cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb3-3">calibrated.fit(X_train, y_train)</span></code></pre></div>
</div>
</section>
<section id="isotonic-regression" class="level4">
<h4 class="anchored" data-anchor-id="isotonic-regression">Isotonic regression</h4>
<p>Isotonic regression是另一种校准方法，其原理是对模型输出的概率以及真实标签，用一个isotonic regression模型来拟合，从而实现对模型输出的概率进行校准。</p>
<div id="isotonic-regression" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.isotonic <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> IsotonicRegression</span>
<span id="cb4-2">ir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsotonicRegression().fit(y_pred, y_test)</span></code></pre></div>
</div>
</section>
<section id="bayesian-binning-into-quantiles" class="level4">
<h4 class="anchored" data-anchor-id="bayesian-binning-into-quantiles">bayesian binning into quantiles</h4>
<p>BBQ是一种基于贝叶斯的校准方法，其原理是将预测概率分成若干个区间，然后在每个区间内对概率进行校准。该方法结合了分箱（binning）和贝叶斯推断的优点，可以在样本量较小时仍然保持较好的校准效果。</p>
<p>还有其他方法可以供尝试。</p>
</section>
</section>
<section id="take-home-message" class="level3">
<h3 class="anchored" data-anchor-id="take-home-message">take home message</h3>
<p>在利用机器学习模型进行分类预测时，我们不可忽视模型的校准能力。</p>
<p>代码已经放进了<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>里。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>
</section>
</section>
<section id="references" class="level3">



<!-- -->


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-RN410" class="csl-entry">
Alonzo, T. A. 2009. <span>“Clinical Prediction Models: A Practical Approach to Development, Validation, and Updating: By Ewout w. Steyerberg.”</span> Generic. Oxford University Press.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{lu2024,
  author = {Lu, Zhen},
  title = {Python中机器学习模型的校准},
  date = {2024-05-17},
  url = {https://leslie-lu.github.io/blog/2024/05/17/calibration/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-lu2024" class="csl-entry quarto-appendix-citeas">
Lu, Zhen. 2024. <span>“Python中机器学习模型的校准.”</span> May 17, 2024.
<a href="https://leslie-lu.github.io/blog/2024/05/17/calibration/">https://leslie-lu.github.io/blog/2024/05/17/calibration/</a>.
</div></div></section></div> ]]></description>
  <category>python</category>
  <category>machine learning</category>
  <category>calibration</category>
  <guid>https://leslie-lu.github.io/blog/2024/05/17/calibration/</guid>
  <pubDate>Fri, 17 May 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202405171632445.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Hierarchical composite endpoints治疗效应的可视化</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/05/13/hierarchical_composite_endpoints/</link>
  <description><![CDATA[ 





<section id="复合终点" class="level3">
<h3 class="anchored" data-anchor-id="复合终点">复合终点</h3>
<p>有时，根据主要研究目的，我们很难从多个终点指标中选出其中某一个作为主要终点，此时，我们可以利用<strong>复合终点</strong>来作为主要终点。</p>
<p>Hierarchical composite endpoints (<a href="https://cran.r-project.org/web/packages/hce/hce.pdf">HCE</a>)可以整合不同类型、不同重要性终点成一个有序终点指标，以表示患者经历的不同严重程度的终点。如，在固定随访的RCT中，outcomes of interest可以是death、hospitalization，而这两个终点存在严重程度的差异。很明显，死亡是最严重的。同样最终死亡的两个患者，生存时间更长，意味治疗效应更好；同样最终住院的两个患者，入院前时间更长，治疗效应更好；同样未住院的两个患者，某一实验室指标的change from baseline更大，效应更好。</p>
<p>对于这种HCE，我们可以计算win odds<span class="citation" data-cites="RN1185">(Gasparyan et al. 2021)</span>来比较组间差异，然而，治疗效应的可视化受到复合终点的影响，不容易像单纯的生存曲线那样用合适的工具可视化出来。</p>
<p>针对这一问题，AstraZeneca的Martin Karpefors等人提出了一种新的方法，即<em>maraca plot<span class="citation" data-cites="RN1187">(Karpefors, Lindholm, and Gasparyan 2023)</span></em>。这种方法可以将复合终点中time to event(TTE)以及连续性终点的治疗效应可视化出来，同时也可以用来比较不同治疗组之间的差异。对应的<a href="https://cran.r-project.org/web/packages/maraca/index.html">R包</a>可以方便地实现这一点。</p>
</section>
<section id="maraca-plot" class="level3">
<h3 class="anchored" data-anchor-id="maraca-plot">maraca plot</h3>
<p>maraca基于ggplot2，其中，对于TTE采用Kaplan-Meier曲线展示cumulative proportions，对于连续性终点可选用箱线图、violin plot以及scatter plot展示连续性分布。这种方法可以同时展示HCE的不同组成成分。</p>
<p>来看一个例子。</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(maraca)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(hce_scenario_a, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"maraca"</span>)</span>
<span id="cb1-3">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> hce_scenario_a</span>
<span id="cb1-4">data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  SUBJID              GROUP GROUPN      AVAL0       AVAL    TRTP
1      1          Outcome I      0 120.440921   120.4409  Active
2      2 Continuous outcome  40000   3.345229 40003.3452 Control
3      3 Continuous outcome  40000  22.802615 40022.8026  Active
4      4          Outcome I      0 577.311386   577.3114 Control
5      5         Outcome II  10000 781.758081 10781.7581  Active
6      6        Outcome III  20000 985.097981 20985.0980 Control</code></pre>
</div>
</div>
<p>具体变量意义，大家可以查看<code>?hce_scenario_a</code>。</p>
<p>可视化如下：</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">column_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outcome =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GROUP"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arm =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRTP"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AVAL0"</span>)</span>
<span id="cb3-2">tte_outcomes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Outcome I"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Outcome II"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Outcome III"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Outcome IV"</span>)</span>
<span id="cb3-3">continuous_outcome <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Continuous outcome"</span></span>
<span id="cb3-4">arm_levels <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">active =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Active"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Control"</span>)</span>
<span id="cb3-5">maraca_object <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">maraca</span>(</span>
<span id="cb3-6">  data, tte_outcomes, continuous_outcome, arm_levels, column_names,</span>
<span id="cb3-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fixed_followup =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">compute_win_odds =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb3-8">)</span>
<span id="cb3-9">AZ_colors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#830051"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#F0AB00"</span>)</span>
<span id="cb3-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(maraca_object, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">density_plot_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"default"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> AZ_colors) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> AZ_colors)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://leslie-lu.github.io/blog/2024/05/13/hierarchical_composite_endpoints/index_files/figure-html/maraca-plot-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="结果解释" class="level3">
<h3 class="anchored" data-anchor-id="结果解释">结果解释</h3>
<p>怎么看这张图？</p>
<p>首先是x轴上HCE的5个组成成分，x轴上每个成分的长度大小，代表了患者达到不同成分终点的比例，可以看到，continuous outcome的比例最大，说明这个终点的患者所占比例最大。其次，cumulative percentage显示active组在四个TTE终点上是存在差异的。再然后是continuous outcome的分布，偏向x轴右侧代表change from baseline更大。而这些结合起来，就是win odds的结果，可以看到，和我们从可视化的角度看到的结果是一致的。</p>
<p>代码已经放进了<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>里。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">



<!-- -->


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">Did you find this page helpful? Consider sharing it 🙌</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-RN1185" class="csl-entry">
Gasparyan, S. B., E. K. Kowalewski, F. Folkvaljon, O. Bengtsson, J. Buenconsejo, J. Adler, and G. G. Koch. 2021. <span>“Power and Sample Size Calculation for the Win Odds Test: Application to an Ordinal Endpoint in COVID-19 Trials.”</span> Journal Article. <em>Journal of Biopharmaceutical Statistics</em> 31 (6): 765–87.
</div>
<div id="ref-RN1187" class="csl-entry">
Karpefors, M., D. Lindholm, and S. B. Gasparyan. 2023. <span>“The Maraca Plot: A Novel Visualization of Hierarchical Composite Endpoints.”</span> Journal Article. <em>Clinical Trials (London, England)</em> 20 (1): 84–88. <a href="https://doi.org/10.1177/17407745221134949">https://doi.org/10.1177/17407745221134949</a>.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{lu2024,
  author = {Lu, Zhen},
  title = {Hierarchical Composite {endpoints治疗效应的可视化}},
  date = {2024-05-13},
  url = {https://leslie-lu.github.io/blog/2024/05/13/hierarchical_composite_endpoints/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-lu2024" class="csl-entry quarto-appendix-citeas">
Lu, Zhen. 2024. <span>“Hierarchical Composite
Endpoints治疗效应的可视化.”</span> May 13, 2024. <a href="https://leslie-lu.github.io/blog/2024/05/13/hierarchical_composite_endpoints/">https://leslie-lu.github.io/blog/2024/05/13/hierarchical_composite_endpoints/</a>.
</div></div></section></div> ]]></description>
  <category>r</category>
  <category>clinical trial</category>
  <category>endpoint</category>
  <guid>https://leslie-lu.github.io/blog/2024/05/13/hierarchical_composite_endpoints/</guid>
  <pubDate>Mon, 13 May 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202405131659328.png" medium="image" type="image/png"/>
</item>
<item>
  <title>最优分类阈值</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2024/05/11/optimal_threshold/</link>
  <description><![CDATA[ 





<p>这里我们借助<em>scikit-learn</em>来探讨分类问题中阈值的选择。</p>
<section id="数据准备和参数选择" class="level3">
<h3 class="anchored" data-anchor-id="数据准备和参数选择">数据准备和参数选择</h3>
<p>首先是数据准备：</p>
<div id="libraries-n-things" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_breast_cancer</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> confusion_matrix</span>
<span id="cb1-8"></span>
<span id="cb1-9">np.set_printoptions(suppress<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, precision<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb1-10">pd.options.mode.chained_assignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb1-11">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.max_columns'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb1-12">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.width'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb1-13"></span>
<span id="cb1-14">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_breast_cancer()</span>
<span id="cb1-15">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>]</span>
<span id="cb1-16">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>]</span>
<span id="cb1-17"></span>
<span id="cb1-18">Xtrain, Xvalid, ytrain, yvalid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X, y, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.20</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">516</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Xtrain.shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>Xtrain<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Xvalid.shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>Xvalid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Xtrain.shape: (455, 30)
Xvalid.shape: (114, 30)</code></pre>
</div>
</div>
<p>模型我们这里选择<em>随机森林</em>。超参的选择，基于<code>GridSearchCV</code>，这里也不赘述。有一个点需要说明，由于使用的是肿瘤数据集，在这种情况下，我们更关注的是<code>recall</code>，即尽量减少假阴性的情况。因而，我们在训练模型时，也是将recall作为评价指标。</p>
<div id="train-model-rf" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.ensemble <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> RandomForestClassifier</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GridSearchCV</span>
<span id="cb3-3"></span>
<span id="cb3-4">param_grid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb3-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n_estimators"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>],</span>
<span id="cb3-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"min_samples_leaf"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>],</span>
<span id="cb3-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ccp_alpha"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.3</span>]</span>
<span id="cb3-8">    }</span>
<span id="cb3-9"></span>
<span id="cb3-10">mdl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GridSearchCV(</span>
<span id="cb3-11">    RandomForestClassifier(random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">516</span>), </span>
<span id="cb3-12">    param_grid, </span>
<span id="cb3-13">    scoring<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"recall"</span>, </span>
<span id="cb3-14">    cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb3-15">    )</span>
<span id="cb3-16"></span>
<span id="cb3-17">mdl.fit(Xtrain, ytrain)</span>
<span id="cb3-18"></span>
<span id="cb3-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"best parameters: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mdl<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>best_params_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>best parameters: {'ccp_alpha': 0, 'min_samples_leaf': 4, 'n_estimators': 100}</code></pre>
</div>
</div>
</section>
<section id="模型预测" class="level3">
<h3 class="anchored" data-anchor-id="模型预测">模型预测</h3>
<p>拿到模型后，自然我们可以开始预测：</p>
<div id="cell-predict" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">ypred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mdl.predict_proba(Xvalid)[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb5-2">ypred</span></code></pre></div>
<div id="predict" class="cell-output cell-output-display" data-execution_count="3">
<pre><code>array([0.005     , 0.82743637, 0.97088095, 0.        , 0.        , 1.        , 0.98020202, 0.67380556, 0.        , 0.99333333, 0.9975    , 0.30048576, 0.9528113 , 0.99666667, 0.04102381, 0.99444444, 1.        , 0.828226  , 0.        , 0.        , 0.97916667, 1.        , 0.99607143, 0.90425163, 0.        , 0.02844156, 0.99333333, 0.98183333, 0.9975    , 0.08869769, 0.97369841, 0.        , 1.        , 0.71100866, 0.96022727, 0.        , 0.71200885, 0.06103175, 0.005     , 0.99490476, 0.1644127 , 0.        , 0.23646934, 1.        , 0.57680164, 0.64901715, 0.9975    , 0.61790818, 0.95509668, 0.99383333, 0.04570455, 0.97575758, 1.        , 0.47115815, 0.92422619, 0.77371415, 0.        , 1.        , 0.26198657, 0.        , 0.28206638, 0.95216162, 0.98761905, 0.99464286, 0.98704762, 0.85579351, 0.10036905, 0.00222222, 0.98011905, 0.99857143, 0.92285967, 0.95180556, 0.97546947, 0.84433189, 0.005     , 0.99833333, 0.83616339, 1.        , 0.9955    , 1.        , 0.99833333, 1.        ,
       0.86399315, 0.9807381 , 0.        , 0.99833333, 0.9975    , 0.        , 0.98733333, 0.96822727, 0.23980827, 0.7914127 , 0.        , 0.98133333, 1.        , 1.        , 0.89251019, 0.9498226 , 0.18943254, 0.83494391, 0.9975    , 1.        , 0.77079113, 0.99722222, 0.30208297, 1.        , 0.92111977, 0.99428571, 0.91936508, 0.47118074, 0.98467172, 0.006     , 0.05750305, 0.96954978])</code></pre>
</div>
</div>
<p>这个时候，我们要讲的东西就来了。一般地，我们会选择0.50作为分类阈值，即大于0.50的为正类，小于0.50的为负类。</p>
<div id="threshold-0.50" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">ypred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mdl.predict_proba(Xvalid)[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-2">yhat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mdl.predict(Xvalid).reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-3">preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.concatenate([ypred, yhat], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(preds)</span>
<span id="cb7-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(confusion_matrix(yvalid, yhat))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[0.005      0.        ]
 [0.82743637 1.        ]
 [0.97088095 1.        ]
 [0.         0.        ]
 [0.         0.        ]
 [1.         1.        ]
 [0.98020202 1.        ]
 [0.67380556 1.        ]
 [0.         0.        ]
 [0.99333333 1.        ]
 [0.9975     1.        ]
 [0.30048576 0.        ]
 [0.9528113  1.        ]
 [0.99666667 1.        ]
 [0.04102381 0.        ]
 [0.99444444 1.        ]
 [1.         1.        ]
 [0.828226   1.        ]
 [0.         0.        ]
 [0.         0.        ]
 [0.97916667 1.        ]
 [1.         1.        ]
 [0.99607143 1.        ]
 [0.90425163 1.        ]
 [0.         0.        ]
 [0.02844156 0.        ]
 [0.99333333 1.        ]
 [0.98183333 1.        ]
 [0.9975     1.        ]
 [0.08869769 0.        ]
 [0.97369841 1.        ]
 [0.         0.        ]
 [1.         1.        ]
 [0.71100866 1.        ]
 [0.96022727 1.        ]
 [0.         0.        ]
 [0.71200885 1.        ]
 [0.06103175 0.        ]
 [0.005      0.        ]
 [0.99490476 1.        ]
 [0.1644127  0.        ]
 [0.         0.        ]
 [0.23646934 0.        ]
 [1.         1.        ]
 [0.57680164 1.        ]
 [0.64901715 1.        ]
 [0.9975     1.        ]
 [0.61790818 1.        ]
 [0.95509668 1.        ]
 [0.99383333 1.        ]
 [0.04570455 0.        ]
 [0.97575758 1.        ]
 [1.         1.        ]
 [0.47115815 0.        ]
 [0.92422619 1.        ]
 [0.77371415 1.        ]
 [0.         0.        ]
 [1.         1.        ]
 [0.26198657 0.        ]
 [0.         0.        ]
 [0.28206638 0.        ]
 [0.95216162 1.        ]
 [0.98761905 1.        ]
 [0.99464286 1.        ]
 [0.98704762 1.        ]
 [0.85579351 1.        ]
 [0.10036905 0.        ]
 [0.00222222 0.        ]
 [0.98011905 1.        ]
 [0.99857143 1.        ]
 [0.92285967 1.        ]
 [0.95180556 1.        ]
 [0.97546947 1.        ]
 [0.84433189 1.        ]
 [0.005      0.        ]
 [0.99833333 1.        ]
 [0.83616339 1.        ]
 [1.         1.        ]
 [0.9955     1.        ]
 [1.         1.        ]
 [0.99833333 1.        ]
 [1.         1.        ]
 [0.86399315 1.        ]
 [0.9807381  1.        ]
 [0.         0.        ]
 [0.99833333 1.        ]
 [0.9975     1.        ]
 [0.         0.        ]
 [0.98733333 1.        ]
 [0.96822727 1.        ]
 [0.23980827 0.        ]
 [0.7914127  1.        ]
 [0.         0.        ]
 [0.98133333 1.        ]
 [1.         1.        ]
 [1.         1.        ]
 [0.89251019 1.        ]
 [0.9498226  1.        ]
 [0.18943254 0.        ]
 [0.83494391 1.        ]
 [0.9975     1.        ]
 [1.         1.        ]
 [0.77079113 1.        ]
 [0.99722222 1.        ]
 [0.30208297 0.        ]
 [1.         1.        ]
 [0.92111977 1.        ]
 [0.99428571 1.        ]
 [0.91936508 1.        ]
 [0.47118074 0.        ]
 [0.98467172 1.        ]
 [0.006      0.        ]
 [0.05750305 0.        ]
 [0.96954978 1.        ]]
[[35  3]
 [ 1 75]]</code></pre>
</div>
</div>
<p>但是，这个阈值是可以调整的。我们可以通过调整阈值来达到不同的目的。比如，我们可以通过调整阈值来减少假阴性的情况，这在类别不平衡时尤为重要。</p>
</section>
<section id="阈值的选择" class="level3">
<h3 class="anchored" data-anchor-id="阈值的选择">阈值的选择</h3>
<p>我们介绍几种常用的方法。</p>
<section id="阳性类别prevalance" class="level4">
<h4 class="anchored" data-anchor-id="阳性类别prevalance">1. 阳性类别prevalance</h4>
<p>我们看下这个数据集中阳性类别的比例：</p>
<div id="positive-prevalance" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Proportion of positives in training set: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>ytrain<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ytrain<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Proportion of positives in training set: 0.62</code></pre>
</div>
</div>
<p>这个toy数据集很夸张哈，达到了0.62。在实际应用中，这个比例可能只有10%或者1%。这里我们只是拿它示例哈，用这个prevalance来作为阈值。</p>
<div id="threshold-prevalance" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ytrain.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ytrain.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb11-2">yhat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.where(ypred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> thresh, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb11-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(confusion_matrix(yvalid, yhat))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[34  4]
 [ 0 76]]</code></pre>
</div>
</div>
<p>考虑prevalance的方法，可以在类别不平衡的情况下，减少假阴性的情况。</p>
</section>
<section id="最优f1指数" class="level4">
<h4 class="anchored" data-anchor-id="最优f1指数">2. 最优F1指数</h4>
<p>F1指数是precision和recall的调和平均数。我们可以通过最大F1指数来选择最优的阈值。</p>
<div id="threshold-f1" class="cell" data-execution_count="7">
<div class="cell-output cell-output-stdout">
<pre><code>Threshold using optimal f1-score: 0.471.</code></pre>
</div>
</div>
<p>F1最高为0.471，我们采用它来进行预测：</p>
<div id="threshold-f1-predict" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.471</span></span>
<span id="cb14-2">yhat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.where(ypred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> thresh, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb14-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(confusion_matrix(yvalid, yhat))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[34  4]
 [ 0 76]]</code></pre>
</div>
</div>
</section>
<section id="roc曲线" class="level4">
<h4 class="anchored" data-anchor-id="roc曲线">3. ROC曲线</h4>
<p>我们可以通过<a href="https://mp.weixin.qq.com/s/Zw85hAdx7VdwCioG5NwHQw">ROC曲线</a>来选择最优的阈值。ROC曲线下的面积AUC越大，说明模型越好。我们可以选择ROC曲线最靠近左上角的点作为最优阈值。</p>
<div id="cell-threshold-roc" class="cell" data-execution_count="9">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://leslie-lu.github.io/blog/2024/05/11/optimal_threshold/index_files/figure-html/threshold-roc-output-1.png" id="threshold-roc" class="quarto-figure quarto-figure-center anchored figure-img" width="445" height="447"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="prc曲线" class="level4">
<h4 class="anchored" data-anchor-id="prc曲线">4. PRC曲线</h4>
<p>PRC曲线是<a href="https://mp.weixin.qq.com/s/Zw85hAdx7VdwCioG5NwHQw">precision-recall曲线</a>。相比于ROC曲线，PRC曲线更适合类别不平衡的情况。我们主要选择PRC曲线最靠近右上角的点作为最优阈值。</p>
<div id="cell-threshold-prc" class="cell" data-execution_count="10">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://leslie-lu.github.io/blog/2024/05/11/optimal_threshold/index_files/figure-html/threshold-prc-output-1.png" id="threshold-prc" class="quarto-figure quarto-figure-center anchored figure-img" width="445" height="447"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Selected threshold using precision-recall curve: 0.674.</code></pre>
</div>
</div>
</section>
<section id="分别关注precision和recall" class="level4">
<h4 class="anchored" data-anchor-id="分别关注precision和recall">5. 分别关注precision和recall</h4>
<p>我们可以通过调整阈值来分别关注precision和recall。比如，我们可以通过调整阈值来提高recall，减少假阴性的情况。</p>
<div id="cell-threshold-pre-recall" class="cell" data-execution_count="11">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://leslie-lu.github.io/blog/2024/05/11/optimal_threshold/index_files/figure-html/threshold-pre-recall-output-1.png" id="threshold-pre-recall" class="quarto-figure quarto-figure-center anchored figure-img" width="614" height="374"></p>
</figure>
</div>
</div>
</div>
<p><br></p>
<p>代码已经放进了<a href="https://mp.weixin.qq.com/s/4IR-KMAZ-q2VbI0Fz4fYRg">星球</a>里。</p>
<p><br></p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{lu2024,
  author = {Lu, Zhen},
  title = {最优分类阈值},
  date = {2024-05-11},
  url = {https://leslie-lu.github.io/blog/2024/05/11/optimal_threshold/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-lu2024" class="csl-entry quarto-appendix-citeas">
Lu, Zhen. 2024. <span>“最优分类阈值.”</span> May 11, 2024. <a href="https://leslie-lu.github.io/blog/2024/05/11/optimal_threshold/">https://leslie-lu.github.io/blog/2024/05/11/optimal_threshold/</a>.
</div></div></section></div> ]]></description>
  <category>python</category>
  <category>machine learning</category>
  <guid>https://leslie-lu.github.io/blog/2024/05/11/optimal_threshold/</guid>
  <pubDate>Sat, 11 May 2024 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202405112020810.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Python正则表达式与模式匹配</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/01/18/</link>
  <description><![CDATA[ 





<p>很多商业分析都依赖模式匹配，也称为正则表达式（regular expression）。举例来说，我们可能需要分析一下来自深圳的所有订单。此时，你需要识别的模式就是“深圳”这个词。同样，你可能需要分析来自某个供应商的商品质量，此时你要识别的模式就是供应商的名字。</p>
<p>Python包含了re模块，它提供了在文本中搜索特定模式/正则表达式的强大功能。要在脚本中使用re模块提供的功能，我们需要在脚本上方加入代码import re。</p>
<p>导入re模块后，可以使用一大波函数和元字符来创建和搜索任意复杂的模式。元字符（metacharacter）是正则表达式中具有特殊意义的字符，使正则表达式能够匹配特定的字符串。</p>
<p>常用的元字符包括 |、()、[]、.、*、+、?、^、$和(?P<name>)。如果你在正则表达式中见到这些字符，要知道程序不是要搜索这些字符本身，而是要搜索它们要描述的东西。</name></p>
<p>re模块包含了很多有用的函数，用于创建和搜索特定的模式。一起来看一个示例代码：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408231421391.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">sample code</figcaption>
</figure>
</div>
<p>第一行赋值字符串变量string，下一行将字符串拆分为列表，列表中的每个元素都是一个单词。使用re.compile和re.I函数以及用r表示的原始字符串，创建一个名为pattern的正则表达式。re.compile函数将文本形式的模式编译成为正则表达式（正则表达式不是必须编译的，但编译是个好习惯，因为这样可以显著地提高程序运行速度），re.I函数确保模式是不区分大小写的，即能同时在字符串中匹配“The”和“the”，原始字符串标志r可确保Python不处理字符串中的转义字符（如、），这样在进行模式匹配是，字符串中的转义字符和正则表达式中的元字符就不会有意外的冲突。利用for循环在列表变量sring_list的各个元素之间进行迭代，取出列表中所有的单词，使用re.search函数将每个单词与正则表达式进行比较，如果相匹配，那么count的值就加1。print语句打印出正则表达式在字符串汇总找到模式“The”（不区分大小写）的次数。</p>
<p>再看另一个示例：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408231422976.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">sample code 2</figcaption>
</figure>
</div>
<p>这个示例想要打印出相匹配的字符串，而不是相匹配的次数，这里使用到了(?P<name>)元字符和group函数。(?P<name>)元字符使匹配的字符串可以在后面的程序中通过组名符号name来引用，这里称为match_word。后面if语句中使用了group函数获取分段截获的字符串，如果相匹配，那么就在search函数返回的数据结构中找出match_word组合中的值，并打印出来。</name></name></p>
<p>最后一个示例：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408231422618.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">sample code 3</figcaption>
</figure>
</div>
<p>我们演示了使用re.sub函数在文本中用一种模式替换另一种模式。将正则表达式赋给变量string_to_find不是必需的，但若正则表达式特别长或复杂的话，将它赋给一个变量，然后传入re.compile函数有助于理解。最后使用re.sub函数以不区分大小写的方式在变量string中寻找模式，将发现的每个模式替换成a。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>

 ]]></description>
  <category>python</category>
  <category>regular expression</category>
  <category>pattern matching</category>
  <guid>https://leslie-lu.github.io/blog/2020/01/18/</guid>
  <pubDate>Sat, 18 Jan 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408231410900.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>你真的了解自己的电脑吗？</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/01/17/</link>
  <description><![CDATA[ 





<section id="前言" class="level3">
<h3 class="anchored" data-anchor-id="前言">前言</h3>
<p>我们现在基本上人手一台电脑，无论你是Mac、Windows还是Linux，你真的了解你手头上的电脑么？当你在选购新电脑或者购买部件的时候，是否了解该怎么挑选呢？接下来我们一起了解下最常见也是容易搞不懂的电脑/计算机。</p>
</section>
<section id="什么是计算机" class="level3">
<h3 class="anchored" data-anchor-id="什么是计算机">什么是计算机</h3>
<p>一般地，接受用户输入命令与数据，经由中央处理器的数学与逻辑单元运算处理后，以产生或存储成有用的信息的机器，我们就称之为计算机。从这个意义上讲，我们日常用的计算器、手机、GPS卫星定位系统、ATM取款机、台式电脑、笔记本电脑、iPad、Apple Watch等都是计算机。我们常说的计算机是其中的台式或笔记本电脑。</p>
</section>
<section id="电脑硬件" class="level3">
<h3 class="anchored" data-anchor-id="电脑硬件">电脑硬件</h3>
<p>电脑的三大部分（以台式电脑为例）包括：</p>
<ul>
<li><p>输入单元：包括键鼠、读卡器、扫描仪、手写板、触控屏幕等</p></li>
<li><p>主机部分：即系统单元，在主机机箱内，里面含有一堆板子、CPU与内存等</p></li>
<li><p>输出单元：屏幕、打印机等</p></li>
</ul>
<p>主机里面最重要的就是一块主板，上面安装了中央处理器（Central Processing Unit, CPU）以及内存、硬盘（或存储卡）还有一些适配卡设备。大部分智能手机是将这些组件直接焊接在主板上面而不是插卡。</p>
</section>
<section id="cpu" class="level3">
<h3 class="anchored" data-anchor-id="cpu">CPU</h3>
<p>整台主机的重点在于CPU，CPU为一个具有特定功能的芯片，里面含有指令集，如果你想要让主机进行什么操作，就得要参考这块CPU是否有相关内置的指令集才可以。由于CPU的工作主要在于管理和运算，因此在CPU内又可分为两个主要的单元，分别是算术逻辑单元和控制单元。其中算术逻辑单元主要负责程序运算与逻辑判断，控制单元则主要协调各周边组件与各单元间的工作。CPU是整个电脑系统的最重要部分。</p>
<p>CPU依设计理念不同，主要分为：</p>
<ul>
<li><p>精简指令集（RISC）系统：ARM公司的ARM CPU系列等。我们常使用的各品牌手机、导航系统、路由器等，几乎都是使用ARM架构的CPU。</p></li>
<li><p>复杂指令集（CISC）系统：AMD、Intel等x86架构的CPU。由于x86架构CPU被大量用于个人电脑，因此个人电脑常被称为x86架构电脑。64位的个人电脑CPU又被统称为x86-64架构。x86架构的称呼来源于Intel最早研发出来的CPU代号。所谓的位（bit），指的是CPU一次读取数据的最大量。64位CPU表示CPU一次可以读写64位的数据，一般32位CPU所能读写的最大数据量大概是4GB。</p></li>
</ul>
</section>
<section id="电脑上面常用的计算单位容量速度等" class="level3">
<h3 class="anchored" data-anchor-id="电脑上面常用的计算单位容量速度等">电脑上面常用的计算单位（容量、速度等）</h3>
<ul>
<li><p>容量单位：电脑对数据的判断主要依据有没有通电来记录信息，所以理论上对于每一个记录单位而言，电脑只认识0与1而已。0/1这个二进制的单位我们称之为位（bit，比特）。但位实在太小，因而每份数据都使用8个位来记录，8位为一字节（Byte）。同样的，字节依然太小，因而有K代表1024B，M代表1024K，G代表1024M，T代表1024G，P代表1024T，E代表1024P。一般来说，数据容量使用二进制，所以1GB的文件大小为1024<em>1024</em>1204B。</p></li>
<li><p>速度单位：CPU的命令周期常使用MHz或GHz之类的单位，这个Hz是“次数/秒”的意思。而在网络传输方面，由于网络使用的是位为单位，因此网络常使用的单位为Mbit/s（每秒多少Mbit）。大家常听到的“20M/5M”光纤传输速度，如果转成数据容量的字节时，其实理论最大传输值为：每秒2.5MB/每秒625KB的下载或上传速度。</p></li>
</ul>
<p>假设你今天购买了一块500GB的硬盘，但是格式化完毕后只剩下460GB左右的容量，这是为什么呢？一般硬盘制造商使用十进制的单位，所以500GB代表500<em>1000</em>1000*1000B，转成数据的容量单位时使用二进制（1024为基数），所以就成为466GB左右的容量了。并非厂商骗人，只是因为硬盘的最小物理量为512B，最小的组成单位为扇区（sector），通常硬盘容量的计算采用多少个扇区，所以才会使用十进制来处理。</p>
</section>
<section id="内存" class="level3">
<h3 class="anchored" data-anchor-id="内存">内存</h3>
<p>CPU读取的数据完全从内存中来（无论是程序还是一般文件数据），如果要读取硬盘中的数据，也要将数据挪到内存当中，再交由CPU来读取。内存中的数据则是从输入单元所传输进来的，而CPU处理完毕的数据也必须要先写回内存，最后数据才从内存传输到输出单元。</p>
<p>这就是我们常说的，要加快系统性能，通常将内存容量加大就可以获得相当好的效果。因为所有的数据都是要经过内存的传输，所以内存的容量如果太小，数据读写性能就不足，对性能的影响相当大，尤其在Linux作为服务器操作系统的环境下。这也是为什么在买手机时，人们对可用内存（运行内存）的要求都很高的原因。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>

 ]]></description>
  <category>linux</category>
  <guid>https://leslie-lu.github.io/blog/2020/01/17/</guid>
  <pubDate>Fri, 17 Jan 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211533740.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>R语言的初体验</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/01/16/</link>
  <description><![CDATA[ 





<p>R语言是从起源于贝尔实验室的S统计绘图语言演变而来的。与S语言类似，R也是一种为统计计算和绘图而生的语言和环境，它是一套开源的数据分析解决方案，由一个庞大且活跃的全球性研究型社区维护。</p>
<section id="r的特点总结" class="level3">
<h3 class="anchored" data-anchor-id="r的特点总结">R的特点总结</h3>
<ol type="1">
<li><p>软件本身及程序包的源代码公开；</p></li>
<li><p>涵盖了多种行业数据分析中几乎所有的方法；</p></li>
<li><p>任意一个分析步骤的结果均可被轻松保存、操作，并作为进一步分析的输入；</p></li>
<li><p>R拥有顶尖水准的制图功能；</p></li>
<li><p>R可运行于多种平台上，包括Windows、UNIX和Mac OS X；</p></li>
<li><p>可轻松地从各种类型的数据源读写数据，包括文本文件、数据库管理系统、统计软件，乃至专门的数据仓库；</p></li>
<li><p>每个函数都有统一格式的帮助和运行实例。</p></li>
</ol>
</section>
<section id="r的帮助系统" class="level3">
<h3 class="anchored" data-anchor-id="r的帮助系统">R的帮助系统</h3>
<p>R提供了大量的帮助功能，学会如何使用这些帮助文档有助于编程。R的内置帮助系统提供了当前已安装包中所有函数的细节、参考文献以及使用示例。帮助文档可以通过以下函数进行查看。</p>
<ul>
<li><p>help.start()：打开帮助文档首页</p></li>
<li><p>help(foo)或?foo：查看函数foo的描述说明等帮助信息(如返回值)</p></li>
<li><p>help.search(‘foo’)或??foo：以foo为关键词搜索本地帮助文档</p></li>
<li><p>RSiteSearch(‘foo’)：以foo为关键词搜索在线文档和邮件列表存档</p></li>
<li><p>apropos(‘foo’, mode=‘function’)：列出名称中含有foo的所有可用函数，在只知道函数的部分名称时搜索可用</p></li>
<li><p>example(foo)：查看函数foo的使用范例</p></li>
<li><p>data() 列出当前已加载包中所含的所有可用示例数据集</p></li>
<li><p>vignette() 列出当前已安装包中所有可用的vignette文档</p></li>
<li><p>vignette(‘foo’) 为主题foo显示指定的vignette文档</p></li>
</ul>
</section>
<section id="工作空间和目录" class="level3">
<h3 class="anchored" data-anchor-id="工作空间和目录">工作空间和目录</h3>
<p>工作空间（workspace）是当前R的工作环境，存储着所有你定义的对象（向量、矩阵、函数、数据框和列表）。在一个R会话结束时，你可以将当前工作空间保存到一个镜像中，以便在下次启动R时自动载入它。当前的工作目录（working directory）是R用来读取文件和保存结果的默认目录。</p>
<p>用于管理工作空间和目录的部分标准命令如下：</p>
<ul>
<li><p>getwd()：查看当前工作目录</p></li>
<li><p>setwd()：重新设定当前工作目录。如果需要读入一个不在当前工作目录下的文件，需要在调用语句中写明文件的完整路径。setwd()命令的路径中使用正斜杠/。R将反斜杠。即使在Windows平台上运行R，在路径中也要使用正斜杠。</p></li>
<li><p>ls()：列出当前工作空间中的对象</p></li>
<li><p>rm(objectlist)：删除一个或多个对象</p></li>
<li><p>options()：显示或设置当前选项</p></li>
<li><p>history(#)：显示最近使用的#个命令(默认值为25)</p></li>
<li><p>savehistory(‘myfile’) 保存命令历史到文件myfile.Rhistory中</p></li>
<li><p>loadhistory(‘myfile’) 载入命令历史文件myfile.Rhistory</p></li>
<li><p>save.image(‘myfile’) 保存工作空间到文件myfile.RData中</p></li>
<li><p>load(‘myfile’) 读取工作空间myfile.RData到当前会话中</p></li>
<li><p>save(objectlist, file=‘myfile’) 保存指定对象到一个文件中</p></li>
<li><p>q()：结束对话退出R，并询问是否保存工作空间</p></li>
</ul>
</section>
<section id="r包" class="level3">
<h3 class="anchored" data-anchor-id="r包">R包</h3>
<p>R提供了大量备用功能，通过可选模块的下载和安装来实现。目前有15364个称为包的用户贡献模块可从https://cran.r-project.org/web/packages下载。这些包提供了横跨各种领域、数量庞大的功能，包括分析地理数据、处理蛋白质质谱，甚至是心理测验分析的功能。</p>
<p>R包是R函数、数据、预编译代码以一种定义完善的格式组成的集合，具有详细的说明和示例。计算机上存储包的目录称为库（library）。.libPaths()显示库所在位置，library()则可以显示库中包。</p>
<p>第一次安装一个包，使用命令install.packages()即可，在括号中输入要安装的包名称，一个包仅需安装一次。update.packages()更新已安装的包。installed.packages()列出已安装的包的相关信息(如版本号、依赖关系等)。Windows下的R包是经过编译的zip文件，安装时不要解压缩。安装路径为“Pacakges&gt;install packages from local files”，选择本地磁盘上存储zip包的文件夹。</p>
<p>包的安装是指从某个CRAN镜像站点下载它并将其放入库中的过程。安装好以后，必须被载入到会话中才能使用包，需要使用library()函数载入该包。在一次应用中，包只需载入一次，如果需要，我们可以自定义启动环境以自动载入会频繁使用的包。search()显示已加载并可使用的包。help(‘package_name’)输出某个包的简短描述以及包中可用的函数名称和数据集名称的列表，help()查看包中任意函数或数据集的描述，R的帮助系统包含了每个函数的一个描述（同时带有示例），每个数据集的信息也被包括其中。</p>
</section>
<section id="r的使用" class="level3">
<h3 class="anchored" data-anchor-id="r的使用">R的使用</h3>
<p>R是面向对象的，区分大小写的解释型数组编程语言。R中多数功能是由程序内置函数、用户自编函数和对对象的创建和操作所实现的。一次交互式会话期间的所有数据对象都被保存在内存中。R语句由函数和赋值构成，R使用 -&gt; 而非 = 作为赋值符号。R也允许使用 = 为对象赋值，但是它不是标准语法，某些情况下会出现问题。R具有完备的数据存取、管理、分析和显示等功能，将数据处理和统计分析融为一体。以后我们继续学习R语言。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>

 ]]></description>
  <category>r</category>
  <guid>https://leslie-lu.github.io/blog/2020/01/16/</guid>
  <pubDate>Thu, 16 Jan 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211528692.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>kNN改进约会网站的配对效果</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/01/11/</link>
  <description><![CDATA[ 





<section id="前言" class="level3">
<h3 class="anchored" data-anchor-id="前言">前言</h3>
<p>前面我们已经初步了解了kNN——<a href="https://mp.weixin.qq.com/s/Qfa_fEcsTA990hPNH-Rtkw">如何用Python自编k-近邻算法</a>？今天我们试着进行一个实例上kNN的应用。</p>
<p>海伦一直使用在线约会网站寻找自己心仪的约会对象。经过一番总结，她发现曾交往过三种类型的人：不喜欢的人、魅力一般的人和极具魅力的人。她发现自己无法直接将约会网站推荐的匹配对象归入恰当的上述类别之中，希望我们的分类软件能够更好地帮助她进行确切的分类。此外，她还收集了一些约会网站未曾记录的数据信息，提供给了我们。</p>
</section>
<section id="准备数据从文本文件中解析数据" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="准备数据从文本文件中解析数据">准备数据：从文本文件中解析数据</h3>
<p>海伦将准备的数据存放在文本文件datingTestSet2.txt中，每个样本数据占据一行，总共有1000行。每个样本主要收集了3种特征：每年飞行里程数、玩视频游戏所耗时间百分比和每周消费的冰淇淋公升数。如下：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211513823.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">datingTestSet2</figcaption>
</figure>
</div>
<p>而在我们将上述特征数据输入到分类器之前，必须将待处理数据的格式转换为分类器可以接受的格式。我们之前在kNN.py中已经创建了kNN分类器函数，接下来我们创建用于处理输入数据格式的file2matrix函数，此函数的输入为文件名字符串，输出为训练样本矩阵和类标签向量，将文本记录转换为NumPy。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211514852.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">file2matrix</figcaption>
</figure>
</div>
<p>首先我们以r模式（只读模式）打开要处理的文本文件，readlines函数读取整个文件所有行，保存在一个列表变量中，每行作为一个元素，我们计数文件的行数。然后创建以零填充的矩阵，我们将该矩阵的另一维度设置为固定值3。循环处理文件的每一行数据：使用strip函数截取掉所有的回车字符，使用tab字符（将上一步得到的整行数据分割成一个元素列表，选取前3个元素存储到特征矩阵中，使用索引值-1将文件的最后一列存储到向量classLabelVector中，这里，我们必须明确地通知解释器存储的的元素值为整型，否则Python会将这些元素当作字符串进行处理。</p>
<p>使用函数file2matrix读取文件数据，必须确保文件存储在我们的工作目录中。重新加载kNN.py模块，以确保更新的内容可以生效，否则Python将继续使用上次加载的kNN模块。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211515827.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">load data</figcaption>
</figure>
</div>
<p>现在我们已经从文本文件导入了数据并将其格式化为想要的格式，接下来我们以图形化的方式直观地展示数据内容，以便辨识出一些数据模式。</p>
</section>
<section id="分析数据使用matplotlib创建散点图" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="分析数据使用matplotlib创建散点图">分析数据：使用Matplotlib创建散点图</h3>
<p>首先我们使用Matplotlib制作原始数据的散点图：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211515883.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">scatter</figcaption>
</figure>
</div>
<p>输出效果如下图，散点图使用特征矩阵的第二、三列数据，分别为玩视频游戏所耗时间百分比和每周消费的冰淇淋公升数。由于没有使用样本类别标签，我们很难看出有用的数据模式信息。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211516465.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">plot</figcaption>
</figure>
</div>
<p>为了更好地理解数据，我们以不同的方式来标记不同的样本类别。Matplotlib库提供的scatter函数支持个性化标记散点图上的点。重新输入上面的代码，调用scatter函数时使用下列参数，利用变量datingLabels存储的类别标签属性，在散点图上绘制色彩不等、尺寸不同的点：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211517150.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">scatter function</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211517661.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">colored plot</figcaption>
</figure>
</div>
<p>我们基本上能够看到数据点所属三个类别的区域轮廓，但还不是十分明显，接下来我们使用特征矩阵的第一、二列属性作图：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211518009.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">clusters</figcaption>
</figure>
</div>
<p>此时我们可以看到图中清晰地标示了三个不同的样本类别区域，通过这两个特征更容易区分数据点。</p>
</section>
<section id="准备数据归一化数值" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="准备数据归一化数值">准备数据：归一化数值</h3>
<p>观察原始数据我们发现：每年飞行里程数的数量级远大于其余两个特征。在利用kNN计算样本之间的距离时，数值大的该特征会极大地影响最终的结果，也就是说，数量值大小会影响特征对结果影响的权重，而我们这里认为三个特征是同等重要的。</p>
<p>因而在处理这种情况时，我们通常采用的方法是将数值归一化，如将取值范围处理为0到1或者-1到1之间。下面的公式可将特征值转化为0到1区间内的值：<img src="https://latex.codecogs.com/png.latex?newValue%20=%20%5Cfrac%7BoldValue%20-%20min%7D%7Bmax%20-%20min%7D">，其中 <img src="https://latex.codecogs.com/png.latex?min"> 和 <img src="https://latex.codecogs.com/png.latex?max"> 分别是数据集中的最小特征值和最大特征值。我们需要在脚本 <code>kNN.py</code> 中增加一个函数 <code>autoNorm</code>，自动将数字特征值转化为0到1区间内的值。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211520932.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">autoNorm</figcaption>
</figure>
</div>
<p>我们将每列的最小值放在变量minVals中，每列最大值放在变量maxVals中，其中的参数0使得函数可以从列中选取最小值和最大值。然后函数计算可能的取值范围，并创建新的返回矩阵。</p>
<p>正如前面给出的公式，为了归一化特征，我们使用当前值减去最小值，然后除以取值范围。而需要注意的是，特征值矩阵有1000*3个值，而minVals和maxVals的值都为1*3。为了解决这个问题，我们使用NumPy库中函数tile将变量内容复制成输入矩阵同等大小的矩阵，然后再利用具体特征值相除得到归一化后的特征矩阵。需要注意的是：对于某些数值处理软件包，/可能意味着矩阵除法，但在NumPy库中，矩阵除法需要使用函数linalg.solve(matA,matB)。</p>
<p>我们重新加载kNN.py模块，执行函数autoNorm：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211522446.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">reload autoNorm</figcaption>
</figure>
</div>
<p>这里我们也可以只返回normMat矩阵，但是后面我们需要取值范围和最小值来归一化需要测试的新数据。</p>
</section>
<section id="测试算法作为完整程序验证分类器" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="测试算法作为完整程序验证分类器">测试算法：作为完整程序验证分类器</h3>
<p>我们已经对数据按照需求进行了处理，下面我们来测试分类器的效果。我们将已有数据的90%作为训练集来训练分类器，使用余下的10%作为测试集，检测分类器的错误率。这里由于海伦提供的数据并没有按照特定目的来排序，因而我们可随意选择10%数据而不影响测试集选择的随机性。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211523725.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">datingClassTest</figcaption>
</figure>
</div>
<p>转换数据格式并归一化后，我们决定哪些数据用于测试，然后将训练集和测试集输入到kNN分类器classify函数中，计算错误率并输出分类结果。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211524313.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">test result</figcaption>
</figure>
</div>
<p>kNN分类器在测试集上的错误率为5%。我们可以改变函数datingClassTest内变量hoRatio和变量k的值，看看错误率是否会发生一些变化。</p>
<p>现在，海伦可以输入未知对象的特征信息，由的分类器来帮助她判定某一对象的可交往程度：讨厌、一般喜欢、非常喜欢。</p>
</section>
<section id="使用算法构建完整可用系统" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="使用算法构建完整可用系统">使用算法：构建完整可用系统</h3>
<p>我们会给海伦一小段程序，通过该程序海伦会在约会网站上找到某个人并输入他的信息，程序会给出她对对方喜欢程度的预测值。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211524612.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">classifyPerson</figcaption>
</figure>
</div>
<p>这里使用input函数获取用户控制台的输入。我们让海伦给出她在约会网站上新找的一个人信息。由于NumPy库提供的数组操作并不支持Python自带的数组类型，因此在编写代码时要注意不要使用错误的数组类型。另外在输入新样本时注意将其归一化处理。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211525211.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">classify result</figcaption>
</figure>
</div>
<p>这样，我们就完成了kNN对约会网站的配对效果的改进了。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>

 ]]></description>
  <category>python</category>
  <category>kNN</category>
  <guid>https://leslie-lu.github.io/blog/2020/01/11/</guid>
  <pubDate>Sat, 11 Jan 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211511348.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>Python基础要素之字符串</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/01/10/</link>
  <description><![CDATA[ 





<p>字符串是Python中的另一种基本数据类型。它通常是指人类可以阅读的文本，但更广泛地说，它是一个字符序列，并且字符只有在组成这个序列时才有意义。一些对象看上去是数值，但实际上是字符串，比如邮政编码，你对邮政编码做加减乘除是没有意义的，所以最好在代码中将其作为字符串来处理。接下来介绍用于字符串管理的一些模块、函数和操作。</p>
<section id="字符串" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="字符串">字符串</h3>
<p>字符串可以包含在单引号、双引号、3个单引号或3个双引号之间：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211503380.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">字符串</figcaption>
</figure>
</div>
<p>Output #14展示了一个包含在单引号之间的简单字符串。</p>
</section>
<section id="len" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="len">+、*、len()</h3>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211503929.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">operator</figcaption>
</figure>
</div>
<p>Output #18展示了使用+操作符将两个字符串相加。+操作符按照原样相加，如果你想在结果字符串中留出空格的话，就必须在原字符串中加上空格（Output #18在字母a后加了空格），Output #19中的*操作符也是这样，其将字符串重复一定的次数。Output #20展示了使用内置函数len来确定字符串中字符的数量。len函数将空格与标点符号都计入字符串长度，所以结果是23个字符。</p>
</section>
<section id="split函数" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="split函数">split函数</h3>
<p>使用split函数将一个字符串拆分成一个子字符串列表（列表中的子字符串正好可以构成原字符串）。split函数可以在括号中使用两个附加参数，第一个附加参数表示使用哪个字符进行拆分，第二个参数表示进行拆分的次数。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211504667.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">split</figcaption>
</figure>
</div>
<p>在Output #21中，括号中没有附加参数，所以split函数使用空格字符（默认值）对字符串进行拆分。因为这个字符串有5个空格，所以被拆分成具有6个子字符串的列表。Output #22中，第一个附加参数是用空格来拆分字符串，第二个附加参数是2，说明只想用前两个空格进行拆分，生成一个带有3个元素的列表。第二个参数会在我们解析数据的时候派上用场。举例来说，你可能会解析一个日志文件，文件中包含时间戳、错误代码和由空格分隔的错误信息。在这种情况下，可以使用前两个空格进行拆分，解析出时间戳和错误代码，但是不使用剩下的空格进行拆分，以便完整地保留错误信息。Output #23和Output #24中，括号中的附加参数是都好，split函数在出现逗号的位置拆分字符串。</p>
</section>
<section id="join函数" class="level3">
<h3 class="anchored" data-anchor-id="join函数">join函数</h3>
<p>使用join函数将列表中的子字符串组合成一个字符串。join函数将一个参数放在join前面，表示使用这个字符（或字符串）在子字符串之间进行组合。<code>print("Output #25: {0}".format(','.join(string2_list)))</code>这里join函数将子字符串组合成一个字符串，子字符串之间为逗号。因为列表中有6个子字符串，所以组合后有5个逗号。</p>
</section>
<section id="strip函数" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="strip函数">strip函数</h3>
<p>使用strip、lstrip和rstrip函数从字符串两端删除不想要的字符，这三个函数都可以在括号中使用一个附加参数来设定要从字符串两端删除的字符（或字符串）。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211506349.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">strip</figcaption>
</figure>
</div>
<p>可以看到，string3的左侧有几个空格，右侧包含制表符（、几个空格和换行符（）。在Output #26中，你会看到句子前面有空白，句子下面有一个空行，句子后面有你看不到的制表符和空格。{0:s}中的s表示传入的值应该格式化为一个字符串。下面展示了从字符串两端删除其他字符的方法，将要删除的字符作为strip函数的附加参数即可：通过将美元符号、下划线、短划线和加号作为附加参数，通知程序从字符串两端删除它们。</p>
</section>
<section id="replace函数" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="replace函数">replace函数</h3>
<p>使用replace函数将字符串中的一个或一组字符替换为另一个或另一组字符。replace函数在括号中使用两个附加参数，第一个参数作用是在字符串中查找要替换的字符或一组字符，第二个参数是要用来替换的一个或一组字符。</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211507108.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">replace</figcaption>
</figure>
</div>
<p>Output #32展示了使用replace函数将字符串中的空格替换为!@!。Output #33展示了使用逗号替换字符串中的空格。</p>
</section>
<section id="loweruppercapitalize函数" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="loweruppercapitalize函数">lower、upper、capitalize函数</h3>
<p>lower和upper函数分别用来将字符串中的字母转换为小写和大写，capitalize函数对字符串中的第一个字母应用upper函数，对其余字母应用lower函数：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211508119.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">lower-upper-capitalize</figcaption>
</figure>
</div>
<p>Output #36对句子的首字母大写。Output #37将capitalize函数放在一个for循环中，对string8_list这个列表中的每个元素首字母大写，其余字母小写。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>

 ]]></description>
  <category>python</category>
  <guid>https://leslie-lu.github.io/blog/2020/01/10/</guid>
  <pubDate>Fri, 10 Jan 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408211501817.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>笔记</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/01/09/</link>
  <description><![CDATA[ 





<section id="表示的重要性" class="level3">
<h3 class="anchored" data-anchor-id="表示的重要性">表示的重要性</h3>
<p>表示问题必须优先于获取问题。如果缺少问题的表示方法，我们也就不知道如何存储信息以供使用。人工智能对认知研究的一个主要贡献就是确立“表示第一，获取第二”的范式。</p>
<p>通常，在寻求一个好的表示方法的过程中，关于如何获取知识的洞见就会自然产生，无论这种洞见是来自数据，还是来自程序员。</p>
<p>人类的大脑肯定拥有某种简洁的信息表示方式，同时还拥有某种十分有效的程序用以正确解释每个问题，并从存储的信息表示中提取正确答案。我们需要给机器装备同样高效的表示信息和提取答案的算法，因果图和因果推断就派上了用场。</p>
</section>
<section id="打破规则" class="level3">
<h3 class="anchored" data-anchor-id="打破规则">打破规则</h3>
<p>计算机不能理解因果关系，我们必须教会它如何打破规则，让它理解“观察到某事件”和“使某事件发生”之间的区别。</p>
<p>我们需要告诉计算机：“无论何时，如果你想使某事发生，那就删除因果图中指向该事的所有箭头，之后继续根据逻辑规则进行分析。”这样做的原因很简单：使某事发生就意味着将它从所有其他影响因子中解放出来，并使它受限于唯一的影响因子——能强制其发生的那个因子。</p>
<p>计算机能够进行因果推理的前提是，计算机懂得有选择地打破逻辑规则。</p>
</section>
<section id="概率的重要性" class="level3">
<h3 class="anchored" data-anchor-id="概率的重要性">概率的重要性</h3>
<p>构建因果模型不仅仅是画箭头，箭头背后还隐藏着概率。当我们绘制一个从X指向Y的箭头时，我们是在暗指，某些概率规则或函数具体说明了“如果X发生改变，Y将如何变化”。在某些情况下我们可能知道这个规则具体是什么，但更多时候，我们不得不根据数据来对这个规则进行估计。因果革命最有趣的特点之一就是，在许多情况下，我们可以对这些完全不确定的数学细节置之不理。通常情况下，因果图自身的结构就足够让我们推测出各种因果关系和反事实关系：简单的或复杂的、确定的或概率的、线性的或非线性的。</p>
</section>
<section id="概率与因果关系" class="level3">
<h3 class="anchored" data-anchor-id="概率与因果关系">概率与因果关系</h3>
<p>概率能将我们对静态世界的信念进行编码，而因果论则告诉我们，当世界被改变时（无论改变是通过干预还是通过想象实现的），概率是否会发生改变以及如何改变。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>

 ]]></description>
  <category>biostatics</category>
  <category>causal inference</category>
  <guid>https://leslie-lu.github.io/blog/2020/01/09/</guid>
  <pubDate>Thu, 09 Jan 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201505235.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>如何用Python自编k-近邻算法？</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/01/08/</link>
  <description><![CDATA[ 





<section id="k-近邻算法概述" class="level3">
<h3 class="anchored" data-anchor-id="k-近邻算法概述">k-近邻算法概述</h3>
<p>简单地说，kNN依据不同特征值之间的距离进行分类。它不具有显式的学习过程，实际上是利用训练数据集对特征向量空间进行划分，并作为其分类的模型，即我们知道训练集中每一数据与所属分类的对应关系，输入没有标签的新数据后，将新数据的每个特征与训练集中数据对应的特征进行比较，然后算法提取训练集中特征最为相似数据的分类标签，选择k个最相似数据中出现次数最多的类别作为新数据的分类。</p>
</section>
<section id="自编knn函数" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="自编knn函数">自编kNN函数</h3>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201500514.jpeg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">kNN</figcaption>
</figure>
</div>
<p>classify()函数有4个输入参数：待分类的输入向量inX，训练集dataSet，训练集标签向量labels，参数k为选择最近数据点个数，其中，inX维度为1xN，dataSet维度为MxN，labels维度为1xM，k为奇数。</p>
<p>dataSet.shape以元组形式返回训练集维度(M, N)，dataSetsize为训练集的样本个数M。这里距离度量采用欧式距离，因而tile函数将输入数据重复M行1列（从而与训练集维度相同），分别和训练集中的每个数据点对应特征相减再平方，再按行相加，不保持其二维特性，即得输入数据与训练集中每个数据点之间的欧式距离。</p>
<p>计算完距离之后，argsort函数对距离按照从小到大的次序排列，并返回排序后对应的原始索引值。使用for循环确定前k个距离最小元素所属的类别voteIlabel，使用get函数按照字典classCount键值取得相应的字典值，如果字典中存在这个键，get函数就返回对应的字典值，如果不存在，则返回0，用这种方式计数k个数据中每个标签出现的次数。因而字典classCount中键值为标签，字典值为k个标签对应的个数。</p>
<p>使用sorted函数对字典classCount进行排序：items函数同时引用字典的键和值，结果是一个列表，其中包含的是键-值对形式的元组。由于字典没有隐含排序，我们可以按照字典的键或字典值来排序，这里的key就是排序的规则，关键字函数设置用于排序的关键字。使用operator模块中的itemgetter函数对列表按照每个元组第二个索引位置（即字典值，标签个数）进行排序，reverse=True对应降序。所以最后返回sortedClassCount列表中第一个元组的第一个值，即在k个标签中出现次数最多的标签，这样即完成了一个简单的kNN算法。</p>
</section>
<section id="创建训练集" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="创建训练集">创建训练集</h3>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201501398.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">训练集</figcaption>
</figure>
</div>
<p>我们创建了一个简单的训练集，有4组数据，每组数据有两个我们已知的属性/特征值。向量labels包含了每个数据的标签信息，labels包含的元素个数等于group矩阵行数。</p>
</section>
<section id="运行knn" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="运行knn">运行kNN</h3>
<p>我们需要在脚本中导入两个模块NumPy和运算符operator（kNN执行排序操作时使用到）：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201502739.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">import modules</figcaption>
</figure>
</div>
<p>保存脚本文件，改变当前路径到存储脚本文件位置，进入Python：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201503020.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">run kNN</figcaption>
</figure>
</div>
<p>输出结果应该是B，也可以改变输入数据运行。这样，我们已经构造了一个简单的kNN分类器。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>

 ]]></description>
  <category>python</category>
  <category>kNN</category>
  <guid>https://leslie-lu.github.io/blog/2020/01/08/</guid>
  <pubDate>Wed, 08 Jan 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201459098.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>NumPy函数库基础</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/01/07/</link>
  <description><![CDATA[ 





<p>机器学习算法涉及很多线性代数知识，我们会经常使用NumPy函数库，用线性代数简化不同的数据点上执行的相同数学运算。将数据表示为矩阵形式，只需要执行简单的矩阵运算而不需要复杂的循环操作。</p>
<p>在Python shell开发环境中输入下面命令：<code>from numpy import *</code>，将NumPy函数库中的所有模块引入到当前的命名空间，输入以下命令：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201454286.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">NumPy</figcaption>
</figure>
</div>
<p>上述命令构造了一个4*4的随机数组（随机数组在不同计算机上输出可能不同）。</p>
<p>在NumPy函数库中存在两种不同的数据类型（矩阵matrix和数组array），二者都可以用于处理行列表示的数字元素。虽然看起来很相似，但在这两个数据类型上执行相同的数学运算可能得到不同的结果，其中的矩阵matrix与MATLAB中matrices等价。</p>
<p>调用mat()函数可将数组转换为矩阵：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201455985.jpeg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">mat</figcaption>
</figure>
</div>
<p>如何进行矩阵求逆呢？不记得或者没学过矩阵求逆也没关系，NumPy库.I操作符可以很方便地算出矩阵的逆运算：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201456663.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">逆矩阵</figcaption>
</figure>
</div>
<p>接着执行矩阵乘法，得到矩阵与其逆矩阵相乘的结果：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201456009.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">矩阵乘法</figcaption>
</figure>
</div>
<p>结果应该是单位矩阵，除了对角线元素是1，4*4矩阵的其他元素应该全是0。上面实际输出略有不同，矩阵里还留下了很多数值非常小的元素，这是计算机处理误差产生的结果，我们来看一下误差值：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201457590.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">误差</figcaption>
</figure>
</div>
<p>函数eye(4)创建4*4的单位矩阵。</p>
<p>只要能够顺利完成上面的例子，你就已经正确地安装并初步使用了NumPy函数库。后面我们会对它有更深的了解。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>

 ]]></description>
  <category>python</category>
  <category>numpy</category>
  <guid>https://leslie-lu.github.io/blog/2020/01/07/</guid>
  <pubDate>Tue, 07 Jan 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201448332.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>Python基础要素之数值</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/01/06/</link>
  <description><![CDATA[ 





<p>前面我们已经了解了如何创建、运行脚本，接下来我们了解下Python中最常用的数据类型。</p>
<section id="数值" class="level3">
<h3 class="anchored" data-anchor-id="数值">数值</h3>
<p>Python中最主要的4种数值类型分别是整数、浮点数、长整数和复数，这里只介绍整数和浮点数（即带小数点的数）。</p>
<p>整数：</p>
<div id="2cee23c5" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span></span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output #4: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(x))</span>
<span id="cb1-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output #5: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb1-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output #6: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.7</span>)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Output #4: 9
Output #5: 81
Output #6: 4.0</code></pre>
</div>
</div>
<p>Output #6演示了将数值转换成整数并进行除法运算。</p>
<p>浮点数：</p>
<div id="0010a17b" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output #7: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0:.3f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.7</span>))</span>
<span id="cb3-2">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.8</span></span>
<span id="cb3-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output #8: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0:.1f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(y))</span>
<span id="cb3-4">r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb3-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output #9: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0:.2f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(r))</span>
<span id="cb3-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output #10: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0:.4f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Output #7: 3.074
Output #8: 12.0
Output #9: 2.67
Output #10: 2.6667</code></pre>
</div>
</div>
<div id="f80c590d" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/env python3</span></span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> math <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> exp, log, sqrt</span>
<span id="cb5-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output #11: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0:.4f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(exp(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)))</span>
<span id="cb5-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output #12: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0:.2f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(log(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)))</span>
<span id="cb5-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output #13: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0:.1f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">81</span>)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Output #11: 20.0855
Output #12: 1.39
Output #13: 9.0</code></pre>
</div>
</div>
</section>
<section id="format格式化" class="level3">
<h3 class="anchored" data-anchor-id="format格式化">.format格式化</h3>
<div id="3777a0d3" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add two numbers together</span></span>
<span id="cb7-2">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb7-3">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb7-4">z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y</span>
<span id="cb7-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output #2: Four plus five equals </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0:d}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(z))</span>
<span id="cb7-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add two lists together</span></span>
<span id="cb7-7">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb7-8">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"second"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"third"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fourth"</span>]</span>
<span id="cb7-9">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span>
<span id="cb7-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output #3: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{1}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{2}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(a, b, c))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Output #2: Four plus five equals 9.
Output #3: [1, 2, 3, 4], ['first', 'second', 'third', 'fourth'], [1, 2, 3, 4, 'first', 'second', 'third', 'fourth']</code></pre>
</div>
</div>
</section>
<section id="type函数" class="level3">
<h3 class="anchored" data-anchor-id="type函数">type函数</h3>
<p>Python提供一个名为type的函数，可以对所有对象调用这个函数，来获得关于Python如何处理这个对象的更多信息。</p>
<p>函数的语法非常简单：type(variable)会返回Python中的数据类型。如果你对一个数值变量调用这个函数，它会告诉你这个数值是整数还是浮点数，还会告诉你这个数值是否能当作字符串进行处理。</p>
<p>此外，由于Python同样是面向对象的语言，所以你可以对Python中所有命名对象调用type函数，不仅是变量，还有函数、语句等。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>

 ]]></description>
  <category>python</category>
  <guid>https://leslie-lu.github.io/blog/2020/01/06/</guid>
  <pubDate>Mon, 06 Jan 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201435557.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>可惜没如果——因果关系的三个层级</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/01/05/</link>
  <description><![CDATA[ 





<section id="前言" class="level3">
<h3 class="anchored" data-anchor-id="前言">前言</h3>
<p>我们平时在统计中最常接触到的就是相关关系，而在因果推断中，实际上相关关系是处在因果关系三个层级的最低层级。正如我们所熟知的，相关不能说明因果，我们从观察到的数据中得到的相关对于因果的解释并不能起到直接的作用。</p>
</section>
<section id="因果关系的三个层级" class="level3">
<h3 class="anchored" data-anchor-id="因果关系的三个层级">因果关系的三个层级</h3>
<section id="第一层级关联" class="level4">
<h4 class="anchored" data-anchor-id="第一层级关联">第一层级：关联</h4>
<p>我们一般通过观察寻找规律。如果观察到某一事件改变了观察到另一事件的可能性，我们便说这一事件与另一事件相关联。更进一步地，我们基于被动观察做出预测。</p>
<p>典型的数据预测问题就是：“如果我观察到···会怎样？”例如，一家商店可能会问你：“购买牙膏的顾客同时购买牙线的可能性有多大？”这类问题是统计学的安身立命之本，统计学家主要通过收集和分析数据给出答案。</p>
<p>我们可以这样解答：首先采集所有顾客购物行为的数据，筛选出购买牙膏的顾客，计算出当中购买牙线的人数比例。这个比例也就是我们所说的条件概率，用来反映(针对大数据)买牙膏和买牙线两种行为之间的关联程度，即P(牙线|牙膏)。典型常用的关联度量方法即相关分析或回归分析，具体操作就是将一条直线拟合到数据点集中，再去确定这条直线的斜率。</p>
<p>我们在学习统计的时候，几乎所有老师都会和你说：“相关不代表因果。”统计学本身不能告诉我们，牙膏或牙线哪个是因，哪个是果。但是从商店的角度看，因果这件事并不重要——好的预测无需好的解释。</p>
<p>当前的机器学习程序(包括应用深度神经网络的程序)几乎仍然完全是在关联模式下运行的。它们由一系列观察结果驱动，致力于拟合出一个函数，就像我们试图用点集拟合出一条直线一样。深度神经网络为拟合函数的复杂性增加了更多的层次，但其拟合过程仍然由原始数据驱动。如果无人驾驶汽车的程序设计者想让汽车在新情况下做出不同的反应，他就必须明确地在程序中添加这些新反应的描述代码，否则机器没有应对新情况的灵活性和适应性。</p>
</section>
<section id="第二层级干预" class="level4">
<h4 class="anchored" data-anchor-id="第二层级干预">第二层级：干预</h4>
<p>在第一层级中，我们基于被动观察发现规律，做出预测。而当我们开始寻求主动对环境做出改变时，我们就迈上了因果关系的第二层级。这一层级的一个典型问题是：“如果我们把牙膏的价格翻倍，牙线的销售额将会怎样？”问出这个问题的时候，我们实际上已经脱离了收集到的数据本身，而要对数据的环境做出干预。我们把这样的问题记作P(牙线|do(牙膏))，即“如果我们实施…行动，将会怎样”。</p>
<p>毫无疑问，干预比关联更高级，因为其不仅涉及被动观察，还涉及主动改变现状。无论你的数据集有多大、神经网络有多深，只要你使用的是被动收集的数据，就无法回答有关干预的问题。从统计学中学到的任何方法都不足以让我们明确表述类似“如果价格翻倍将会发生什么”这样的问题，更谈不上回答了。</p>
<p>为什么我们无法仅仅通过观察来回答牙线的问题呢？为什么不直接进入存有历史购买信息的数据库中，看看在牙膏价格翻倍的情况下对应的牙线的销售情况呢？原因在于，在历史销售信息中，牙膏涨价可能是出于完全不同的原因，如产品供不应求，其他商店也不得不涨价等。而我们只想刻意干预牙膏价格，这一结果就可能与历史上顾客在别处买不到便宜牙膏时的购买行为大相径庭。简单地说，我们只想知道单纯的牙膏涨价这个因所对应的牙线的果，而历史数据中各种影响因素完全超出了我们所提出问题的范畴，因而无法仅仅利用观察历史数据来回答干预的问题。</p>
<p>因果推断则可以帮助我们解决这一问题。</p>
<p>我们知道预测干预结果的一种非常直接的方法是：在严格控制的条件下进行实验。更加有趣的是，一个足够强大准确的因果模型可以在不进行实验的前提下，利用第一层级（关联）的数据来回答第二层级（干预）的问题。</p>
<p>日常生活中，我们一直都在实施干预，尽管我们不会这么一本正经地称呼它。当我们服用阿司匹林试图治疗头痛时，就是在干预一个变量（人体内阿司匹林的量），以影响另一个变量（头痛的状态）。如果我们关于阿司匹林治愈头痛的因果知识是正确的，那么我们的结果变量的值将会从“头痛”变为“不头痛”。</p>
</section>
<section id="第三层级反事实" class="level4">
<h4 class="anchored" data-anchor-id="第三层级反事实">第三层级：反事实</h4>
<p>但是到此仍然不能回答所有我们感兴趣的因果问题：现在已经不头痛了，是因为我吃的阿司匹林么？是因为我吃的食物么？是因为我心情变好了么？</p>
<p>正是这些问题将我们带入到因果关系的第三层级：反事实。要回答以上问题，我们就必须回到过去改变历史，“假如我们没有服用过阿司匹林，会怎样？”世界上没有哪个实验可以撤销对一个已接受过治疗的人所进行的治疗，进而比较治疗与未治疗两种条件下的结果。</p>
<p>数据就是事实，而在反事实世界里，观察到的事实被完全否定。回到牙膏的例子，第三层级的问题是：“假如我们把牙膏价格翻倍，之前买了牙膏的顾客仍然选择购买的概率是多少？”在这个问题中，我们所做的就是将真实的世界（我们知道顾客以当前的价格购买了牙膏）和虚构的世界（牙膏价格翻倍）进行对比。</p>
<p>“倘若那天，把该说的话好好说，该体谅的不执着，你会怎么做？”对这类问题的回答让我们得以从历史和他人的经验中获取经验教训。从想象的反事实中，我们获得了灵活性、反省能力以及改善行为的能力。</p>
<p>因果关系第三层级的典型问题就是：”假如我当时做了…会怎样？“和“为什么？”两者都涉及观察到的世界与反事实世界的比较。仅靠干预实验无法回答这样的问题。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>
</section>

 ]]></description>
  <category>biostatistics</category>
  <category>causal inference</category>
  <guid>https://leslie-lu.github.io/blog/2020/01/05/</guid>
  <pubDate>Sun, 05 Jan 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201409351.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>Python初体验</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/01/04/</link>
  <description><![CDATA[ 





<p>目前Python这门语言有多火也不用多说，各种公众号推送制造的焦虑让你感觉实在不学不行，接下来我们就来体验一下别人口中的这门似乎很神奇的编程语言。</p>
<section id="创建python脚本" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="创建python脚本">创建Python脚本</h3>
<p>Python的安装这里就不说了，当然如果你是mac用户，恭喜你的笔记本自带了Python2（前几天官方已停止对2的更新了）。如何在Python shell中简单地运行代码呢？Windows用户打开命令行窗口，mac用户打开终端，输入“python3”，按下回车键，就能看见Python提示符（&gt;&gt;&gt;）：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201333812.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">Python提示符</figcaption>
</figure>
</div>
<p>面对复杂多代码的任务，我们需要把代码都写在Python脚本上，然后运行脚本 ，提高工作效率。我们可以选择一个自己喜欢的文本编辑器，可供选择的有很多：Spyder、Pycharm、Jupyter notebook、Visual Studio code等。打开编辑器，一般我们将 #!/usr/bin/env python3 作为第一行。以井号开头的代码行为注释行，Windows系统不读取也不执行该行代码，但是像macOS这样的基于Unix的系统会根据这一行来找到执行该脚本的Python版本，加入这一行可以使你的脚本在不同操作系统之间具有可移植性。我们将上面这俩行代码放到Pycharm中，保存为first-script.py文件，这就是一个简单的Python脚本了。</p>
</section>
<section id="运行python脚本" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="运行python脚本">运行Python脚本</h3>
<p>对于在编辑器内运行，编辑器会有一个绿色三角运行按钮，点击一下即可运行输出：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201335674.jpeg" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">Pycharm运行按钮</figcaption>
</figure>
</div>
<p>当然，我们也可以选择在命令行或者终端中运行脚本：打开命令行或者终端，提示符会是一个具体的文件夹，即目录，如mac：/Users/luzhen。我们将脚本保存在桌面上，同时在终端中切换到桌面目录：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201336038.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">终端切换目录</figcaption>
</figure>
</div>
<p>mac上下一步就是为脚本添加执行权限，输入命令：<code>chmod +x first-script.py</code>。chmod是一个Unix命令，表示改变访问权限（change access mode）。+x表示在访问设置中添加执行权限，而非读、写权限。这样Python就可以执行脚本了。mac上只要你在一个脚本上运行了chmod命令，以后就可以随意运行该脚本，无需第二次执行chmod命令。</p>
<p>接下来就可以运行脚本了：</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201337790.webp" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">终端运行脚本</figcaption>
</figure>
</div>
<p>可以看到终端窗口已经完成了脚本输出的打印，脚本运行成功！当然，Windows上还有一种运行方法，直接输入<img src="https://latex.codecogs.com/png.latex?python3%20first-script.py">，也可成功执行脚本，mac上同样适用。</p>
</section>
<section id="与命令行交互的几个小技巧" class="level3">
<h3 class="anchored" data-anchor-id="与命令行交互的几个小技巧">与命令行交互的几个小技巧</h3>
<ul>
<li>使用向上箭头键得到以前的命令</li>
</ul>
<p>在命令行和终端窗口中，你可以通过按向上箭头键找到以前输入的命令，可以减少每次运行Python脚本时必需的输入量，特别是当Python脚本的文件名特别长或需要在命令行上提供额外的参数（比如输入文件名或输出文件名）的时候。</p>
<ul>
<li>用Ctrl+c停止脚本</li>
</ul>
<p>我们已经学会了运行脚本，那么如何提前中断和停止Python脚本呢？Windows是Ctrl+C，mac是Control+c，就可以停止通过命令开始的进程。（进程：计算机对一系列命令的处理过程。对于一个脚本或程序，计算机将它解释成一个进程，如果这个程序非常复杂，就解释成一系列进程，这些进程可以顺序执行，也可以并发执行。）</p>
<ul>
<li>读懂出错信息并找到解决方案</li>
</ul>
<p>当窗口显示了错误信息时，我们先读懂出错信息。某些情况下，出错信息中明确指出了代码中出现错误的行，我们可以集中精力解决这一行的错误（你的文本编辑器应该设置成显示行号，可以在网上搜索一下）。出错信息也是编程的一部分，学会编程也包括学会如何有效地调试程序错误。最好的做法是将整个错误信息（至少是信息的主要部分）复制到搜索引擎上，看看别人是如何调试这种错误的。</p>
<p>这样以后，接下来我们就可以来了解认识Python的语言基础要素了。人生苦短，一起学习Python。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>

 ]]></description>
  <category>pycharm</category>
  <category>python</category>
  <guid>https://leslie-lu.github.io/blog/2020/01/04/</guid>
  <pubDate>Sat, 04 Jan 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201332191.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>因果推断-2</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/01/02/</link>
  <description><![CDATA[ 





<section id="统计值的不确定性意味着什么" class="level3">
<h3 class="anchored" data-anchor-id="统计值的不确定性意味着什么">统计值的不确定性意味着什么？</h3>
<p>统计推断利用统计方法生成一个问题答案的实际估计值，并给出对该估计值的不确定性大小的统计估计。这种不确定性反映了样本数据集的代表性以及可能存在的测量误差或数据缺失。数据永远是从理论上无限的总体中抽取的有限样本。我们无法避免根据样本测量的概率无法代表整个总体的相应概率的可能性。统计学提供了很多方法来应对这种不确定性，包括极大似然估计、倾向评分、置信区间、显著性检验等。</p>
</section>
<section id="相关与独立" class="level3">
<h3 class="anchored" data-anchor-id="相关与独立">相关与独立</h3>
<p>以因果模型的路径图(因果图)来表示的变量之间的听从模式通常会导向数据中某种显而易见的模式或者相关关系。“A和B之间没有连接路径”翻译成统计语言，就是“A和B相互独立”，即发现A的存在不会改变B发生的可能性。</p>
</section>
<section id="想象力与规划" class="level3">
<h3 class="anchored" data-anchor-id="想象力与规划">想象力与规划</h3>
<p>历史学家尤瓦尔·赫拉利在他的《人类简史》一书中指出，人类祖先想象不存在之物的能力是一切的关键，正是这种能力让他们得以交流得更加顺畅。在获得这种能力之前，他们只相信自己的直系亲属或者本部落的人。而此后，信任就因共同的幻想(例如信仰无形但可想象的神，信仰来世，或者信仰领袖的神性)和期许而延伸到了更大的群体。我们的智人祖先新掌握的因果想象力使他们能够通过一种被我们称为“规划”的复杂过程更有效地完成许多事情，例如他们可以通过想象和比较几个狩猎策略的结果来完成一次狩猎活动。而要做到这一点，思维主体必须具备一个可供参考并且可以自主调整的关于狩猎现实的心理模型。心理模型是施展想象力的舞台，它使我们可以通过对模型局部的自主调整修改来试验重估不同情景的概率，人类的心理模型因而具有一种模块性，其涉及预测对环境进行刻意改变后的结果，并根据预测结果选择行为方案以催生出自己所期待的结果。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>

 ]]></description>
  <category>biostatistics</category>
  <category>causal inference</category>
  <guid>https://leslie-lu.github.io/blog/2020/01/02/</guid>
  <pubDate>Thu, 02 Jan 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201322870.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>鼠年加油</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2020/01/01/</link>
  <description><![CDATA[ 





<div style="text-align: center;">
<p>回望一幕幕送别<br> 何尝不轻描淡写<br> 独自出姑苏城外<br> 流光未曾相约<br> 他日他乡重逢<br> 风轻柔河流缓缓</p>
</div>
<div style="text-align: center;">
<p>新年快乐，鼠年加油<br> 没有珍惜的时间，2020开始去珍惜<br> 没有完成的事情，2020开始去完成<br> 从来不相信鸡汤，也不制造鸡汤<br> 等2021年再回顾这一年<br> 希望感受到的不再是很多尴尬的空白<br> 每到新的一年，你的朋友圈是不是也有刷屏的感慨和祝福<br> 一年初始，心愿是美好的<br> 如果能坚持做下去，该是多么圆满<br> 新年少偷点懒，多学习新东西<br> 多看看书，多写点公众号😂<br> 多做一些分享，和小伙伴们共同进步<br> 希望每个你新年新气象，活成你想要的样子<br> 感谢你的关注❤️<br></p>
</div>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>

 ]]></description>
  <category>happy new year</category>
  <guid>https://leslie-lu.github.io/blog/2020/01/01/</guid>
  <pubDate>Wed, 01 Jan 2020 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408201229510.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>因果推断</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2019/12/11/</link>
  <description><![CDATA[ 





<section id="因果推断" class="level3">
<h3 class="anchored" data-anchor-id="因果推断">因果推断</h3>
<p>禁止言论就意味着禁止了思想，同时也扼杀了与此相关的原则、方法和工具。</p>
</section>
<section id="干预" class="level3">
<h3 class="anchored" data-anchor-id="干预">干预</h3>
<p>do算子表明正在进行主动干预而非被动观察，这一概念在经典统计学中没有涉及。临床试验中使用do算子来确保观察到的病人存活期的变化能完全归因于药物本身，而没有混杂其他影响寿命长短的因素。如果不进行干预而让病人自行决定是否服用该药物，那么其他因素就可能会影响病人的决定，而服药和未服药的两组病人的存活期的差异也就无法再被仅仅归因于药物。例如，假设只有重症期的病人服用了这种药，那么两组之间的比较结果实际上反映的是其病情的严重程度，而非药物的影响。在数学上，我们把自行服药病人的生存期的观测概率称为条件概率，这里的概率是以观察到病人服用药物为条件的。【观察到】和【进行干预】是有本质的区别的。我们不认为气压计读数下降是风暴来临的原因，因为观察到气压计读数下降意味着风暴来临的概率增加，但人为使气压计读数下降并不能影响风暴来临的概率。因果推断要做的就是如何在不实际实施干预的情况下预测干预的效果。</p>
</section>
<section id="反事实" class="level3">
<h3 class="anchored" data-anchor-id="反事实">反事实</h3>
<p>假如某人在服用某种药物一个月后死亡，我们现在要关注的问题就是这种药物是否导致了他的死亡。为了回答这个问题，我们需要假设：如果他没服用这种药物，是否会避免死亡？反事实推理输出有关反事实世界的答案。</p>
<p>语言会塑造思想。你无法回答一个你提不出来的问题；你也无法提出一个你的语言所不能描述的问题。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>

 ]]></description>
  <category>statistics</category>
  <category>biostatistics</category>
  <category>causal inference</category>
  <guid>https://leslie-lu.github.io/blog/2019/12/11/</guid>
  <pubDate>Wed, 11 Dec 2019 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408182144602.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>统计学是干嘛的？</title>
  <dc:creator>Zhen Lu</dc:creator>
  <link>https://leslie-lu.github.io/blog/2019/11/28/</link>
  <description><![CDATA[ 





<p>统计学之所以存在，关键的原因只有一个，那就是变异及由此产生的抽样误差。没有变异，没有抽样误差，就没有统计学存在的理由。当我们把多个随机结果放在一起的时候，却能发现一定的规律性。正是因为这种规律的存在，所以我们仍然可以在变异中寻找规律，这也正是统计学的主要目的：从各种看似杂乱的现象中找出潜在的规律。</p>
<section id="抽样调查" class="level3">
<h3 class="anchored" data-anchor-id="抽样调查">抽样调查</h3>
<p>既然是规律，那就一定要在大多数人中存在，只在一小部分人中存在的现象不是规律，而是偶然，因为更多的是大多数人没有存在该现象，这才是规律。要证明一种现象是不是真正的规律，需要在大量人群中进行验证。由于我们无法接触到理论意义上的总体，因而我们换一种思路，调查部分具有代表性的样本，然后用统计学方法将样本的结果推广到总体，这就是我们所说的抽样调查。</p>
</section>
<section id="统计推断与参数估计" class="level3">
<h3 class="anchored" data-anchor-id="统计推断与参数估计">统计推断与参数估计</h3>
<p>统计学通常利用样本数据来推断总体结果，就是我们所说的用样本统计量推断总体参数。总体参数是客观存在的，经典的频率主义学派认为，总体参数是一个客观存在且固定的数值，而贝叶斯学派认为连总体参数自身也是个随机变量，所以也需要我们去估计。样本随机，样本统计量也是随机的，用它来估计总体参数，估计结果会存在一定的误差。但科学合理的抽样调查，其推断的结果是可靠的。偏差的样本会导致偏差的结论。样本必须足够代表总体。当然还需要考虑其他因素，比如调查员的水平、总体人群的变化等影响因素。</p>
</section>
<section id="抽样误差" class="level3">
<h3 class="anchored" data-anchor-id="抽样误差">抽样误差</h3>
<p>然而，即使代表性非常好的样本，也是无法真正等同于总体的，总会存在一定的抽样误差。样本统计量之间的差异就反映了抽样误差。由于抽样误差的存在，如果用样本统计量直接估计总体参数，那么肯定会有一定的偏差。所以在估计总体参数时需要考虑到抽样误差带来的偏差，因而我们在点估计之外，用置信区间来估计总体参数。抽样误差带来的偏差是多大呢？在实际中，我们不可能通过多次抽样，计算每个样本间统计量的差异大小从而去估计偏差大小，我们只能通过一次样本计算。这种根据一次样本计算抽样误差的大小就是标准误（standard error）。标准误几乎在所有统计方法中都会出现，因为它可以提示结果的可靠性：如果标准误较小，则说明抽样误差小，这意味着样本很稳定，对总体的代表性很好，由此推论结果较为可靠；如果标准误较大，则说明抽样误差大，提示样本代表性不强，这种情况下一般需要加大样本量，否则结果不可靠。</p>
<section id="did-you-find-this-page-helpful-consider-sharing-it" class="level5">
<h5 class="anchored" data-anchor-id="did-you-find-this-page-helpful-consider-sharing-it">Did you find this page helpful? Consider sharing it 🙌</h5>


<!-- -->

</section>
</section>

 ]]></description>
  <category>statistics</category>
  <category>biostatistics</category>
  <guid>https://leslie-lu.github.io/blog/2019/11/28/</guid>
  <pubDate>Thu, 28 Nov 2019 00:00:00 GMT</pubDate>
  <media:content url="https://cdn.jsdelivr.net/gh/Leslie-Lu/WeChatOfficialAccount/img/202408182144602.webp" medium="image" type="image/webp"/>
</item>
</channel>
</rss>
